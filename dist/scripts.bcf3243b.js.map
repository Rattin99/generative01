{"version":3,"sources":["node_modules/tinycolor2/tinycolor.js","node_modules/seed-random/index.js","node_modules/simplex-noise/simplex-noise.js","node_modules/defined/index.js","node_modules/canvas-sketch-util/random.js","scripts/lib/math/Vector.js","scripts/lib/math/math.js","scripts/lib/canvas/canvas.js","scripts/lib/utils.js","scripts/lib/sketch.js","scripts/lib/systems/Particle.js","scripts/lib/canvas/canvas-particles.js","scripts/released/variation1.js","scripts/released/variation2.js","scripts/released/domokun.js","scripts/released/variation4.js","scripts/released/variation5.js","scripts/released/variation6.js","scripts/released/rainbow-rake-orbit-mouse.js","scripts/lib/math/grids.js","scripts/released/threeAttractors.js","scripts/released/hiImage01.js","node_modules/nice-color-palettes/100.json","scripts/lib/color/palettes.js","scripts/lib/Timeline.js","scripts/released/windLines.js","scripts/lib/Sketch.js","scripts/released/waves01.js","scripts/lib/canvas/canvas-text.js","scripts/released/lissajous01.js","scripts/lib/math/attractors.js","scripts/released/flow-field-particles.js","scripts/released/flow-field-arcs.js","scripts/lib/canvas/Bitmap.js","scripts/lib/canvas/canvas-paint.js","scripts/lib/canvas/canvas-linespoints.js","scripts/lib/canvas/rendernoise.js","scripts/released/flow-field-image.js","scripts/released/radial-noise.js","scripts/released/flow-field-ribbons.js","scripts/released/flow-field-ribbons-2.js","scripts/lib/math/Point.js","scripts/lib/canvas/Box.js","scripts/lib/canvas/canvas-textures.js","scripts/released/shaded-boxes.js","scripts/released/larrycarlson02.js","scripts/lib/community/curve-calc.js","scripts/lib/math/lineSegments.js","scripts/lib/systems/MeanderingRiver.js","scripts/released/meandering-river-02.js","scripts/released/meandering-river-01.js","scripts/variationsIndex.js","scripts/experiments/marching-squares.js","scripts/index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["fromAngles","theta","phi","Vector","Math","cos","sin","randomDirection","random","PI","asin","min","a","b","x","y","z","max","lerp","fraction","sub","mult","add","fromArray","angleBetween","angleTo","v","sqrt","dot","length","m","c","mag","r","div","cm","setMag","atan2","acos","n","slice","negative","subtract","multiply","divide","cross","unit","Ï€","TAU","abs","tan","pow","round","floor","setSeed","getRandomSeed","console","log","getSeed","golden","checkBoundsLeft","checkBoundsRight","snapNumber","snap","percentage","total","num","houghQuantize","numAngles","quantize","round2","Number","EPSILON","setRandomSeed","s","randomNormalBM","u","value","randomNormalBM2","skew","randomNormalNumberBetween","randomNormalWholeBetween","randomNumberBetween","valueNonZero","randomWholeBetween","randomNumberBetweenMid","randomSign","randomBoolean","randomChance","chance","averageNumArray","arry","reduce","oneOf","i","lowest","acc","highest","createRandomNumberArray","len","Array","from","map","loopingValue","t","pingPontValue","pointOnCircle","normalize","val","normalizeInverse","clamp","invlerp","mapRange","x1","y1","x2","y2","toSinValue","mapToTau","start","end","logInterval","total_intervals","startInterVal","endInterval","minLog","maxLog","scale","result","push","exp","marginify","margin","width","height","pointDistance","pointA","pointB","dx","dy","pointRotateCoord","point","angle","pointAngleFromVelocity","velocityX","velocityY","aFromVector","uvFromAngle","radiansToDegrees","rad","degreesToRadians","deg","scalePointToCanvas","canvasWidth","canvasHeight","zoomFactor","particleXOffset","particleYOffset","create2dNoise","amplitude","frequency","noise2D","create2dNoiseAbs","create3dNoise","noise3D","create3dNoiseAbs","randomPointAround","range","radius","chaikin","input","itr","output","p0","p1","p0x","p0y","p1x","p1y","Q","R","valueCloseTo","testVal","isHiDPI","contextScale","resizeCanvas","canvas","context","window","devicePixelRatio","style","clearCanvas","_","clearRect","fillCanvas","opacity","color","fillStyle","fillRect","background","toRgbString","resetStyles","strokeStyle","lineWidth","setLineDash","lineCap","sharpLines","translate","blendMode","mode","globalCompositeOperation","filter","f","pixel","size","beginPath","arc","fill","setStokeColor","drawLine","strokeWidth","linecap","moveTo","lineTo","stroke","drawLineAngle","drawCircle","drawCircleFilled","drawRect","w","h","rect","drawRectFilled","drawSquareFilled","drawTriangleFilled","half","drawQuadRectFilled","mx","my","quadraticCurveTo","drawRoundRectFilled","corner","drawTestPoint","defaultValue","obj","key","hasOwnProperty","first","middle","last","limitArrayLen","arr","arrLength","MAX_COORD_HISTORY","splice","getArrayValuesFromStart","values","index","getArrayValuesFromEnd","orientation","portrait","landscape","ratio","letter","poster","square","auto","standard","hidpi","sketch","mouse","undefined","isDown","hasStarted","fps","drawRuns","currentVariationFn","currentVariationRes","animationId","canvasSizeFraction","document","getElementById","getContext","getCanvas","getMouse","mouseDown","evt","mouseMove","canvasFrame","getBoundingClientRect","mouseUp","mouseOut","addEventListener","applyCanvasSize","config","innerWidth","innerHeight","newWidth","newHeight","cfgOrientation","cfgRatio","cfgScale","aSide","bSide","run","variation","call","currentDrawLimit","backgroundColor","drawLimit","rendering","targetFpsInterval","lastAnimationFrameTime","checkDrawLimit","startSketch","removeEventListener","setup","render","draw","requestAnimationFrame","renderAtFps","now","Date","elapsed","stop","cancelAnimationFrame","getVariationName","seed","name","windowResize","variationName","Particle","initValues","accelerationX","accelerationY","mass","alpha","rotation","lifetime","drawFn","updateFn","colorFn","rest","props","xHistory","yHistory","oX","oY","g","velocity","fVect","fV","aV","acceleration","pV","mu","normal","vfriction","applyForce","coefficent","area","velUnit","speed","magSq","vdrag","affectDist","dir","distanceSq","strength","force","res","warn","unshift","createRandomParticleValues","vel","edgeBounce","particle","reverseVelocityX","reverseVelocityY","edgeWrap","drawParticlePoint","drawRotatedParticle","ctx","pSaveX","pSaveY","save","rotate","heading","args","restore","connectParticles","pArray","proximity","useAlpha","pA","pB","distance","pColor","setAlpha","toHslString","drawPointTrail","trailLen","aFade","sFade","startX","startY","drawParticleVectors","vmult","amult","drawMouse","drawAttractor","gravityPoint","forceDirectionX","forceDirectionY","tempX","tempY","avoidPoint","attractPoint","variation1","numParticles","particlesArray","canvasCenterX","canvasCenterY","centerRadius","updatePosWithVelocity","variation2","friction","gravity","decay","tweenDamp","intensity","pointPush","getImageDataFromImage","image","drawImage","getImageData","getImageDataColor","imageData","data","domokun","imageSize","png","Image","src","domokunPng","imageZoomFactor","cropColor","pxColor","points","pX","pY","variation4","circles","centerX","centerY","diameter","steps","variation5","variation6","hue","l","drawRake","spacing","rainbowRakeOrbit","attractor","attract","limit","createCirclePoints","offsetX","offsetY","close","startAngle","maxAngle","createGridPointsXY","xMargin","yMargin","columns","rows","gridPoints","colStep","rowStep","col","row","columnWidth","rowHeight","createGridCellsXY","gutter","ceil","createGridPointsUV","position","threeAttractors","attractorDist","leftattractor","midattractor","rightattractor","spikes","hiImage01","sourcePng","particleColor","drag","asTinyColor","brightest","colors","getBrightness","darkest","bicPenBlue","clone","paperWhite","warmWhite","warmPink","coolGreyDark","warmGreyDark","palettes","greyWarm","greyCool","pop","retro_sunset","vapor_wave","thought_provoking","nicePalette","nicepalettes","palette","Object","keys","hslFromRange","Timeline","loop","duration","totalLoopFrames","iterations","time","playhead","frame","elapsedLoops","startTime","windLines","counter","grid","timeline","forEach","wave","startvect","onFrame","createWave","noise","cfrequency","camplitude","drawWaveLine","startx","endx","yorigin","topWave","bottomWave","dots","currentX","currentY","waveColor","lineheight","gradient","createLinearGradient","addColorStop","darken","xstep","dotColor","rnd","lighten","waves01","canvasMiddle","colorBackground","colorTop","colorBottom","waves","waveResolution","waveRows","incrementY","maxY","cosOffset","createWavesRow","idx","mid","distFromCenter","top","bottom","buffer","tinycolor","mix","spin","brighten","textStyles","sansHelvetica","monoCourier","monoLucidia","serifGeorgia","default","small","drawTextFilled","text","font","fillText","measureText","setTextAlignLeftTop","textAlign","textBaseline","setTextAlignAllCenter","Curve","originX","originY","xa","xb","ya","yb","lissajous01","renderBatch","curves","colorCurve","colorText","desaturate","tick","circleX","curve","circleY","roseX","k","roseY","linearYDown","simplexNoise2d","simplexNoise3d","diagLines","sinField","d","cliffordAttractor","jongAttractor","flowAtPoint","fromCenter","canvasMidX","canvasMidY","simplex","createFFParticleCoords","fieldFn","fMag","vlimit","coords","flowFieldParticles","maxSize","createRandomParticle","drawPixel","pcolor","drawParticles","sNoise3d","clr","drawFibers","thick","startR","endR","clockWise","circle","line","flowFieldArcs","renderField","fn","cell","arcColor","lineColor","Bitmap","scaleX","scaleY","scaley","clear","pixelColorRaw","pixelAverageGrey","pixelColor","pixelTheta","low","pixelColorFromCanvas","brightness","splatter","amount","xoff","yoff","lineJoin","turtleLineMode","plotLines","drawPoints","drawConnectedPoints","drawPoint","drawPointsTaper","dist","circleAtPoint","variableCircleAtPoint","freq","amp","drawSegment","segments","weight","seg","drawSegmentTaper","maxWeight","minWeight","resolution","xStep","yStep","xMid","yMid","vect","renderFieldColor","lowColor","highColor","noiseMax","colorMix","fillColor","renderFieldContour","varience","nsteps","rpoints","lowPoints","highPoints","px","py","nheight","flowFieldImage","imageFlow","pixelThetaFromCanvas","init","drawParticle","imagePixelColor","imagePixelBrightness","hslColor","sizeMult","radialNoise","maxRadius","radiusScale","currentRadiusSize","history","imageColor","ox","oy","radScaled","radians","monoColor","offs","drawRibbonPoint","thickness","jitterX","jitterY","drawRibbon","sideA","sideB","starty","endy","rColor","flowFieldRibbons","createRibbon","simplex2d","simplex3d","clifford","jong","ribbonLen","ribbonThickness","rpoint","onCircle","reverse","drawRibbonSegment","segStartX","segStartY","segEndX","segEndY","saturate","segmentGap","segmentData","left","flowFieldRibbons2","maxItterations","currentItteration","Point","defaultMP","right","defaultFlow","boxIndex","Box","children","psize","padding","clip","flowField","region","Path2D","translateX","translateY","distribution","edgeBuffer","isInside","np","intervals","clipping","setTextureClippingMask","getRotatedXYCoords","getRotatedYCoords","texturizeRect","quarter","strokeColor","endValue","numIttr","maxDim","tx","ty","tx2","ty2","spiralRect","fillamount","radIncr","thetaIncr","spirals","stippleRect","j","linesRect","yDelta","yIncrement","yincr","loops","yOff","connectSide","lastCoords","shadedBoxes","boxes","boxwhite","boxbg","boxfg","gridMargin","gridGutter","p","bidx","particles","translateInto","randomPointInside","box","createClip","particleEdgeWrap","removeClip","larrycarlson02","imageWidth","imageHeight","maxX","colorImageTop","colorImageBottom","colorLinesTop","colorLinesBottom","renderImage","border","pxcolor","pxbrightness","bright","isOtherSide","sizeFromPixelBrightness","closePath","renderPoints","getPointsDiagSinWave","xoffset","yoffset","getCurvePoints","tension","numOfSeg","pts","rPos","rLen","Float32Array","cache","cachePtr","st","st2","st3","st23","st32","parse","pt1","pt2","pt3","pt4","t1x","t1y","t2x","t2y","c1","c2","c3","c4","triangleArea2","mCurvature","p2","p3","t4","la","lb","lc","lineSlope","linesIntersect","q","det","lambda","gamma","segmentsIntersect","segment","connectSegments","segs","next","trimSegments","skip","startPointsOnly","getSegPointsMid","e","midX","midY","trimPoints","pointsOrientation","segmentOrientation","segmentFromPoints","pointsFromSegment","a2p","a2V","v2a","a2pA","pa2VA","va2pA","flattenPointArray","unflattenPointArray","createSplinePoints","fpoints","reduceLineFromStart","reduceLineFromEnd","reduceLineEqually","r2","intersect","x3","y3","x4","y4","denominator","ua","ub","MeanderingRiver","initPoints","startingPoints","pointVectors","oxbows","handleOxbows","wrapEnd","fixedEndPoints","measureCurveAdjacent","segCurveMultiplier","mixTangentRatio","mixMagnitude","influenceLimit","pushFlowVectorFn","curveSize","insertionFactor","pointRemoveProx","oxbowProx","oxbowPointIndexProx","noiseMode","noiseFn","noiseStrengthAffect","mixNoiseRatio","maxHistory","storeHistoryEvery","running","channel","sum","diffs","prev","allPoints","curvature","averageMCurvature","getPointsToMeasure","curveDirection","nextPoint","tangent","biangle","bitangent","mVector","nscale","pct","fixedPointsPct","startIndex","startIndexPoints","endIndex","endIndexPoints","middlePoints","influencedPoints","mixVector","curvatureInfluence","infPoint","pushVector","concat","fixed","numInsertPoints","nx","ny","canRemovePoint","newPoints","oxpoints","startLength","oxbowArr","oxacc","oxbow","shrinkPct","ptacc","cp","nop","meanderWrapped","meanderLinear","adjustPointsSpacing","checkForOxbows","shrinkOxbows","addToHistory","flowRight","flowRightToMiddle","createHorizontalPath","incr","midx","midDist","createVerticalPath","midy","meanderingRiver02","rivers","historyStep","wrapped","horizontal","vertical","cs","curvemeasure","curvesize","pointremove","r0","r1","riverColor","closed","step","meanderingRiver01","riverWeight","oxbowColor","outlineColor","tintingColor","flatColor","horizpoints","circlepoints","circular","oColor","oSize","o","variationsIndex","note","marchingSquares","foreColor","getTile","field","normalized","experimentalVariation","saveCanvasCapture","imageURI","toDataURL","setAttribute","href","click","setNote","innerText","getQueryVariable","variable","query","location","search","substring","vars","split","pair","variationKey","variationKeys","vToRun","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","querySelectorAll","module","OVERLAY_ID","OldModule","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","event","JSON","type","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","error","message","overlay","createErrorOverlay","body","appendChild","createElement","stackTrace","innerHTML","getParents","modules","parents","dep","isArray","Function","deps","cached","some","cb"],"mappings":"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","file":"scripts.bcf3243b.js","sourceRoot":"..","sourcesContent":["// TinyColor v1.4.2\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (typeof define === 'function' && define.amd) {\n    define(function () {return tinycolor;});\n}\n// Browser: Expose to window\nelse {\n    window.tinycolor = tinycolor;\n}\n\n})(Math);\n","'use strict';\r\n\r\nvar width = 256;// each RC4 output is 0 <= x < 256\r\nvar chunks = 6;// at least six RC4 outputs for each double\r\nvar digits = 52;// there are 52 significant digits in a double\r\nvar pool = [];// pool: entropy pool starts empty\r\nvar GLOBAL = typeof global === 'undefined' ? window : global;\r\n\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\nvar startdenom = Math.pow(width, chunks),\r\n    significance = Math.pow(2, digits),\r\n    overflow = significance * 2,\r\n    mask = width - 1;\r\n\r\n\r\nvar oldRandom = Math.random;\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\nmodule.exports = function(seed, options) {\r\n  if (options && options.global === true) {\r\n    options.global = false;\r\n    Math.random = module.exports(seed, options);\r\n    options.global = true;\r\n    return Math.random;\r\n  }\r\n  var use_entropy = (options && options.entropy) || false;\r\n  var key = [];\r\n\r\n  // Flatten the seed string or build one from local entropy if needed.\r\n  var shortseed = mixkey(flatten(\r\n    use_entropy ? [seed, tostring(pool)] :\r\n    0 in arguments ? seed : autoseed(), 3), key);\r\n\r\n  // Use the seed to initialize an ARC4 generator.\r\n  var arc4 = new ARC4(key);\r\n\r\n  // Mix the randomness into accumulated entropy.\r\n  mixkey(tostring(arc4.S), pool);\r\n\r\n  // Override Math.random\r\n\r\n  // This function returns a random double in [0, 1) that contains\r\n  // randomness in every bit of the mantissa of the IEEE 754 value.\r\n\r\n  return function() {         // Closure to return a random double:\r\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n        x = 0;                          //   and no 'extra last byte'.\r\n    while (n < significance) {          // Fill up all significant digits by\r\n      n = (n + x) * width;              //   shifting numerator and\r\n      d *= width;                       //   denominator and generating a\r\n      x = arc4.g(1);                    //   new least-significant-byte.\r\n    }\r\n    while (n >= overflow) {             // To avoid rounding up, before adding\r\n      n /= 2;                           //   last byte, shift everything\r\n      d /= 2;                           //   right using integer Math until\r\n      x >>>= 1;                         //   we have exactly the desired bits.\r\n    }\r\n    return (n + x) / d;                 // Form the number within [0, 1).\r\n  };\r\n};\r\n\r\nmodule.exports.resetGlobal = function () {\r\n  Math.random = oldRandom;\r\n};\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n/** @constructor */\r\nfunction ARC4(key) {\r\n  var t, keylen = key.length,\r\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n  // The empty key [] is treated as [0].\r\n  if (!keylen) { key = [keylen++]; }\r\n\r\n  // Set up S using the standard key scheduling algorithm.\r\n  while (i < width) {\r\n    s[i] = i++;\r\n  }\r\n  for (i = 0; i < width; i++) {\r\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n    s[j] = t;\r\n  }\r\n\r\n  // The \"g\" method returns the next (count) outputs as one number.\r\n  (me.g = function(count) {\r\n    // Using instance members instead of closure state nearly doubles speed.\r\n    var t, r = 0,\r\n        i = me.i, j = me.j, s = me.S;\r\n    while (count--) {\r\n      t = s[i = mask & (i + 1)];\r\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n    }\r\n    me.i = i; me.j = j;\r\n    return r;\r\n    // For robust unpredictability discard an initial batch of values.\r\n    // See http://www.rsa.com/rsalabs/node.asp?id=2009\r\n  })(width);\r\n}\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\nfunction flatten(obj, depth) {\r\n  var result = [], typ = (typeof obj)[0], prop;\r\n  if (depth && typ == 'o') {\r\n    for (prop in obj) {\r\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n    }\r\n  }\r\n  return (result.length ? result : typ == 's' ? obj : obj + '\\0');\r\n}\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\nfunction mixkey(seed, key) {\r\n  var stringseed = seed + '', smear, j = 0;\r\n  while (j < stringseed.length) {\r\n    key[mask & j] =\r\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n  }\r\n  return tostring(key);\r\n}\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto if available.\r\n//\r\n/** @param {Uint8Array=} seed */\r\nfunction autoseed(seed) {\r\n  try {\r\n    GLOBAL.crypto.getRandomValues(seed = new Uint8Array(width));\r\n    return tostring(seed);\r\n  } catch (e) {\r\n    return [+new Date, GLOBAL, GLOBAL.navigator && GLOBAL.navigator.plugins,\r\n            GLOBAL.screen, tostring(pool)];\r\n  }\r\n}\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\nfunction tostring(a) {\r\n  return String.fromCharCode.apply(0, a);\r\n}\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to intefere with determinstic PRNG state later,\r\n// seedrandom will not call Math.random on its own again after\r\n// initialization.\r\n//\r\nmixkey(Math.random(), pool);\r\n","/*\n * A fast javascript implementation of simplex noise by Jonas Wagner\n\nBased on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\nWhich is based on example code by Stefan Gustavson (stegu@itn.liu.se).\nWith Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\nBetter rank ordering method by Stefan Gustavson in 2012.\n\n\n Copyright (c) 2018 Jonas Wagner\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n */\n(function() {\n  'use strict';\n\n  var F2 = 0.5 * (Math.sqrt(3.0) - 1.0);\n  var G2 = (3.0 - Math.sqrt(3.0)) / 6.0;\n  var F3 = 1.0 / 3.0;\n  var G3 = 1.0 / 6.0;\n  var F4 = (Math.sqrt(5.0) - 1.0) / 4.0;\n  var G4 = (5.0 - Math.sqrt(5.0)) / 20.0;\n\n  function SimplexNoise(randomOrSeed) {\n    var random;\n    if (typeof randomOrSeed == 'function') {\n      random = randomOrSeed;\n    }\n    else if (randomOrSeed) {\n      random = alea(randomOrSeed);\n    } else {\n      random = Math.random;\n    }\n    this.p = buildPermutationTable(random);\n    this.perm = new Uint8Array(512);\n    this.permMod12 = new Uint8Array(512);\n    for (var i = 0; i < 512; i++) {\n      this.perm[i] = this.p[i & 255];\n      this.permMod12[i] = this.perm[i] % 12;\n    }\n\n  }\n  SimplexNoise.prototype = {\n    grad3: new Float32Array([1, 1, 0,\n      -1, 1, 0,\n      1, -1, 0,\n\n      -1, -1, 0,\n      1, 0, 1,\n      -1, 0, 1,\n\n      1, 0, -1,\n      -1, 0, -1,\n      0, 1, 1,\n\n      0, -1, 1,\n      0, 1, -1,\n      0, -1, -1]),\n    grad4: new Float32Array([0, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1,\n      0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1,\n      1, 0, 1, 1, 1, 0, 1, -1, 1, 0, -1, 1, 1, 0, -1, -1,\n      -1, 0, 1, 1, -1, 0, 1, -1, -1, 0, -1, 1, -1, 0, -1, -1,\n      1, 1, 0, 1, 1, 1, 0, -1, 1, -1, 0, 1, 1, -1, 0, -1,\n      -1, 1, 0, 1, -1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, -1,\n      1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0,\n      -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 0]),\n    noise2D: function(xin, yin) {\n      var permMod12 = this.permMod12;\n      var perm = this.perm;\n      var grad3 = this.grad3;\n      var n0 = 0; // Noise contributions from the three corners\n      var n1 = 0;\n      var n2 = 0;\n      // Skew the input space to determine which simplex cell we're in\n      var s = (xin + yin) * F2; // Hairy factor for 2D\n      var i = Math.floor(xin + s);\n      var j = Math.floor(yin + s);\n      var t = (i + j) * G2;\n      var X0 = i - t; // Unskew the cell origin back to (x,y) space\n      var Y0 = j - t;\n      var x0 = xin - X0; // The x,y distances from the cell origin\n      var y0 = yin - Y0;\n      // For the 2D case, the simplex shape is an equilateral triangle.\n      // Determine which simplex we are in.\n      var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n      if (x0 > y0) {\n        i1 = 1;\n        j1 = 0;\n      } // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n      else {\n        i1 = 0;\n        j1 = 1;\n      } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n      // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n      // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n      // c = (3-sqrt(3))/6\n      var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n      var y1 = y0 - j1 + G2;\n      var x2 = x0 - 1.0 + 2.0 * G2; // Offsets for last corner in (x,y) unskewed coords\n      var y2 = y0 - 1.0 + 2.0 * G2;\n      // Work out the hashed gradient indices of the three simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      // Calculate the contribution from the three corners\n      var t0 = 0.5 - x0 * x0 - y0 * y0;\n      if (t0 >= 0) {\n        var gi0 = permMod12[ii + perm[jj]] * 3;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0); // (x,y) of grad3 used for 2D gradient\n      }\n      var t1 = 0.5 - x1 * x1 - y1 * y1;\n      if (t1 >= 0) {\n        var gi1 = permMod12[ii + i1 + perm[jj + j1]] * 3;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1);\n      }\n      var t2 = 0.5 - x2 * x2 - y2 * y2;\n      if (t2 >= 0) {\n        var gi2 = permMod12[ii + 1 + perm[jj + 1]] * 3;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2);\n      }\n      // Add contributions from each corner to get the final noise value.\n      // The result is scaled to return values in the interval [-1,1].\n      return 70.0 * (n0 + n1 + n2);\n    },\n    // 3D simplex noise\n    noise3D: function(xin, yin, zin) {\n      var permMod12 = this.permMod12;\n      var perm = this.perm;\n      var grad3 = this.grad3;\n      var n0, n1, n2, n3; // Noise contributions from the four corners\n      // Skew the input space to determine which simplex cell we're in\n      var s = (xin + yin + zin) * F3; // Very nice and simple skew factor for 3D\n      var i = Math.floor(xin + s);\n      var j = Math.floor(yin + s);\n      var k = Math.floor(zin + s);\n      var t = (i + j + k) * G3;\n      var X0 = i - t; // Unskew the cell origin back to (x,y,z) space\n      var Y0 = j - t;\n      var Z0 = k - t;\n      var x0 = xin - X0; // The x,y,z distances from the cell origin\n      var y0 = yin - Y0;\n      var z0 = zin - Z0;\n      // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n      // Determine which simplex we are in.\n      var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n      var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n      if (x0 >= y0) {\n        if (y0 >= z0) {\n          i1 = 1;\n          j1 = 0;\n          k1 = 0;\n          i2 = 1;\n          j2 = 1;\n          k2 = 0;\n        } // X Y Z order\n        else if (x0 >= z0) {\n          i1 = 1;\n          j1 = 0;\n          k1 = 0;\n          i2 = 1;\n          j2 = 0;\n          k2 = 1;\n        } // X Z Y order\n        else {\n          i1 = 0;\n          j1 = 0;\n          k1 = 1;\n          i2 = 1;\n          j2 = 0;\n          k2 = 1;\n        } // Z X Y order\n      }\n      else { // x0<y0\n        if (y0 < z0) {\n          i1 = 0;\n          j1 = 0;\n          k1 = 1;\n          i2 = 0;\n          j2 = 1;\n          k2 = 1;\n        } // Z Y X order\n        else if (x0 < z0) {\n          i1 = 0;\n          j1 = 1;\n          k1 = 0;\n          i2 = 0;\n          j2 = 1;\n          k2 = 1;\n        } // Y Z X order\n        else {\n          i1 = 0;\n          j1 = 1;\n          k1 = 0;\n          i2 = 1;\n          j2 = 1;\n          k2 = 0;\n        } // Y X Z order\n      }\n      // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n      // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n      // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n      // c = 1/6.\n      var x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords\n      var y1 = y0 - j1 + G3;\n      var z1 = z0 - k1 + G3;\n      var x2 = x0 - i2 + 2.0 * G3; // Offsets for third corner in (x,y,z) coords\n      var y2 = y0 - j2 + 2.0 * G3;\n      var z2 = z0 - k2 + 2.0 * G3;\n      var x3 = x0 - 1.0 + 3.0 * G3; // Offsets for last corner in (x,y,z) coords\n      var y3 = y0 - 1.0 + 3.0 * G3;\n      var z3 = z0 - 1.0 + 3.0 * G3;\n      // Work out the hashed gradient indices of the four simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      var kk = k & 255;\n      // Calculate the contribution from the four corners\n      var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n      if (t0 < 0) n0 = 0.0;\n      else {\n        var gi0 = permMod12[ii + perm[jj + perm[kk]]] * 3;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0 + grad3[gi0 + 2] * z0);\n      }\n      var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n      if (t1 < 0) n1 = 0.0;\n      else {\n        var gi1 = permMod12[ii + i1 + perm[jj + j1 + perm[kk + k1]]] * 3;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1 + grad3[gi1 + 2] * z1);\n      }\n      var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n      if (t2 < 0) n2 = 0.0;\n      else {\n        var gi2 = permMod12[ii + i2 + perm[jj + j2 + perm[kk + k2]]] * 3;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2 + grad3[gi2 + 2] * z2);\n      }\n      var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n      if (t3 < 0) n3 = 0.0;\n      else {\n        var gi3 = permMod12[ii + 1 + perm[jj + 1 + perm[kk + 1]]] * 3;\n        t3 *= t3;\n        n3 = t3 * t3 * (grad3[gi3] * x3 + grad3[gi3 + 1] * y3 + grad3[gi3 + 2] * z3);\n      }\n      // Add contributions from each corner to get the final noise value.\n      // The result is scaled to stay just inside [-1,1]\n      return 32.0 * (n0 + n1 + n2 + n3);\n    },\n    // 4D simplex noise, better simplex rank ordering method 2012-03-09\n    noise4D: function(x, y, z, w) {\n      var perm = this.perm;\n      var grad4 = this.grad4;\n\n      var n0, n1, n2, n3, n4; // Noise contributions from the five corners\n      // Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in\n      var s = (x + y + z + w) * F4; // Factor for 4D skewing\n      var i = Math.floor(x + s);\n      var j = Math.floor(y + s);\n      var k = Math.floor(z + s);\n      var l = Math.floor(w + s);\n      var t = (i + j + k + l) * G4; // Factor for 4D unskewing\n      var X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space\n      var Y0 = j - t;\n      var Z0 = k - t;\n      var W0 = l - t;\n      var x0 = x - X0; // The x,y,z,w distances from the cell origin\n      var y0 = y - Y0;\n      var z0 = z - Z0;\n      var w0 = w - W0;\n      // For the 4D case, the simplex is a 4D shape I won't even try to describe.\n      // To find out which of the 24 possible simplices we're in, we need to\n      // determine the magnitude ordering of x0, y0, z0 and w0.\n      // Six pair-wise comparisons are performed between each possible pair\n      // of the four coordinates, and the results are used to rank the numbers.\n      var rankx = 0;\n      var ranky = 0;\n      var rankz = 0;\n      var rankw = 0;\n      if (x0 > y0) rankx++;\n      else ranky++;\n      if (x0 > z0) rankx++;\n      else rankz++;\n      if (x0 > w0) rankx++;\n      else rankw++;\n      if (y0 > z0) ranky++;\n      else rankz++;\n      if (y0 > w0) ranky++;\n      else rankw++;\n      if (z0 > w0) rankz++;\n      else rankw++;\n      var i1, j1, k1, l1; // The integer offsets for the second simplex corner\n      var i2, j2, k2, l2; // The integer offsets for the third simplex corner\n      var i3, j3, k3, l3; // The integer offsets for the fourth simplex corner\n      // simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.\n      // Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w\n      // impossible. Only the 24 indices which have non-zero entries make any sense.\n      // We use a thresholding to set the coordinates in turn from the largest magnitude.\n      // Rank 3 denotes the largest coordinate.\n      i1 = rankx >= 3 ? 1 : 0;\n      j1 = ranky >= 3 ? 1 : 0;\n      k1 = rankz >= 3 ? 1 : 0;\n      l1 = rankw >= 3 ? 1 : 0;\n      // Rank 2 denotes the second largest coordinate.\n      i2 = rankx >= 2 ? 1 : 0;\n      j2 = ranky >= 2 ? 1 : 0;\n      k2 = rankz >= 2 ? 1 : 0;\n      l2 = rankw >= 2 ? 1 : 0;\n      // Rank 1 denotes the second smallest coordinate.\n      i3 = rankx >= 1 ? 1 : 0;\n      j3 = ranky >= 1 ? 1 : 0;\n      k3 = rankz >= 1 ? 1 : 0;\n      l3 = rankw >= 1 ? 1 : 0;\n      // The fifth corner has all coordinate offsets = 1, so no need to compute that.\n      var x1 = x0 - i1 + G4; // Offsets for second corner in (x,y,z,w) coords\n      var y1 = y0 - j1 + G4;\n      var z1 = z0 - k1 + G4;\n      var w1 = w0 - l1 + G4;\n      var x2 = x0 - i2 + 2.0 * G4; // Offsets for third corner in (x,y,z,w) coords\n      var y2 = y0 - j2 + 2.0 * G4;\n      var z2 = z0 - k2 + 2.0 * G4;\n      var w2 = w0 - l2 + 2.0 * G4;\n      var x3 = x0 - i3 + 3.0 * G4; // Offsets for fourth corner in (x,y,z,w) coords\n      var y3 = y0 - j3 + 3.0 * G4;\n      var z3 = z0 - k3 + 3.0 * G4;\n      var w3 = w0 - l3 + 3.0 * G4;\n      var x4 = x0 - 1.0 + 4.0 * G4; // Offsets for last corner in (x,y,z,w) coords\n      var y4 = y0 - 1.0 + 4.0 * G4;\n      var z4 = z0 - 1.0 + 4.0 * G4;\n      var w4 = w0 - 1.0 + 4.0 * G4;\n      // Work out the hashed gradient indices of the five simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      var kk = k & 255;\n      var ll = l & 255;\n      // Calculate the contribution from the five corners\n      var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;\n      if (t0 < 0) n0 = 0.0;\n      else {\n        var gi0 = (perm[ii + perm[jj + perm[kk + perm[ll]]]] % 32) * 4;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad4[gi0] * x0 + grad4[gi0 + 1] * y0 + grad4[gi0 + 2] * z0 + grad4[gi0 + 3] * w0);\n      }\n      var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;\n      if (t1 < 0) n1 = 0.0;\n      else {\n        var gi1 = (perm[ii + i1 + perm[jj + j1 + perm[kk + k1 + perm[ll + l1]]]] % 32) * 4;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad4[gi1] * x1 + grad4[gi1 + 1] * y1 + grad4[gi1 + 2] * z1 + grad4[gi1 + 3] * w1);\n      }\n      var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;\n      if (t2 < 0) n2 = 0.0;\n      else {\n        var gi2 = (perm[ii + i2 + perm[jj + j2 + perm[kk + k2 + perm[ll + l2]]]] % 32) * 4;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad4[gi2] * x2 + grad4[gi2 + 1] * y2 + grad4[gi2 + 2] * z2 + grad4[gi2 + 3] * w2);\n      }\n      var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;\n      if (t3 < 0) n3 = 0.0;\n      else {\n        var gi3 = (perm[ii + i3 + perm[jj + j3 + perm[kk + k3 + perm[ll + l3]]]] % 32) * 4;\n        t3 *= t3;\n        n3 = t3 * t3 * (grad4[gi3] * x3 + grad4[gi3 + 1] * y3 + grad4[gi3 + 2] * z3 + grad4[gi3 + 3] * w3);\n      }\n      var t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;\n      if (t4 < 0) n4 = 0.0;\n      else {\n        var gi4 = (perm[ii + 1 + perm[jj + 1 + perm[kk + 1 + perm[ll + 1]]]] % 32) * 4;\n        t4 *= t4;\n        n4 = t4 * t4 * (grad4[gi4] * x4 + grad4[gi4 + 1] * y4 + grad4[gi4 + 2] * z4 + grad4[gi4 + 3] * w4);\n      }\n      // Sum up and scale the result to cover the range [-1,1]\n      return 27.0 * (n0 + n1 + n2 + n3 + n4);\n    }\n  };\n\n  function buildPermutationTable(random) {\n    var i;\n    var p = new Uint8Array(256);\n    for (i = 0; i < 256; i++) {\n      p[i] = i;\n    }\n    for (i = 0; i < 255; i++) {\n      var r = i + ~~(random() * (256 - i));\n      var aux = p[i];\n      p[i] = p[r];\n      p[r] = aux;\n    }\n    return p;\n  }\n  SimplexNoise._buildPermutationTable = buildPermutationTable;\n\n  function alea() {\n    // Johannes BaagÃ¸e <baagoe@baagoe.com>, 2010\n    var s0 = 0;\n    var s1 = 0;\n    var s2 = 0;\n    var c = 1;\n\n    var mash = masher();\n    s0 = mash(' ');\n    s1 = mash(' ');\n    s2 = mash(' ');\n\n    for (var i = 0; i < arguments.length; i++) {\n      s0 -= mash(arguments[i]);\n      if (s0 < 0) {\n        s0 += 1;\n      }\n      s1 -= mash(arguments[i]);\n      if (s1 < 0) {\n        s1 += 1;\n      }\n      s2 -= mash(arguments[i]);\n      if (s2 < 0) {\n        s2 += 1;\n      }\n    }\n    mash = null;\n    return function() {\n      var t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\n      s0 = s1;\n      s1 = s2;\n      return s2 = t - (c = t | 0);\n    };\n  }\n  function masher() {\n    var n = 0xefc8249d;\n    return function(data) {\n      data = data.toString();\n      for (var i = 0; i < data.length; i++) {\n        n += data.charCodeAt(i);\n        var h = 0.02519603282416938 * n;\n        n = h >>> 0;\n        h -= n;\n        h *= n;\n        n = h >>> 0;\n        h -= n;\n        n += h * 0x100000000; // 2^32\n      }\n      return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n    };\n  }\n\n  // amd\n  if (typeof define !== 'undefined' && define.amd) define(function() {return SimplexNoise;});\n  // common js\n  if (typeof exports !== 'undefined') exports.SimplexNoise = SimplexNoise;\n  // browser\n  else if (typeof window !== 'undefined') window.SimplexNoise = SimplexNoise;\n  // nodejs\n  if (typeof module !== 'undefined') {\n    module.exports = SimplexNoise;\n  }\n\n})();\n","module.exports = function () {\n    for (var i = 0; i < arguments.length; i++) {\n        if (arguments[i] !== undefined) return arguments[i];\n    }\n};\n","var seedRandom = require('seed-random');\nvar SimplexNoise = require('simplex-noise');\nvar defined = require('defined');\n\nfunction createRandom (defaultSeed) {\n  defaultSeed = defined(defaultSeed, null);\n  var defaultRandom = Math.random;\n  var currentSeed;\n  var currentRandom;\n  var noiseGenerator;\n  var _nextGaussian = null;\n  var _hasNextGaussian = false;\n\n  setSeed(defaultSeed);\n\n  return {\n    value: value,\n    createRandom: function (defaultSeed) {\n      return createRandom(defaultSeed);\n    },\n    setSeed: setSeed,\n    getSeed: getSeed,\n    getRandomSeed: getRandomSeed,\n    valueNonZero: valueNonZero,\n    permuteNoise: permuteNoise,\n    noise1D: noise1D,\n    noise2D: noise2D,\n    noise3D: noise3D,\n    noise4D: noise4D,\n    sign: sign,\n    boolean: boolean,\n    chance: chance,\n    range: range,\n    rangeFloor: rangeFloor,\n    pick: pick,\n    shuffle: shuffle,\n    onCircle: onCircle,\n    insideCircle: insideCircle,\n    onSphere: onSphere,\n    insideSphere: insideSphere,\n    quaternion: quaternion,\n    weighted: weighted,\n    weightedSet: weightedSet,\n    weightedSetIndex: weightedSetIndex,\n    gaussian: gaussian\n  };\n\n  function setSeed (seed, opt) {\n    if (typeof seed === 'number' || typeof seed === 'string') {\n      currentSeed = seed;\n      currentRandom = seedRandom(currentSeed, opt);\n    } else {\n      currentSeed = undefined;\n      currentRandom = defaultRandom;\n    }\n    noiseGenerator = createNoise();\n    _nextGaussian = null;\n    _hasNextGaussian = false;\n  }\n\n  function value () {\n    return currentRandom();\n  }\n\n  function valueNonZero () {\n    var u = 0;\n    while (u === 0) u = value();\n    return u;\n  }\n\n  function getSeed () {\n    return currentSeed;\n  }\n\n  function getRandomSeed () {\n    var seed = String(Math.floor(Math.random() * 1000000));\n    return seed;\n  }\n\n  function createNoise () {\n    return new SimplexNoise(currentRandom);\n  }\n\n  function permuteNoise () {\n    noiseGenerator = createNoise();\n  }\n\n  function noise1D (x, frequency, amplitude) {\n    if (!isFinite(x)) throw new TypeError('x component for noise() must be finite');\n    frequency = defined(frequency, 1);\n    amplitude = defined(amplitude, 1);\n    return amplitude * noiseGenerator.noise2D(x * frequency, 0);\n  }\n\n  function noise2D (x, y, frequency, amplitude) {\n    if (!isFinite(x)) throw new TypeError('x component for noise() must be finite');\n    if (!isFinite(y)) throw new TypeError('y component for noise() must be finite');\n    frequency = defined(frequency, 1);\n    amplitude = defined(amplitude, 1);\n    return amplitude * noiseGenerator.noise2D(x * frequency, y * frequency);\n  }\n\n  function noise3D (x, y, z, frequency, amplitude) {\n    if (!isFinite(x)) throw new TypeError('x component for noise() must be finite');\n    if (!isFinite(y)) throw new TypeError('y component for noise() must be finite');\n    if (!isFinite(z)) throw new TypeError('z component for noise() must be finite');\n    frequency = defined(frequency, 1);\n    amplitude = defined(amplitude, 1);\n    return amplitude * noiseGenerator.noise3D(\n      x * frequency,\n      y * frequency,\n      z * frequency\n    );\n  }\n\n  function noise4D (x, y, z, w, frequency, amplitude) {\n    if (!isFinite(x)) throw new TypeError('x component for noise() must be finite');\n    if (!isFinite(y)) throw new TypeError('y component for noise() must be finite');\n    if (!isFinite(z)) throw new TypeError('z component for noise() must be finite');\n    if (!isFinite(w)) throw new TypeError('w component for noise() must be finite');\n    frequency = defined(frequency, 1);\n    amplitude = defined(amplitude, 1);\n    return amplitude * noiseGenerator.noise4D(\n      x * frequency,\n      y * frequency,\n      z * frequency,\n      w * frequency\n    );\n  }\n\n  function sign () {\n    return boolean() ? 1 : -1;\n  }\n\n  function boolean () {\n    return value() > 0.5;\n  }\n\n  function chance (n) {\n    n = defined(n, 0.5);\n    if (typeof n !== 'number') throw new TypeError('expected n to be a number');\n    return value() < n;\n  }\n\n  function range (min, max) {\n    if (max === undefined) {\n      max = min;\n      min = 0;\n    }\n\n    if (typeof min !== 'number' || typeof max !== 'number') {\n      throw new TypeError('Expected all arguments to be numbers');\n    }\n\n    return value() * (max - min) + min;\n  }\n\n  function rangeFloor (min, max) {\n    if (max === undefined) {\n      max = min;\n      min = 0;\n    }\n\n    if (typeof min !== 'number' || typeof max !== 'number') {\n      throw new TypeError('Expected all arguments to be numbers');\n    }\n\n    return Math.floor(range(min, max));\n  }\n\n  function pick (array) {\n    if (array.length === 0) return undefined;\n    return array[rangeFloor(0, array.length)];\n  }\n\n  function shuffle (arr) {\n    if (!Array.isArray(arr)) {\n      throw new TypeError('Expected Array, got ' + typeof arr);\n    }\n\n    var rand;\n    var tmp;\n    var len = arr.length;\n    var ret = arr.slice();\n    while (len) {\n      rand = Math.floor(value() * len--);\n      tmp = ret[len];\n      ret[len] = ret[rand];\n      ret[rand] = tmp;\n    }\n    return ret;\n  }\n\n  function onCircle (radius, out) {\n    radius = defined(radius, 1);\n    out = out || [];\n    var theta = value() * 2.0 * Math.PI;\n    out[0] = radius * Math.cos(theta);\n    out[1] = radius * Math.sin(theta);\n    return out;\n  }\n\n  function insideCircle (radius, out) {\n    radius = defined(radius, 1);\n    out = out || [];\n    onCircle(1, out);\n    var r = radius * Math.sqrt(value());\n    out[0] *= r;\n    out[1] *= r;\n    return out;\n  }\n\n  function onSphere (radius, out) {\n    radius = defined(radius, 1);\n    out = out || [];\n    var u = value() * Math.PI * 2;\n    var v = value() * 2 - 1;\n    var phi = u;\n    var theta = Math.acos(v);\n    out[0] = radius * Math.sin(theta) * Math.cos(phi);\n    out[1] = radius * Math.sin(theta) * Math.sin(phi);\n    out[2] = radius * Math.cos(theta);\n    return out;\n  }\n\n  function insideSphere (radius, out) {\n    radius = defined(radius, 1);\n    out = out || [];\n    var u = value() * Math.PI * 2;\n    var v = value() * 2 - 1;\n    var k = value();\n\n    var phi = u;\n    var theta = Math.acos(v);\n    var r = radius * Math.cbrt(k);\n    out[0] = r * Math.sin(theta) * Math.cos(phi);\n    out[1] = r * Math.sin(theta) * Math.sin(phi);\n    out[2] = r * Math.cos(theta);\n    return out;\n  }\n\n  function quaternion (out) {\n    out = out || [];\n    var u1 = value();\n    var u2 = value();\n    var u3 = value();\n\n    var sq1 = Math.sqrt(1 - u1);\n    var sq2 = Math.sqrt(u1);\n\n    var theta1 = Math.PI * 2 * u2;\n    var theta2 = Math.PI * 2 * u3;\n\n    var x = Math.sin(theta1) * sq1;\n    var y = Math.cos(theta1) * sq1;\n    var z = Math.sin(theta2) * sq2;\n    var w = Math.cos(theta2) * sq2;\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n  }\n\n  function weightedSet (set) {\n    set = set || [];\n    if (set.length === 0) return null;\n    return set[weightedSetIndex(set)].value;\n  }\n\n  function weightedSetIndex (set) {\n    set = set || [];\n    if (set.length === 0) return -1;\n    return weighted(set.map(function (s) {\n      return s.weight;\n    }));\n  }\n\n  function weighted (weights) {\n    weights = weights || [];\n    if (weights.length === 0) return -1;\n    var totalWeight = 0;\n    var i;\n\n    for (i = 0; i < weights.length; i++) {\n      totalWeight += weights[i];\n    }\n\n    if (totalWeight <= 0) throw new Error('Weights must sum to > 0');\n\n    var random = value() * totalWeight;\n    for (i = 0; i < weights.length; i++) {\n      if (random < weights[i]) {\n        return i;\n      }\n      random -= weights[i];\n    }\n    return 0;\n  }\n\n  function gaussian (mean, standardDerivation) {\n    mean = defined(mean, 0);\n    standardDerivation = defined(standardDerivation, 1);\n\n    // https://github.com/openjdk-mirror/jdk7u-jdk/blob/f4d80957e89a19a29bb9f9807d2a28351ed7f7df/src/share/classes/java/util/Random.java#L496\n    if (_hasNextGaussian) {\n      _hasNextGaussian = false;\n      var result = _nextGaussian;\n      _nextGaussian = null;\n      return mean + standardDerivation * result;\n    } else {\n      var v1 = 0;\n      var v2 = 0;\n      var s = 0;\n      do {\n        v1 = value() * 2 - 1; // between -1 and 1\n        v2 = value() * 2 - 1; // between -1 and 1\n        s = v1 * v1 + v2 * v2;\n      } while (s >= 1 || s === 0);\n      var multiplier = Math.sqrt(-2 * Math.log(s) / s);\n      _nextGaussian = (v2 * multiplier);\n      _hasNextGaussian = true;\n      return mean + standardDerivation * (v1 * multiplier);\n    }\n  }\n}\n\nmodule.exports = createRandom();\n","// Vector class originally from https://evanw.github.io/lightgl.js/docs/vector.html\n// Edited and expanded to match p5's vectors\n// ref - p5 vector https://p5js.org/reference/#/p5.Vector\n// https://www.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math\n\nconst fromAngles = (theta, phi) =>\n    new Vector(Math.cos(theta) * Math.cos(phi), Math.sin(phi), Math.sin(theta) * Math.cos(phi));\nconst randomDirection = () => fromAngles(Math.random() * Math.PI * 2, Math.asin(Math.random() * 2 - 1));\nconst min = (a, b) => new Vector(Math.min(a.x, b.x), Math.min(a.y, b.y), Math.min(a.z, b.z));\nconst max = (a, b) => new Vector(Math.max(a.x, b.x), Math.max(a.y, b.y), Math.max(a.z, b.z));\nconst lerp = (a, b, fraction) => b.sub(a).mult(fraction).add(a);\nconst fromArray = (a) => new Vector(a[0], a[1], a[2]);\nconst angleBetween = (a, b) => a.angleTo(b);\n\nexport class Vector {\n    constructor(x, y, z) {\n        this.x = x || 0;\n        this.y = y || 0;\n        this.z = z || 0;\n    }\n\n    negative() {\n        return new Vector(-this.x, -this.y, -this.z);\n    }\n\n    add(v) {\n        if (v instanceof Vector) return new Vector(this.x + v.x, this.y + v.y, this.z + v.z);\n        return new Vector(this.x + v, this.y + v, this.z + v);\n    }\n\n    sub(v) {\n        if (v instanceof Vector) return new Vector(this.x - v.x, this.y - v.y, this.z - v.z);\n        return new Vector(this.x - v, this.y - v, this.z - v);\n    }\n\n    mult(v) {\n        if (v instanceof Vector) return new Vector(this.x * v.x, this.y * v.y, this.z * v.z);\n        return new Vector(this.x * v, this.y * v, this.z * v);\n    }\n\n    // https://github.com/openrndr/openrndr/blob/master/openrndr-math/src/main/kotlin/org/openrndr/math/Vector2.kt\n    mix(b, fraction) {\n        // return this.mult(1 - mix).add(o.mult(mix));\n        return lerp(this, b, fraction);\n    }\n\n    div(v) {\n        if (v instanceof Vector) return new Vector(this.x / v.x, this.y / v.y, this.z / v.z);\n        return new Vector(this.x / v, this.y / v, this.z / v);\n    }\n\n    equals(v) {\n        return this.x === v.x && this.y === v.y && this.z === v.z;\n    }\n\n    dot(v) {\n        return this.x * v.x + this.y * v.y + this.z * v.z;\n    }\n\n    cross(v) {\n        return new Vector(this.y * v.z - this.z * v.y, this.z * v.x - this.x * v.z, this.x * v.y - this.y * v.x);\n    }\n\n    length() {\n        return Math.sqrt(this.dot(this));\n    }\n\n    mag() {\n        return this.length();\n    }\n\n    magSq() {\n        const m = this.length();\n        return m * m;\n    }\n\n    setMag(m) {\n        const c = this.mag();\n        const r = m / c;\n        return this.mult(r);\n    }\n\n    normalize() {\n        let mag = this.mag();\n        mag = mag || 1;\n        return this.div(mag);\n    }\n\n    unit() {\n        return this.div(this.length());\n    }\n\n    min() {\n        return Math.min(Math.min(this.x, this.y), this.z);\n    }\n\n    max() {\n        return Math.max(Math.max(this.x, this.y), this.z);\n    }\n\n    limit(v) {\n        const cm = this.mag();\n        if (cm > v) {\n            return this.setMag(v);\n        }\n        return this;\n    }\n\n    angle() {\n        return Math.atan2(this.y, this.x);\n    }\n\n    toAngles() {\n        return {\n            theta: Math.atan2(this.z, this.x),\n            phi: Math.asin(this.y / this.length()),\n        };\n    }\n\n    angleTo(a) {\n        return Math.acos(this.dot(a) / (this.length() * a.length()));\n    }\n\n    toArray(n) {\n        return [this.x, this.y, this.z].slice(0, n || 3);\n    }\n\n    clone() {\n        return new Vector(this.x, this.y, this.z);\n    }\n}\n\nconst negative = (a, b) => {\n    b.x = -a.x;\n    b.y = -a.y;\n    b.z = -a.z;\n    return b;\n};\nconst add = (a, b, c) => {\n    if (b instanceof Vector) {\n        c.x = a.x + b.x;\n        c.y = a.y + b.y;\n        c.z = a.z + b.z;\n    } else {\n        c.x = a.x + b;\n        c.y = a.y + b;\n        c.z = a.z + b;\n    }\n    return c;\n};\nconst subtract = (a, b, c) => {\n    if (b instanceof Vector) {\n        c.x = a.x - b.x;\n        c.y = a.y - b.y;\n        c.z = a.z - b.z;\n    } else {\n        c.x = a.x - b;\n        c.y = a.y - b;\n        c.z = a.z - b;\n    }\n    return c;\n};\nconst multiply = (a, b, c) => {\n    if (b instanceof Vector) {\n        c.x = a.x * b.x;\n        c.y = a.y * b.y;\n        c.z = a.z * b.z;\n    } else {\n        c.x = a.x * b;\n        c.y = a.y * b;\n        c.z = a.z * b;\n    }\n    return c;\n};\nconst divide = (a, b, c) => {\n    if (b instanceof Vector) {\n        c.x = a.x / b.x;\n        c.y = a.y / b.y;\n        c.z = a.z / b.z;\n    } else {\n        c.x = a.x / b;\n        c.y = a.y / b;\n        c.z = a.z / b;\n    }\n    return c;\n};\nconst cross = (a, b, c) => {\n    c.x = a.y * b.z - a.z * b.y;\n    c.y = a.z * b.x - a.x * b.z;\n    c.z = a.x * b.y - a.y * b.x;\n    return c;\n};\nconst unit = (a, b) => {\n    const length = a.length();\n    b.x = a.x / length;\n    b.y = a.y / length;\n    b.z = a.z / length;\n    return b;\n};\n","/*\n  Math Snippets\n  https://github.com/terkelg/math\n*/\n\nimport random from 'canvas-sketch-util/random';\nimport { Vector } from './Vector';\n\n// Math aliases\nconst Ï€ = Math.PI;\nconst { PI } = Math;\nconst TAU = Math.PI * 2;\nconst { abs } = Math;\nconst { sin } = Math;\nconst { cos } = Math;\nconst { tan } = Math;\nconst { pow } = Math;\nconst { round } = Math;\nconst { floor } = Math;\n\nrandom.setSeed(random.getRandomSeed());\nconsole.log(`Using seed ${random.getSeed()}`);\n\n// Ï† phi\nexport const golden = 1.6180339887498948482;\n// g angles: 222.5, 137.5\n\nexport const checkBoundsLeft = (b, v) => (v < b ? b : v);\nexport const checkBoundsRight = (b, v) => (v > b ? b : v);\n\nexport const snapNumber = (snap, n) => Math.floor(n / snap) * snap;\n\nexport const percentage = (total, num) => Math.round(num * (total / 100));\n\n// Hough transform\n// https://stackoverflow.com/questions/24372921/how-to-calculate-quantized-angle\nexport const houghQuantize = (numAngles, theta) => Math.floor((numAngles * theta) / TAU + 0.5);\n// https://stackoverflow.com/questions/47047691/how-to-quantize-directions-in-canny-edge-detector-in-python\nexport const quantize = (numAngles, theta) => (Math.round(theta * (numAngles / Math.PI)) + numAngles) % numAngles;\n\nexport const round2 = (num) => Math.round((num + Number.EPSILON) * 100) / 100;\n\nexport const getRandomSeed = () => random.getSeed();\nexport const setRandomSeed = (s) => random.setRandomSeed(s);\n\n// Box-Muller Transform\n// https://stackoverflow.com/questions/25582882/javascript-math-random-normal-distribution-gaussian-bell-curve\nexport const randomNormalBM = () => {\n    let u = 0;\n    let v = 0;\n    while (u === 0) u = random.value(); // Converting [0,1) to (0,1)\n    while (v === 0) v = random.value();\n    let num = Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);\n    num = num / 10.0 + 0.5; // Translate to 0 -> 1\n    if (num > 1 || num < 0) return randomNormalBM(); // resample between 0 and 1\n    return num;\n};\n\n// same source as above\n// better solution https://spin.atomicobject.com/2019/09/30/skew-normal-prng-javascript/\nexport const randomNormalBM2 = (min = 0, max = 1, skew = 1) => {\n    let u = 0;\n    let v = 0;\n    while (u === 0) u = random.value(); // Converting [0,1) to (0,1)\n    while (v === 0) v = random.value();\n    let num = Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);\n\n    num = num / 10.0 + 0.5; // Translate to 0 -> 1\n    if (num > 1 || num < 0) {\n        // // resample between 0 and 1 if out of range\n        num = randomNormalBM2(min, max, skew);\n    } else {\n        num = Math.pow(num, skew); // Skew\n        num *= max - min; // Stretch to fill range\n        num += min; // offset to min\n    }\n    return num;\n};\n\nexport const randomNormalNumberBetween = (min, max) => randomNormalBM() * (max - min) + min;\nexport const randomNormalWholeBetween = (min, max) => Math.round(randomNormalBM() * (max - min) + min);\n\nexport const randomNumberBetween = (min, max) => random.valueNonZero() * (max - min) + min;\nexport const randomWholeBetween = (min, max) => Math.floor(random.value() * (max - min) + min);\n\nexport const randomNumberBetweenMid = (min, max) => randomNumberBetween(min, max) - max / 2;\n\nexport const randomSign = () => (Math.round(random.value()) === 1 ? 1 : -1);\nexport const randomBoolean = () => Math.round(random.value()) === 1;\nexport const randomChance = (chance = 0.5) => random.chance(chance);\n\nexport const averageNumArray = (arry) => arry.reduce((a, b) => a + b) / arry.length;\n\nexport const oneOf = (arry) => {\n    const i = randomWholeBetween(0, arry.length - 1);\n    return arry[i];\n};\n\nexport const lowest = (arry) =>\n    arry.reduce((acc, v) => {\n        if (v < acc) {\n            acc = v;\n        }\n        return acc;\n    }, 0);\n\nexport const highest = (arry) =>\n    arry.reduce((acc, v) => {\n        if (v > acc) {\n            acc = v;\n        }\n        return acc;\n    }, 0);\n\nexport const createRandomNumberArray = (len, min, max) =>\n    Array.from(new Array(len)).map(() => randomNumberBetween(min, max));\n\n// -> -1 ... 1\nexport const loopingValue = (t, m = 0.5) => Math.sin(t * m);\n\n// t is 0-1, -> -1 ... 1\nexport const pingPontValue = (t) => Math.sin(t * Math.PI);\n\n// x,y offsets for the current circle position\nexport const pointOnCircle = (x, y, r, a) => ({ x: r * Math.sin(a) + x, y: r * Math.cos(a) + y });\n\n// returns value between 0-1, 250,500,0 => .5\nexport const normalize = (min, max, val) => (val - min) / (max - min);\nexport const normalizeInverse = (min, max, val) => 1 - normalize(min, max, val);\n\n// https://twitter.com/mattdesl/status/1031305279227478016\n// https://www.trysmudford.com/blog/linear-interpolation-functions/\n// lerp(20, 80, 0.5) // 40\nexport const lerp = (x, y, a) => x * (1 - a) + y * a;\n\nexport const clamp = (min = 0, max = 1, a) => Math.min(max, Math.max(min, a));\n\n// invlerp(50, 100, 75)  // 0.5\nexport const invlerp = (x, y, a) => clamp(0, 1, (a - x) / (y - x));\n\n// p5js map fn is reverse map(a,x2,y2,x1,y1)\n// a is point in 1 and converts to point in 2\n// range(10, 100, 2000, 20000, 50) // 10000\nexport const mapRange = (x1, y1, x2, y2, a) => lerp(x2, y2, invlerp(x1, y1, a));\n\n// Accepts a value 0-1 and returns a value 0-1 in a sin wave\nexport const toSinValue = (value) => Math.abs(Math.sin(value * TAU));\n\nexport const mapToTau = (start, end, value) => mapRange(start, end, 0, TAU, value);\n\n// https://stackoverflow.com/questions/38457053/find-n-logarithmic-intervals-between-two-end-points\nexport const logInterval = (total_intervals, start, end) => {\n    const startInterVal = 1;\n    const endInterval = total_intervals;\n    const minLog = Math.log(start);\n    const maxLog = Math.log(end);\n    const scale = (maxLog - minLog) / (endInterval - startInterVal);\n    const result = [];\n\n    for (let i = 1; i < total_intervals; i++) {\n        result.push(Math.exp(minLog + scale * (i - startInterVal)));\n    }\n    result.push(end);\n    return result;\n};\n\nexport const marginify = ({ margin, u, v, width, height }) => ({\n    x: lerp(margin, width - margin, u),\n    y: lerp(margin, height - margin, v),\n});\n\nexport const pointDistance = (pointA, pointB) => {\n    const dx = pointA.x - pointB.x;\n    const dy = pointA.y - pointB.y;\n    return Math.sqrt(dx * dx + dy * dy);\n};\n\n// https://stackoverflow.com/questions/13043945/how-do-i-calculate-the-position-of-a-point-in-html5-canvas-after-rotation\nexport const pointRotateCoord = (point, angle) => ({\n    x: point.x * cos(angle) - point.y * sin(angle),\n    y: point.y * cos(angle) + point.x * sin(angle),\n});\n\n// https://www.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement\nexport const pointAngleFromVelocity = ({ velocityX, velocityY }) => Math.atan2(velocityY, velocityX);\n\nexport const aFromVector = ({ x, y }) => Math.atan2(y, x);\nexport const uvFromAngle = (a) => new Vector(Math.cos(a), Math.sin(a));\n\nexport const radiansToDegrees = (rad) => (rad * 180) / Math.PI;\nexport const degreesToRadians = (deg) => (deg * Math.PI) / 180;\n\n// Scale up point grid and center in the canvas\nexport const scalePointToCanvas = (canvasWidth, canvasHeight, width, height, zoomFactor, x, y) => {\n    const particleXOffset = canvasWidth / 2 - (width * zoomFactor) / 2;\n    const particleYOffset = canvasHeight / 2 - (height * zoomFactor) / 2;\n    return {\n        x: x * zoomFactor + particleXOffset,\n        y: y * zoomFactor + particleYOffset,\n    };\n};\n\nexport const create2dNoise = (u, v, amplitude = 1, frequency = 0.5) =>\n    random.noise2D(u * frequency, v * frequency) * amplitude;\n\nexport const create2dNoiseAbs = (u, v, amplitude = 1, frequency = 0.5) =>\n    Math.abs(random.noise2D(u * frequency, v * frequency)) * amplitude;\n\nexport const create3dNoise = (u, v, t, amplitude = 1, frequency = 0.5) =>\n    random.noise3D(u * frequency, v * frequency, t * frequency) * amplitude;\n\nexport const create3dNoiseAbs = (u, v, t, amplitude = 1, frequency = 0.5) =>\n    Math.abs(random.noise3D(u * frequency, v * frequency, t * frequency)) * amplitude;\n\nexport const randomPointAround = (range = 20) => {\n    const radius = randomWholeBetween(0, range);\n    const angle = randomNumberBetween(0, TAU);\n    return { x: radius * Math.cos(angle), y: radius * Math.sin(angle) };\n};\n\n// https://github.com/Jam3/chaikin-smooth/blob/master/index.js\nexport const chaikin = (input, itr = 1) => {\n    if (itr === 0) return input;\n    const output = [];\n\n    for (let i = 0; i < input.length - 1; i++) {\n        const p0 = input[i];\n        const p1 = input[i + 1];\n        const p0x = p0[0];\n        const p0y = p0[1];\n        const p1x = p1[0];\n        const p1y = p1[1];\n\n        const Q = [0.75 * p0x + 0.25 * p1x, 0.75 * p0y + 0.25 * p1y];\n        const R = [0.25 * p0x + 0.75 * p1x, 0.25 * p0y + 0.75 * p1y];\n        output.push(Q);\n        output.push(R);\n    }\n\n    return itr === 1 ? output : chaikin(output, itr - 1);\n};\n\nexport const valueCloseTo = (testVal, val, range) => {\n    if (val === testVal) return true;\n    if (val - range < testVal && val + range > testVal) return true;\n    return false;\n};\n","import tinycolor from 'tinycolor2';\nimport { uvFromAngle } from '../math/math';\n\nexport let isHiDPI = false;\nexport let contextScale = 1;\n\nexport const resizeCanvas = (canvas, context, width, height, scale) => {\n    contextScale = scale || window.devicePixelRatio;\n\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n\n    canvas.width = Math.floor(width * contextScale);\n    canvas.height = Math.floor(height * contextScale);\n\n    if (contextScale === 2) {\n        isHiDPI = true;\n        context.scale(1, 1);\n        // context.scale(2, 2);\n    } else {\n        context.scale(contextScale, contextScale);\n    }\n};\n\nexport const clearCanvas = (canvas, context) => (_) => context.clearRect(0, 0, canvas.width, canvas.height);\n\nexport const fillCanvas = (canvas, context) => (opacity = 1, color = '0,0,0') => {\n    context.fillStyle = `rgba(${color},${opacity})`;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n};\n\nexport const background = (canvas, context) => (color = 'black') => {\n    context.fillStyle = tinycolor(color).toRgbString();\n    context.fillRect(0, 0, canvas.width, canvas.height);\n};\n\nexport const resetStyles = (context) => {\n    context.strokeStyle = '#000';\n    context.fillStyle = '#fff';\n    context.lineWidth = 1;\n    context.setLineDash([]);\n    context.lineCap = 'butt';\n};\n\n// https://www.rgraph.net/canvas/howto-antialias.html\nexport const sharpLines = (context) => context.translate(0.5, 0.5);\n\n// https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n// multiply, screen, overlay, soft-light, hard-light, color-dodge, color-burn, darken, lighten, difference, exclusion, hue, saturation, luminosity, color, add, subtract, average, negative\nexport const blendMode = (context) => (mode = 'source-over') => (context.globalCompositeOperation = mode);\n\n// https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/filter\nexport const filter = (context) => (f = '') => (context.filter = f);\n\n//----------------------------------------------------------------------------------------------------------------------\n// PRIMITIVES\n//----------------------------------------------------------------------------------------------------------------------\n\nexport const pixel = (context) => (x, y, color = 'black', mode = 'square', size) => {\n    size = size || contextScale;\n    context.fillStyle = tinycolor(color).toRgbString();\n    if (mode === 'circle') {\n        context.beginPath();\n        context.arc(x, y, size, 0, Math.PI * 2, false);\n        context.fill();\n    } else {\n        context.fillRect(x, y, size, size);\n    }\n};\n\nexport const setStokeColor = (context) => (color) => (context.strokeStyle = tinycolor(color).toRgbString());\n\n// linecap = butt, round, square\nexport const drawLine = (context) => (x1, y1, x2, y2, strokeWidth = 1, linecap = 'butt') => {\n    // color = 'black',\n    // context.strokeStyle = tinycolor(color).toRgbString();\n    context.lineWidth = strokeWidth;\n    context.lineCap = linecap;\n    context.beginPath();\n    context.moveTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.stroke();\n};\n\nexport const drawLineAngle = (context) => (x1, y1, angle, length, strokeWidth, linecap) => {\n    const theta = (Math.PI * angle) / 180.0;\n    const x2 = x1 + length * Math.cos(theta);\n    const y2 = y1 + length * Math.sin(theta);\n    drawLine(context)(x1, y1, x2, y2, strokeWidth, linecap);\n};\n\n// export const drawLineAngleV = (context) => (x1, y1, angle, length, strokeWidth, linecap) => {\n//     const vect = uvFromAngle(angle).setMag(length);\n//     const x2 = x1 + vect.x;\n//     const y2 = y1 + vect.y;\n//     drawLine(context)(x1, y1, x2, y2, strokeWidth, linecap);\n// };\n\nexport const drawCircle = (context) => (strokeWidth, x, y, radius, color) => {\n    if (color) {\n        context.strokeStyle = tinycolor(color).toRgbString();\n    }\n    context.lineWidth = strokeWidth;\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2, false);\n    // context.fillStyle = 'rgba(255,255,255,.1)';\n    // context.fill();\n    context.stroke();\n};\n\nexport const drawCircleFilled = (context) => (x, y, radius, color) => {\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2, false);\n    context.fillStyle = color;\n    context.fill();\n};\n\nexport const drawRect = (context) => (x, y, w, h, strokeWidth = 1, color) => {\n    if (color) {\n        context.strokeStyle = tinycolor(color).toRgbString();\n    }\n    context.lineWidth = strokeWidth;\n    context.rect(x, y, w, h);\n    context.stroke();\n};\n\nexport const drawRectFilled = (context) => (x, y, w, h, color = 'white') => {\n    context.fillStyle = tinycolor(color).toRgbString();\n    context.fillRect(x, y, w, h);\n};\n\nexport const drawSquareFilled = (context) => (x, y, size, color) => {\n    drawRectFilled(context)(x, y, size, size, color);\n};\n\nexport const drawTriangleFilled = (context) => (x, y, size, color) => {\n    const half = size / 2;\n    context.beginPath();\n    context.moveTo(x - half, y - half);\n    context.lineTo(x + half, y);\n    context.lineTo(x - half, y + half);\n    context.fillStyle = color.toRgbString();\n    context.fill();\n};\n\n// https://www.scriptol.com/html5/canvas/rounded-rectangle.php\n// TODO center on x,y\nexport const drawQuadRectFilled = (context) => (x, y, w, h, color) => {\n    const mx = x + w / 2;\n    const my = y + h / 2;\n    context.beginPath();\n    // context.strokeStyle = 'green';\n    // context.lineWidth = '4';\n    context.fillStyle = tinycolor(color).toRgbString();\n    context.moveTo(x, my);\n    context.quadraticCurveTo(x, y, mx, y);\n    context.quadraticCurveTo(x + w, y, x + w, my);\n    context.quadraticCurveTo(x + w, y + h, mx, y + h);\n    context.quadraticCurveTo(x, y + h, x, my);\n    // context.stroke();\n    context.fill();\n};\n\n// https://www.scriptol.com/html5/canvas/rounded-rectangle.php\n// TODO center on x,y\nexport const drawRoundRectFilled = (context) => (x, y, w, h, corner, color) => {\n    if (w < corner || h < corner) {\n        corner = Math.min(w, h);\n    }\n\n    const r = x + w;\n    const b = y + h;\n    context.beginPath();\n    // context.strokeStyle = 'green';\n    // context.lineWidth = '4';\n    context.fillStyle = tinycolor(color).toRgbString();\n    context.moveTo(x + corner, y);\n    context.lineTo(r - corner, y);\n    context.quadraticCurveTo(r, y, r, y + corner);\n    context.lineTo(r, y + h - corner);\n    context.quadraticCurveTo(r, b, r - corner, b);\n    context.lineTo(x + corner, b);\n    context.quadraticCurveTo(x, b, x, b - corner);\n    context.lineTo(x, y + corner);\n    context.quadraticCurveTo(x, y, x + corner, y);\n    // context.stroke();\n    context.fill();\n};\n\nexport const drawTestPoint = (context) => ({ x, y, radius, color }) => {\n    context.strokeStyle = color.toRgbString();\n    context.lineWidth = 1;\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2, false);\n    context.fillStyle = 'rgba(255,255,255,.1)';\n    context.fill();\n    context.stroke();\n    drawLine(context)(x, y, x + radius, y, 1);\n};\n","export const defaultValue = (obj, key, value) => (obj.hasOwnProperty(key) ? obj[key] : value);\n\nexport const first = (arry) => arry[0];\nexport const middle = (arry) => arry.slice(1, arry.length - 2);\nexport const last = (arry) => arry[arry.length - 1];\n\nexport const limitArrayLen = (arr) => {\n    const arrLength = arr.length;\n    if (arrLength > MAX_COORD_HISTORY) {\n        arr.splice(0, arrLength - MAX_COORD_HISTORY);\n    }\n    return arr;\n};\n\nexport const getArrayValuesFromStart = (arr, start, len) => {\n    const values = [];\n    let index = start;\n    for (let i = 0; i < len; i++) {\n        values.push(arr[index--]);\n        if (index < 0) index = arr.length - 1;\n    }\n    return values;\n};\n\n// Just getting an index by wrapping can be done w/ % https://benfrain.com/looping-infinitely-around-an-array-in-javascript/\nexport const getArrayValuesFromEnd = (arr, start, len) => {\n    const values = [];\n    let index = start;\n    for (let i = 0; i < len; i++) {\n        values.push(arr[index++]);\n        if (index === arr.length) index = 0;\n    }\n    return values;\n};\n","/*\nConvenience canvas sketch runner. Based on p5js\n\n\nconst variation = () => {\n    const config = {};\n\n    const setup = ({canvas, context}) => {\n        // create initial state\n    };\n\n    // will run every frame\n    const draw = ({canvas, context, mouse}) => {\n        // draw on every frame\n        return 1; // -1 to exit animation loop\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n\nTODO\n- [ ] merge screen shot code\n- [ ] Canvas Recorder  https://xosh.org/canvas-recorder/\n- [ ] coords of a mouse down to variation?\n- [ ] better touch input\n- [ ] svg https://github.com/canvg/canvg\n- [ ] great ideas here http://paperjs.org/features/\n*/\n\nimport { isHiDPI, contextScale, resizeCanvas } from './canvas/canvas';\nimport { getRandomSeed, golden } from './math/math';\nimport { defaultValue } from './utils';\n\nexport const orientation = {\n    portrait: 0,\n    landscape: 1,\n};\n\nexport const ratio = {\n    letter: 0.773, // 8.5x11\n    poster: 0.667, // 24x36\n    golden: golden - 1,\n    square: -1,\n    auto: 1,\n};\n\nexport const scale = {\n    standard: 1,\n    hidpi: 2,\n};\n\nexport const sketch = () => {\n    const mouse = {\n        x: undefined,\n        y: undefined,\n        isDown: false,\n        radius: 100,\n    };\n\n    let hasStarted = false;\n\n    let fps = 0;\n\n    let drawRuns = 0;\n\n    let currentVariationFn;\n    let currentVariationRes;\n    let animationId;\n\n    const canvasSizeFraction = 0.9;\n    const canvas = document.getElementById('canvas');\n    const context = canvas.getContext('2d');\n\n    const getCanvas = (_) => canvas;\n    const getContext = (_) => context;\n    const getMouse = (_) => mouse;\n\n    const mouseDown = (evt) => {\n        mouse.isDown = true;\n    };\n\n    const mouseMove = (evt) => {\n        const mult = isHiDPI ? 2 : 1;\n        const canvasFrame = canvas.getBoundingClientRect();\n        mouse.x = (evt.x - canvasFrame.x) * mult;\n        mouse.y = (evt.y - canvasFrame.y) * mult;\n    };\n\n    const mouseUp = (evt) => {\n        mouse.isDown = false;\n    };\n\n    const mouseOut = (evt) => {\n        mouse.x = undefined;\n        mouse.y = undefined;\n        mouse.isDown = false;\n    };\n\n    window.addEventListener('mousedown', mouseDown);\n    window.addEventListener('touchstart', mouseDown);\n\n    window.addEventListener('mousemove', mouseMove);\n    window.addEventListener('touchmove', mouseMove);\n\n    window.addEventListener('mouseup', mouseUp);\n    window.addEventListener('touchend', mouseUp);\n\n    window.addEventListener('mouseout', mouseOut);\n    window.addEventListener('touchcancel', mouseOut);\n\n    const applyCanvasSize = (config, fraction) => {\n        const width = defaultValue(config, 'width', window.innerWidth);\n        const height = defaultValue(config, 'height', window.innerHeight);\n        let newWidth = width;\n        let newHeight = height;\n\n        const cfgOrientation = defaultValue(config, 'orientation', orientation.landscape);\n        const cfgRatio = defaultValue(config, 'ratio', ratio.auto);\n        const cfgScale = defaultValue(config, 'scale', scale.standard);\n\n        const aSide = Math.min(width, height) * fraction;\n        const bSide = Math.round(cfgRatio * aSide) * fraction;\n\n        if (cfgRatio === ratio.square) {\n            newWidth = aSide;\n            newHeight = aSide;\n        } else if (cfgOrientation === orientation.portrait) {\n            newWidth = bSide;\n            newHeight = aSide;\n        } else if (cfgOrientation === orientation.landscape && cfgRatio !== ratio.auto) {\n            newWidth = aSide;\n            newHeight = bSide;\n        }\n\n        resizeCanvas(canvas, context, newWidth, newHeight, cfgScale);\n    };\n\n    const run = (variation) => {\n        currentVariationFn = variation;\n        currentVariationRes = currentVariationFn.call(this);\n\n        let currentDrawLimit;\n\n        let backgroundColor;\n\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        if (currentVariationRes.hasOwnProperty('config')) {\n            const { config } = currentVariationRes;\n            applyCanvasSize(config, canvasSizeFraction);\n            if (config.background) {\n                backgroundColor = config.background;\n            }\n            if (config.fps) {\n                fps = config.fps;\n            }\n            if (config.drawLimit > 0) {\n                currentDrawLimit = config.drawLimit;\n            }\n        } else {\n            resizeCanvas(canvas, context, window.innerWidth, window.innerHeight);\n        }\n\n        let rendering = true;\n        const targetFpsInterval = 1000 / fps;\n        let lastAnimationFrameTime;\n\n        // context.translate(0.5, 0.5);\n\n        const checkDrawLimit = () => {\n            if (currentDrawLimit) {\n                return drawRuns < currentDrawLimit;\n            }\n            return true;\n        };\n\n        const startSketch = () => {\n            window.removeEventListener('load', startSketch);\n            hasStarted = true;\n\n            currentVariationRes.setup({ canvas, context, s: this });\n\n            const render = () => {\n                const result = currentVariationRes.draw({ canvas, context, mouse });\n                drawRuns++;\n                if (result !== -1 && checkDrawLimit()) {\n                    animationId = requestAnimationFrame(render);\n                }\n            };\n\n            // https://stackoverflow.com/questions/19764018/controlling-fps-with-requestanimationframe\n            const renderAtFps = () => {\n                if (rendering) {\n                    animationId = window.requestAnimationFrame(renderAtFps);\n                }\n\n                const now = Date.now();\n                const elapsed = now - lastAnimationFrameTime;\n\n                if (elapsed > targetFpsInterval) {\n                    lastAnimationFrameTime = now - (elapsed % targetFpsInterval);\n                    const result = currentVariationRes.draw({ canvas, context, mouse });\n                    drawRuns++;\n                    if (result === -1 || (currentDrawLimit && drawRuns >= currentDrawLimit)) {\n                        rendering = false;\n                    }\n                }\n            };\n\n            if (!fps) {\n                animationId = window.requestAnimationFrame(render);\n            } else {\n                lastAnimationFrameTime = Date.now();\n                animationId = window.requestAnimationFrame(renderAtFps);\n            }\n        };\n\n        if (!hasStarted) {\n            window.addEventListener('load', startSketch);\n        } else {\n            startSketch();\n        }\n    };\n\n    const stop = () => {\n        window.cancelAnimationFrame(animationId);\n    };\n\n    const getVariationName = () => {\n        const seed = getRandomSeed();\n        let name = 'untitled';\n        if (\n            currentVariationRes &&\n            currentVariationRes.hasOwnProperty('config') &&\n            currentVariationRes.config.hasOwnProperty('name')\n        ) {\n            name = currentVariationRes.config.name;\n        }\n        return `sketch-${name}-${seed}`;\n    };\n\n    const windowResize = (evt) => {\n        // resizeCanvas(canvas, context, window.innerWidth * canvasSizeFraction, window.innerHeight * canvasSizeFraction);\n        if (animationId) {\n            stop();\n            run(currentVariationFn);\n        }\n    };\n    window.addEventListener('resize', windowResize);\n\n    return {\n        variationName: getVariationName,\n        canvas: getCanvas,\n        context: getContext,\n        mouse: getMouse,\n        run,\n        stop,\n        s: sketch,\n    };\n};\n","import tinycolor from 'tinycolor2';\nimport { pointDistance, randomNumberBetween, lerp, pointAngleFromVelocity, clamp } from '../math/math';\nimport { Vector } from '../math/Vector';\n\nconst MAX_COORD_HISTORY = 30;\n\nexport class Particle {\n    #x;\n\n    #y;\n\n    #color;\n\n    constructor(values) {\n        this.initValues(values);\n    }\n\n    initValues({\n        index,\n        x,\n        y,\n        velocityX,\n        velocityY,\n        accelerationX,\n        accelerationY,\n        radius,\n        mass,\n        color,\n        alpha,\n        rotation,\n        lifetime,\n        drawFn,\n        updateFn,\n        colorFn,\n        ...rest\n    }) {\n        this.props = rest;\n        this.index = index || 0;\n        this.#x = x || 0;\n        this.#y = y || 0;\n        this.xHistory = [x];\n        this.yHistory = [y];\n        this.oX = x || this.oX;\n        this.oY = y || this.oY;\n        this.velocityX = velocityX || 0;\n        this.velocityY = velocityY || 0;\n        this.accelerationX = accelerationX || 0;\n        this.accelerationY = accelerationY || 0;\n        this.mass = mass || 1;\n        this.radius = radius || 1;\n        this.#color = color ? tinycolor(color) : tinycolor({ r: 255, g: 255, b: 255 });\n        this.rotation = rotation || 0;\n        this.lifetime = lifetime || 1;\n        // this.drawFn = drawFn;\n        // this.updateFn = updateFn;\n        // must always return a string\n        this.colorFn = colorFn;\n    }\n\n    get color() {\n        if (this.colorFn) {\n            return tinycolor(this.colorFn(this));\n        }\n        return this.#color;\n    }\n\n    set color(value) {\n        this.#color = tinycolor(value);\n    }\n\n    get colorStr() {\n        if (this.colorFn) {\n            const res = this.colorFn(this);\n            if (typeof res !== 'string') {\n                console.warn('Particle color fn must return a string!');\n                return '#ff0000';\n            }\n            return res;\n        }\n        return this.#color.toRgbString();\n    }\n\n    get x() {\n        return this.#x;\n    }\n\n    set x(value) {\n        this.#x = value;\n        this.xHistory.unshift(value);\n        if (this.xHistory.length > MAX_COORD_HISTORY) {\n            this.xHistory = this.xHistory.slice(0, MAX_COORD_HISTORY);\n        }\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    set y(value) {\n        this.#y = value;\n        this.yHistory.unshift(value);\n        if (this.yHistory.length > MAX_COORD_HISTORY) {\n            this.yHistory = this.yHistory.slice(0, MAX_COORD_HISTORY);\n        }\n    }\n\n    get velocity() {\n        return new Vector(this.velocityX, this.velocityY, 0);\n    }\n\n    set velocity({ x, y }) {\n        this.velocityX = x;\n        this.velocityY = y;\n    }\n\n    get acceleration() {\n        return new Vector(this.accelerationX, this.accelerationY, 0);\n    }\n\n    set acceleration({ x, y }) {\n        this.accelerationX = x;\n        this.accelerationY = y;\n    }\n\n    // Rotation angle to point in direction of velocity\n    get heading() {\n        return pointAngleFromVelocity(this);\n    }\n\n    reverseVelocityX() {\n        this.velocityX *= -1;\n    }\n\n    reverseVelocityY() {\n        this.velocityY *= -1;\n    }\n\n    updatePosWithVelocity() {\n        this.x += this.velocity.x;\n        this.y += this.velocity.y;\n    }\n\n    applyForce(fVect) {\n        const fV = fVect.div(this.mass);\n        const aV = this.acceleration.add(fV);\n        const pV = this.velocity.add(aV);\n        this.acceleration = aV;\n        this.velocity = pV;\n    }\n\n    // https://www.youtube.com/watch?v=WBdhAuWS6X8\n    friction(mu = 0.1) {\n        const normal = this.mass;\n        const vfriction = this.velocity\n            .normalize()\n            .mult(-1)\n            .setMag(mu * normal);\n        this.applyForce(vfriction);\n    }\n\n    // https://www.youtube.com/watch?v=DxFDgOYEoy8\n    drag(coefficent = 0.1) {\n        const area = 1; // this.radius;\n        const velUnit = this.velocity.normalize().mult(-1);\n        const speed = this.velocity.magSq() * area * coefficent;\n        const vdrag = velUnit.setMag(speed);\n        this.applyForce(vdrag);\n    }\n\n    // https://www.youtube.com/watch?v=EpgB3cNhKPM\n    // mode 1 is attract, -1 is repel\n    // const attractor = { x: canvas.width / 2, y: canvas.height / 2, mass: 50, g: 1 };\n    attract({ x, y, mass, g }, mode = 1, affectDist = 1000) {\n        if (pointDistance({ x, y }, { x: this.x, y: this.y }) < affectDist) {\n            g = g || 1;\n            const dir = new Vector(x, y).sub(new Vector(this.x, this.y));\n            const distanceSq = clamp(50, 5000, dir.magSq());\n            const strength = (mode * (g * (mass * this.mass))) / distanceSq;\n            const force = dir.setMag(strength);\n            this.applyForce(force);\n        }\n    }\n\n    // draw() {\n    //     this.drawFn(this);\n    // }\n    //\n    // update() {\n    //     this.updateFn(this);\n    //     this.draw(this);\n    // }\n}\n\n//----------------------------------------------------------------------------------------------------------------------\n//----------------------------------------------------------------------------------------------------------------------\n\nexport const createRandomParticleValues = ({ width, height }) => {\n    const vel = 2;\n    const radius = randomNumberBetween(5, 10);\n    return {\n        radius,\n        x: randomNumberBetween(0, width),\n        y: randomNumberBetween(0, height),\n        mass: randomNumberBetween(1, 10),\n        velocityX: randomNumberBetween(-vel, vel),\n        velocityY: randomNumberBetween(-vel, vel),\n        accelerationX: 0,\n        accelerationY: 0,\n        rotation: randomNumberBetween(-180, 180),\n        color: { r: randomNumberBetween(100, 255), g: randomNumberBetween(100, 255), b: randomNumberBetween(100, 255) },\n    };\n};\n\n//----------------------------------------------------------------------------------------------------------------------\n//----------------------------------------------------------------------------------------------------------------------\n\nexport const edgeBounce = ({ width, height }, particle) => {\n    if (particle.x + particle.radius > width) {\n        particle.reverseVelocityX();\n        particle.x = width - particle.radius;\n    }\n    if (particle.x - particle.radius < 0) {\n        particle.reverseVelocityX();\n        particle.x = particle.radius;\n    }\n    if (particle.y + particle.radius > height) {\n        particle.reverseVelocityY();\n        particle.y = height - particle.radius;\n    }\n    if (particle.y - particle.radius < 0) {\n        particle.reverseVelocityY();\n        particle.y = particle.radius;\n    }\n};\n\nexport const edgeWrap = ({ width, height }, particle) => {\n    if (particle.x + particle.radius > width) {\n        particle.x = 0 + particle.radius;\n    } else if (particle.x - particle.radius < 0) {\n        particle.x = width - particle.radius;\n    }\n    if (particle.y + particle.radius > height) {\n        particle.y = 0 + particle.radius;\n    } else if (particle.y - particle.radius < 0) {\n        particle.y = height - particle.radius;\n    }\n};\n","import tinycolor from 'tinycolor2';\nimport { normalizeInverse, pointDistance } from '../math/math';\nimport { drawLine, resetStyles } from './canvas';\n\nexport const drawParticlePoint = (context) => ({ x, y, radius, color }) => {\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2, false);\n    context.fillStyle = color.toRgbString();\n    context.fill();\n};\nexport const drawRotatedParticle = (ctx, drawFn, particle, ...args) => {\n    const pSaveX = particle.x;\n    const pSaveY = particle.y;\n    particle.x = 0;\n    particle.y = 0;\n    ctx.save();\n    ctx.translate(pSaveX, pSaveY);\n    ctx.rotate(particle.heading);\n    drawFn(ctx)(particle, args);\n    ctx.restore();\n    particle.x = pSaveX;\n    particle.y = pSaveY;\n};\nexport const connectParticles = (context) => (pArray, proximity, useAlpha = true) => {\n    const len = pArray.length;\n    for (let a = 0; a < len; a++) {\n        // all consecutive particles\n        for (let b = a; b < len; b++) {\n            const pA = pArray[a];\n            const pB = pArray[b];\n            const distance = pointDistance(pA, pB);\n            if (distance < proximity) {\n                const pColor = pA.color;\n                if (useAlpha) {\n                    pColor.setAlpha(normalizeInverse(0, proximity, distance));\n                }\n                context.strokeStyle = pColor.toHslString();\n                drawLine(context)(pA.x, pA.y, pB.x, pB.y, 0.5);\n            }\n        }\n    }\n    resetStyles(context);\n};\nexport const drawPointTrail = (context) => (particle) => {\n    const trailLen = particle.xHistory.length;\n    context.lineWidth = particle.radius;\n    const pColor = particle.color;\n    const aFade = (100 / trailLen) * 0.01;\n    let alpha = 1;\n    const sFade = (particle.radius * 2) / trailLen;\n    let stroke = particle.radius * 2;\n    for (let i = 0; i < trailLen; i++) {\n        const startX = i === 0 ? particle.x : particle.xHistory[i - 1];\n        const startY = i === 0 ? particle.y : particle.yHistory[i - 1];\n        drawLine(context)(startX, startY, particle.xHistory[i], particle.yHistory[i], stroke);\n        pColor.setAlpha(alpha);\n        context.strokeStyle = pColor.toRgbString();\n        alpha -= aFade;\n        stroke -= sFade;\n    }\n};\nexport const drawParticleVectors = (context) => (particle) => {\n    const vmult = 5;\n    const amult = 100;\n    const vel = 'green';\n    const acc = 'yellow';\n    const { velocity } = particle;\n    const { acceleration } = particle;\n\n    context.strokeStyle = tinycolor(vel).toRgbString();\n    drawLine(context)(particle.x, particle.y, particle.x + velocity.x * vmult, particle.y + velocity.y * vmult, 1);\n\n    context.strokeStyle = tinycolor(acc).toRgbString();\n    drawLine(context)(\n        particle.x,\n        particle.y,\n        particle.x + acceleration.x * amult,\n        particle.y + acceleration.y * amult,\n        1\n    );\n};\nexport const drawMouse = (context) => ({ x, y, radius }) => {\n    if (x === undefined || y === undefined) return;\n    context.strokeStyle = 'rgba(255,255,255,.25)';\n    context.lineWidth = 1;\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2, false);\n    context.fillStyle = 'rgba(255,255,255,.1)';\n    context.fill();\n    context.stroke();\n};\nexport const drawAttractor = (context) => ({ x, y, mass, g }, mode, radius) => {\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2, false);\n    context.fillStyle = 'rgba(0,0,0,.1)';\n    context.fill();\n\n    context.beginPath();\n    context.arc(x, y, Math.sqrt(mass) * g, 0, Math.PI * 2, false);\n    context.fillStyle = mode === 1 ? 'rgba(0,255,0,.25)' : 'rgba(255,0,0,.25)';\n    context.fill();\n};\n","import { edgeBounce, Particle, createRandomParticleValues } from '../lib/systems/Particle';\nimport { clearCanvas, fillCanvas } from '../lib/canvas/canvas';\nimport { normalizeInverse, pointDistance } from '../lib/math/math';\nimport { connectParticles, drawMouse, drawParticlePoint, drawPointTrail } from '../lib/canvas/canvas-particles';\n\nconst gravityPoint = (mult = 0.2, f = 1) => (x, y, radius, particle) => {\n    const distance = pointDistance({ x, y }, particle);\n    if (distance < radius) {\n        const dx = x - particle.x;\n        const dy = y - particle.y;\n        const forceDirectionX = dx / distance;\n        const forceDirectionY = dy / distance;\n        const force = normalizeInverse(0, radius, distance) * f * mult;\n        const tempX = forceDirectionX * force * particle.radius * 2;\n        const tempY = forceDirectionY * force * particle.radius * 2;\n        particle.x += tempX;\n        particle.y += tempY;\n    }\n};\n\n// for moving points, push away/around from point\nconst avoidPoint = (point, particle, f = 1) => {\n    gravityPoint(1, (f *= -1))(point.x, point.y, point.radius, particle);\n};\n\n// for moving points, pull towards point\nconst attractPoint = (point, particle, f = 1) => {\n    gravityPoint(1, f)(point.x, point.y, point.radius, particle);\n};\n\n// Based on https://www.youtube.com/watch?v=d620nV6bp0A\nexport const variation1 = () => {\n    const numParticles = 100;\n    const particlesArray = [];\n\n    let canvasCenterX;\n    let canvasCenterY;\n    let centerRadius;\n\n    const setup = ({ canvas, context }) => {\n        canvasCenterX = canvas.width / 2;\n        canvasCenterY = canvas.height / 2;\n        centerRadius = canvas.height / 4;\n\n        for (let i = 0; i < numParticles; i++) {\n            const props = createRandomParticleValues(canvas);\n            props.radius = 5;\n            particlesArray.push(new Particle(props));\n        }\n    };\n\n    const draw = ({ canvas, context, mouse }) => {\n        fillCanvas(canvas, context)();\n\n        for (let i = 0; i < numParticles; i++) {\n            particlesArray[i].updatePosWithVelocity();\n            edgeBounce(canvas, particlesArray[i]);\n            avoidPoint({ radius: centerRadius, x: canvasCenterX, y: canvasCenterY }, particlesArray[i], 4);\n            attractPoint(mouse, particlesArray[i], mouse.isDown ? -1 : 1);\n            drawParticlePoint(context)(particlesArray[i]);\n            drawPointTrail(context)(particlesArray[i]);\n        }\n        connectParticles(context)(particlesArray, 200);\n        drawMouse(context)(mouse);\n    };\n\n    return {\n        setup,\n        draw,\n    };\n};\n","import { Particle, createRandomParticleValues } from '../lib/systems/Particle';\nimport { clearCanvas } from '../lib/canvas/canvas';\nimport { normalizeInverse, pointDistance, randomNumberBetween } from '../lib/math/math';\nimport { connectParticles, drawMouse, drawParticlePoint } from '../lib/canvas/canvas-particles';\n\nconst gravityPoint = (mult = 0.2, f = 1) => (x, y, radius, particle) => {\n    const distance = pointDistance({ x, y }, particle);\n    if (distance < radius) {\n        const dx = x - particle.x;\n        const dy = y - particle.y;\n        const forceDirectionX = dx / distance;\n        const forceDirectionY = dy / distance;\n        const force = normalizeInverse(0, radius, distance) * f * mult;\n        const tempX = forceDirectionX * force * particle.radius * 2;\n        const tempY = forceDirectionY * force * particle.radius * 2;\n        particle.x += tempX;\n        particle.y += tempY;\n    }\n};\n\n// for moving points, push away/around from point\nconst avoidPoint = (point, particle, f = 1) => {\n    gravityPoint(1, (f *= -1))(point.x, point.y, point.radius, particle);\n};\n\n// Based on https://www.youtube.com/watch?v=j_BgnpMPxzM\nexport const variation2 = () => {\n    const config = {\n        friction: 0.8,\n        gravity: 1,\n        decay: 0.05,\n        tweenDamp: 0.1,\n        margin: 50,\n        intensity: 0,\n        numParticles: 200,\n    };\n\n    const particlesArray = [];\n\n    const setup = ({ canvas, context }) => {\n        for (let i = 0; i < config.numParticles; i++) {\n            particlesArray.push(new Particle(createRandomParticleValues(canvas)));\n        }\n    };\n\n    const draw = ({ canvas, context, mouse }) => {\n        clearCanvas(canvas, context)();\n\n        for (let i = 0; i < config.numParticles; i++) {\n            particlesArray[i].radius -= config.decay;\n            if (particlesArray[i].radius <= 0) {\n                const props = createRandomParticleValues(canvas);\n                props.x = mouse.x + randomNumberBetween(-10, 10);\n                props.y = mouse.y + randomNumberBetween(-10, 10);\n                particlesArray[i].initValues(props);\n            }\n            particlesArray[i].y += particlesArray[i].mass * (mouse.isDown ? 1 : 0.2);\n            particlesArray[i].mass += 0.2 * config.gravity;\n            if (\n                particlesArray[i].y + particlesArray[i].radius > canvas.height ||\n                particlesArray[i].y - particlesArray[i].radius < 0\n            ) {\n                particlesArray[i].mass *= -1;\n            }\n\n            avoidPoint(mouse, particlesArray[i]);\n            // attractPoint(psMouseCoords(), particlesArray[i]);\n            drawParticlePoint(context)(particlesArray[i]);\n            // drawPointTrail(context)(particlesArray[i]);\n        }\n        connectParticles(context)(particlesArray, 100);\n        drawMouse(context)(mouse);\n\n        return 1;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import domokunPng from '../../media/images/domokun.png';\nimport { clearCanvas, drawSquareFilled, background } from '../lib/canvas/canvas';\nimport { normalizeInverse, pointDistance, randomNumberBetween, scalePointToCanvas } from '../lib/math/math';\nimport { Particle } from '../lib/systems/Particle';\nimport { drawMouse } from '../lib/canvas/canvas-particles';\n\nconst pointPush = (point, particle, f = 1) => {\n    const dx = point.x - particle.x;\n    const dy = point.y - particle.y;\n    const distance = pointDistance(point, particle);\n    const forceDirectionX = dx / distance;\n    const forceDirectionY = dy / distance;\n    const force = normalizeInverse(0, point.radius, distance) * f;\n    particle.velocityX = forceDirectionX * force * particle.mass * 0.8;\n    particle.velocityY = forceDirectionY * force * particle.mass * 0.8;\n\n    if (distance < point.radius) {\n        particle.x -= particle.velocityX;\n        particle.y -= particle.velocityY;\n    } else {\n        // TODO if < 1 then snap to 0\n        if (particle.x !== particle.oX) {\n            particle.x -= (particle.x - particle.oX) * 0.1;\n        }\n        if (particle.y !== particle.oY) {\n            particle.y -= (particle.y - particle.oY) * 0.1;\n        }\n    }\n};\n\nconst getImageDataFromImage = (context) => (image) => {\n    context.drawImage(image, 0, 0);\n    return context.getImageData(0, 0, image.width, image.width);\n};\n\nconst getImageDataColor = (imageData, x, y) => ({\n    r: imageData.data[y * 4 * imageData.width + x * 4],\n    g: imageData.data[y * 4 * imageData.width + x * 4 + 1],\n    b: imageData.data[y * 4 * imageData.width + x * 4 + 2],\n    a: imageData.data[y * 4 * imageData.width + x * 4 + 3],\n});\n\n// Based on https://www.youtube.com/watch?v=afdHgwn1XCY\nexport const domokun = (_) => {\n    const config = {\n        width: 600,\n        height: 600,\n    };\n\n    let numParticles;\n    const imageSize = 100; // square\n    const png = new Image();\n    png.src = domokunPng;\n    const particlesArray = [];\n\n    const setup = ({ canvas, context }) => {\n        const imageData = getImageDataFromImage(context)(png);\n        clearCanvas(canvas, context)();\n\n        const imageZoomFactor = canvas.width / imageSize;\n        const cropColor = 255 / 2;\n\n        for (let y = 0, { height } = imageData; y < height; y++) {\n            for (let x = 0, { width } = imageData; x < width; x++) {\n                const pxColor = getImageDataColor(imageData, x, y);\n                if (pxColor.a > cropColor) {\n                    const points = scalePointToCanvas(\n                        canvas.width,\n                        canvas.height,\n                        imageData.width,\n                        imageData.height,\n                        imageZoomFactor,\n                        x,\n                        y\n                    );\n                    const pX = points.x;\n                    const pY = points.y;\n                    const mass = randomNumberBetween(2, 12);\n                    const color = pxColor;\n                    const radius = imageZoomFactor;\n                    particlesArray.push(new Particle({ x: pX, y: pY, mass, color, radius }));\n                }\n            }\n        }\n\n        numParticles = particlesArray.length;\n    };\n\n    const draw = ({ canvas, context, mouse }) => {\n        background(canvas, context)('yellow');\n\n        for (let i = 0; i < numParticles; i++) {\n            pointPush(mouse, particlesArray[i], mouse.isDown ? -1 : 1);\n            drawSquareFilled(context)(\n                particlesArray[i].x,\n                particlesArray[i].y,\n                particlesArray[i].radius,\n                particlesArray[i].color\n            );\n        }\n        // drawMouse(context)(mouse);\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import { createRandomParticleValues, Particle } from '../lib/systems/Particle';\nimport { fillCanvas } from '../lib/canvas/canvas';\nimport { normalizeInverse, pointDistance } from '../lib/math/math';\nimport { connectParticles, drawParticlePoint } from '../lib/canvas/canvas-particles';\n\nconst pointPush = (point, particle, f = 1) => {\n    const dx = point.x - particle.x;\n    const dy = point.y - particle.y;\n    const distance = pointDistance(point, particle);\n    const forceDirectionX = dx / distance;\n    const forceDirectionY = dy / distance;\n    const force = normalizeInverse(0, point.radius, distance) * f;\n    particle.velocityX = forceDirectionX * force * particle.mass * 0.8;\n    particle.velocityY = forceDirectionY * force * particle.mass * 0.8;\n\n    if (distance < point.radius) {\n        particle.x -= particle.velocityX;\n        particle.y -= particle.velocityY;\n    } else {\n        // TODO if < 1 then snap to 0\n        if (particle.x !== particle.oX) {\n            particle.x -= (particle.x - particle.oX) * 0.1;\n        }\n        if (particle.y !== particle.oY) {\n            particle.y -= (particle.y - particle.oY) * 0.1;\n        }\n    }\n};\n\nexport const variation4 = () => {\n    const config = {\n        numParticles: 0,\n    };\n\n    const particlesArray = [];\n    const circles = [];\n\n    const setup = ({ canvas, context }) => {\n        const centerX = canvas.width / 2;\n        const centerY = canvas.height / 2;\n        const diameter = canvas.height / 4;\n        const steps = 10;\n\n        for (let theta = 0; theta < 360; theta += steps) {\n            const rad = theta * (Math.PI / 180);\n            const x = Math.cos(rad) * diameter + centerX;\n            const y = Math.sin(rad) * diameter + centerY;\n            circles.push([x, y]);\n            const props = createRandomParticleValues(canvas);\n            props.x = x;\n            props.y = y;\n            props.radius = 1;\n            props.color = { r: 0, g: 0, b: 0 };\n            props.index = circles.length - 1;\n            particlesArray.push(new Particle(props));\n        }\n        config.numParticles = particlesArray.length;\n        fillCanvas(canvas, context)(1, '255,255,255');\n    };\n\n    // will run every frame\n    const draw = ({ canvas, context, mouse }) => {\n        fillCanvas(canvas, context)(0.005, '255,255,255');\n        for (let i = 0; i < config.numParticles; i++) {\n            pointPush(mouse, particlesArray[i], mouse.isDown ? -1 : 5);\n            drawParticlePoint(context)(particlesArray[i]);\n            // let index = particlesArray[i].index + 1;\n            // if(index === circles.length) {\n            //     index = 0;\n            // }\n            // particlesArray[i].x = circles[index][0];\n            // particlesArray[i].y = circles[index][1];\n            // particlesArray.index = index;\n        }\n        connectParticles(context)(particlesArray, 200);\n        return 1; // -1 to exit animation loop\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import { edgeBounce, Particle, createRandomParticleValues } from '../lib/systems/Particle';\nimport { fillCanvas } from '../lib/canvas/canvas';\nimport { normalizeInverse, pointDistance, randomNumberBetween } from '../lib/math/math';\nimport { connectParticles, drawParticlePoint } from '../lib/canvas/canvas-particles';\n\nconst gravityPoint = (mult = 0.2, f = 1) => (x, y, radius, particle) => {\n    const distance = pointDistance({ x, y }, particle);\n    if (distance < radius) {\n        const dx = x - particle.x;\n        const dy = y - particle.y;\n        const forceDirectionX = dx / distance;\n        const forceDirectionY = dy / distance;\n        const force = normalizeInverse(0, radius, distance) * f * mult;\n        const tempX = forceDirectionX * force * particle.radius * 2;\n        const tempY = forceDirectionY * force * particle.radius * 2;\n        particle.x += tempX;\n        particle.y += tempY;\n    }\n};\n\n// for moving points, push away/around from point\nconst avoidPoint = (point, particle, f = 1) => {\n    gravityPoint(1, (f *= -1))(point.x, point.y, point.radius, particle);\n};\n\nexport const variation5 = () => {\n    const config = {\n        numParticles: 50,\n    };\n\n    const particlesArray = [];\n    const circles = [];\n\n    const setup = ({ canvas, context }) => {\n        for (let i = 0; i < config.numParticles; i++) {\n            const props = createRandomParticleValues(canvas);\n            props.x = canvas.width / 2;\n            props.y = canvas.height / 2;\n            props.color = { r: 0, g: 0, b: 0 };\n            props.radius = 0.5;\n            particlesArray.push(new Particle(props));\n        }\n        const centerX = canvas.width / 2;\n        const centerY = canvas.height / 2;\n        const diameter = canvas.height / 4;\n        const steps = 30;\n        for (let theta = 0; theta < 360; theta += steps) {\n            const rad = theta * (Math.PI / 180);\n            const x = Math.cos(rad) * diameter + centerX;\n            const y = Math.sin(rad) * diameter + centerY;\n            circles.push([x, y, randomNumberBetween(20, 100)]);\n        }\n        fillCanvas(canvas, context)(1, '255,255,255');\n    };\n\n    const draw = ({ canvas, context, mouse }) => {\n        // fillCanvas(canvas, context)(.005,'255,255,255');\n        for (let i = 0; i < config.numParticles; i++) {\n            particlesArray[i].updatePosWithVelocity();\n            edgeBounce(canvas, particlesArray[i]);\n            for (let c = 0; c < circles.length; c++) {\n                avoidPoint({ radius: circles[c][2], x: circles[c][0], y: circles[c][1] }, particlesArray[i], 4);\n            }\n            drawParticlePoint(context)(particlesArray[i]);\n        }\n        connectParticles(context)(particlesArray, 50);\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import { Particle, createRandomParticleValues, edgeBounce } from '../lib/systems/Particle';\nimport { fillCanvas } from '../lib/canvas/canvas';\nimport { drawParticlePoint } from '../lib/canvas/canvas-particles';\nimport { normalizeInverse, pointDistance, mapRange } from '../lib/math/math';\n\nconst gravityPoint = (mult = 0.2, f = 1) => (x, y, radius, particle) => {\n    const distance = pointDistance({ x, y }, particle);\n    if (distance < radius) {\n        const dx = x - particle.x;\n        const dy = y - particle.y;\n        const forceDirectionX = dx / distance;\n        const forceDirectionY = dy / distance;\n        const force = normalizeInverse(0, radius, distance) * f * mult;\n        const tempX = forceDirectionX * force * particle.radius * 2;\n        const tempY = forceDirectionY * force * particle.radius * 2;\n        particle.x += tempX;\n        particle.y += tempY;\n    }\n};\n\n// Based on https://www.youtube.com/watch?v=j_BgnpMPxzM\nexport const variation6 = () => {\n    const numParticles = 200;\n    const particlesArray = [];\n    let hue = 0;\n\n    const setup = ({ canvas, context }) => {\n        for (let i = 0; i < numParticles; i++) {\n            const props = createRandomParticleValues(canvas);\n            props.color = { r: 255, g: 255, b: 255 };\n            particlesArray.push(new Particle(props));\n        }\n    };\n\n    const draw = ({ canvas, context, mouse }) => {\n        fillCanvas(canvas, context)(0.08);\n        if (hue++ > 361) hue = 0;\n        for (let i = 0; i < numParticles; i++) {\n            particlesArray[i].radius -= 0.05;\n            if (particlesArray[i].radius <= 0) {\n                const initValues = createRandomParticleValues(canvas);\n                initValues.x = mouse.x ? mouse.x : canvas.width / 2;\n                initValues.y = mouse.y ? mouse.y : canvas.height / 2;\n                // let h = lerpRange(0,canvas.width,100,200,initValues.x);\n                const s = mapRange(0, 10, 0, 100, initValues.radius);\n                const l = mapRange(0, 10, 25, 75, initValues.radius);\n                initValues.color = `hsl(${hue},${s}%,${l}%)`;\n                particlesArray[i].initValues(initValues);\n            }\n            particlesArray[i].updatePosWithVelocity();\n            edgeBounce(canvas, particlesArray[i]);\n\n            gravityPoint()(canvas.width / 2, canvas.height, 2000, particlesArray[i]);\n            // gravityPoint({x:canvas.width/2, y:canvas.height}, particlesArray[i])\n            drawParticlePoint(context)(particlesArray[i]);\n        }\n        // connectParticles(context)(particlesArray, 100);\n        return 1;\n    };\n\n    return {\n        setup,\n        draw,\n    };\n};\n","import { edgeBounce, Particle, createRandomParticleValues } from '../lib/systems/Particle';\nimport { background } from '../lib/canvas/canvas';\nimport { drawParticlePoint, drawRotatedParticle } from '../lib/canvas/canvas-particles';\n\nconst drawRake = (context) => ({ x, y, radius, color }, spacing) => {\n    const points = 5;\n    spacing |= radius * 3;\n    for (let i = 0; i < points; i++) {\n        drawParticlePoint(context)({ x: x + spacing * i, y, radius, color });\n    }\n};\n\nexport const rainbowRakeOrbit = () => {\n    const config = {\n        // width: 700,\n        // height: 700,\n        // fps: 30,\n    };\n\n    const numParticles = 50;\n    const particlesArray = [];\n\n    const attractor = { x: canvas.width / 2, y: canvas.height / 2, mass: 100, g: 20 };\n\n    let canvasCenterX;\n    let canvasCenterY;\n    let centerRadius;\n\n    const setup = ({ canvas, context }) => {\n        canvasCenterX = canvas.width / 2;\n        canvasCenterY = canvas.height / 2;\n        centerRadius = canvas.height / 4;\n\n        for (let i = 0; i < numParticles; i++) {\n            const props = createRandomParticleValues(canvas);\n            props.radius = 1; // Math.sqrt(props.mass);\n            particlesArray.push(new Particle(props));\n        }\n    };\n\n    // const targetX = mouse.x ? mouse.x : canvas.width / 2;\n    // const targetY = mouse.y ? mouse.y : canvas.height / 2;\n    // accelerateToPoint(targetX, targetY, particlesArray[i]);\n    // https://www.youtube.com/watch?v=T84AWnntxZA\n    // const accelerateToPoint = (targetX, targetY, particle) => {\n    //     const magnitude = 0.001;\n    //     const vLimit = 5;\n    //     const accX = ((targetX - particle.x) * magnitude) / particle.mass;\n    //     const accY = ((targetY - particle.y) * magnitude) / particle.mass;\n    //     particle.velocityX += accX;\n    //     particle.velocityY += accY;\n    //     particle.velocityX = clamp(-vLimit, vLimit, particle.velocityX);\n    //     particle.velocityY = clamp(-vLimit, vLimit, particle.velocityY);\n    // };\n\n    const draw = ({ canvas, context, mouse }) => {\n        background(canvas, context)({ r: 0, g: 0, b: 50, a: 0.01 });\n\n        let mode = 1;\n\n        attractor.x = mouse.x ? mouse.x : canvasCenterX;\n        attractor.y = mouse.y ? mouse.y : canvasCenterY;\n\n        for (let i = 0; i < numParticles; i++) {\n            if (mouse.isDown) {\n                mode = -1;\n            } else {\n                mode = 1;\n            }\n            particlesArray[i].attract(attractor, mode, 2000);\n            particlesArray[i].velocity = particlesArray[i].velocity.limit(20);\n            particlesArray[i].updatePosWithVelocity();\n            edgeBounce(canvas, particlesArray[i]);\n            drawRotatedParticle(context, drawRake, particlesArray[i]);\n            particlesArray[i].acceleration = { x: 0, y: 0 };\n        }\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import { create2dNoiseAbs } from './math';\n\n// [[x,y], ...]\nexport const createCirclePoints = (offsetX, offsetY, radius, steps, close = true) => {\n    const startAngle = 270;\n    const maxAngle = 360 + startAngle;\n    const points = [];\n    for (let angle = startAngle; angle < maxAngle; angle += steps) {\n        const theta = angle * (Math.PI / 180);\n        const x = Math.cos(theta) * radius + offsetX;\n        const y = Math.sin(theta) * radius + offsetY;\n        points.push([x, y]);\n    }\n    if (false && close) {\n        const theta = maxAngle - 1 * (Math.PI / 180);\n        const x = Math.cos(theta) * radius + offsetX;\n        const y = Math.sin(theta) * radius + offsetY;\n        points.push([x, y]);\n    }\n    return points;\n};\nexport const createGridPointsXY = (width, height, xMargin, yMargin, columns, rows) => {\n    const gridPoints = [];\n\n    const colStep = Math.round((width - xMargin * 2) / (columns - 1));\n    const rowStep = Math.round((height - yMargin * 2) / (rows - 1));\n\n    for (let col = 0; col < columns; col++) {\n        const x = xMargin + col * colStep;\n        for (let row = 0; row < rows; row++) {\n            const y = yMargin + row * rowStep;\n            gridPoints.push([x, y]);\n        }\n    }\n\n    return { points: gridPoints, columnWidth: colStep, rowHeight: rowStep };\n};\nexport const createGridCellsXY = (width, height, columns, rows, margin = 0, gutter = 0) => {\n    const points = [];\n\n    const colStep = Math.ceil((width - margin * 2 - gutter * (columns - 1)) / columns);\n    const rowStep = Math.ceil((height - margin * 2 - gutter * (rows - 1)) / rows);\n\n    for (let row = 0; row < rows; row++) {\n        const y = margin + row * rowStep + gutter * row;\n        for (let col = 0; col < columns; col++) {\n            const x = margin + col * colStep + gutter * col;\n            points.push([x, y]);\n        }\n    }\n\n    return { points, columnWidth: colStep, rowHeight: rowStep };\n};\n// -> [{radius, rotation, position:[u,v]}, ...]\nexport const createGridPointsUV = (columns, rows) => {\n    rows = rows || columns;\n    const points = [];\n\n    const amplitude = 0.1;\n    const frequency = 1;\n\n    for (let x = 0; x < columns; x++) {\n        for (let y = 0; y < rows; y++) {\n            const u = columns <= 1 ? 0.5 : x / (columns - 1);\n            const v = columns <= 1 ? 0.5 : y / (rows - 1);\n            // const radius = Math.abs(random.gaussian() * 0.02);\n            const radius = create2dNoiseAbs(u, v);\n            const rotation = create2dNoiseAbs(u, v);\n            points.push({\n                radius,\n                rotation,\n                position: [u, v],\n            });\n        }\n    }\n    return points;\n};\n","import { createRandomNumberArray, mapRange } from '../lib/math/math';\nimport { Particle, createRandomParticleValues } from '../lib/systems/Particle';\nimport { background } from '../lib/canvas/canvas';\nimport { connectParticles, drawParticlePoint } from '../lib/canvas/canvas-particles';\nimport { createGridPointsXY } from '../lib/math/grids';\n\nexport const threeAttractors = () => {\n    const config = {\n        // width: 500,\n        // height: 500,\n        // fps: 24,\n    };\n\n    let numParticles;\n    const particlesArray = [];\n    let gridPoints = [];\n    const hue = 0;\n\n    let attractorDist;\n\n    let leftattractor;\n    let midattractor;\n    let rightattractor;\n\n    let canvasCenterX;\n    let canvasCenterY;\n    let centerRadius;\n\n    const setup = ({ canvas, context }) => {\n        canvasCenterX = canvas.width / 2;\n        canvasCenterY = canvas.height / 2;\n        centerRadius = canvas.height / 4;\n\n        attractorDist = canvas.width / 0.7;\n\n        leftattractor = { x: 0, y: canvas.height / 2, mass: 10, g: 3 };\n        midattractor = { x: canvas.width / 2, y: canvas.height / 2, mass: 50, g: 10 };\n        rightattractor = { x: canvas.width, y: canvas.height / 2, mass: 10, g: 3 };\n\n        gridPoints = createGridPointsXY(canvas.width, canvas.height, 100, 100, canvas.width / 50, canvas.height / 50)\n            .points;\n        numParticles = gridPoints.length;\n\n        for (let i = 0; i < numParticles; i++) {\n            const props = createRandomParticleValues(canvas);\n            props.x = gridPoints[i][0];\n            props.y = gridPoints[i][1];\n            props.velocityX = 0;\n            props.velocityY = 0;\n            props.mass = 1;\n            props.radius = 1; // randomNumberBetween(10, 30);\n            props.spikes = createRandomNumberArray(20, 0, 360);\n\n            const h = mapRange(0, canvas.width, 0, 90, props.x);\n            const s = 100; // lerpRange(0,10,0,100,prop.radius);\n            const l = 50; // lerpRange(0,10,25,75,prop.radius);\n            props.color = `hsla(${h},${s}%,${l}%,0.1)`;\n\n            // props.color = { r: 0, g: 0, b: 0, a: 0.1 };\n\n            particlesArray.push(new Particle(props));\n        }\n\n        background(canvas, context)('white');\n    };\n\n    const draw = ({ canvas, context, mouse }) => {\n        // background(canvas, context)({ r: 255, g: 255, b: 255, a: 0.001 });\n        for (let i = 0; i < numParticles; i++) {\n            particlesArray[i].attract(leftattractor, -1, attractorDist);\n            particlesArray[i].attract(midattractor, 1, attractorDist);\n            particlesArray[i].attract(rightattractor, -1, attractorDist);\n\n            particlesArray[i].velocity = particlesArray[i].velocity.limit(10);\n\n            particlesArray[i].updatePosWithVelocity();\n            // edgeBounce(canvas, particlesArray[i]);\n            drawParticlePoint(context)(particlesArray[i]);\n        }\n        connectParticles(context)(particlesArray, 50, false);\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import sourcePng from '../../media/images/hi1.png';\nimport { clearCanvas, drawSquareFilled, background } from '../lib/canvas/canvas';\nimport { createRandomParticleValues, edgeWrap, Particle } from '../lib/systems/Particle';\nimport { createRandomNumberArray, mapRange, randomNumberBetween } from '../lib/math/math';\nimport { connectParticles, drawParticlePoint } from '../lib/canvas/canvas-particles';\nimport { createGridPointsXY } from '../lib/math/grids';\n\nconst getImageDataFromImage = (context) => (image) => {\n    context.drawImage(image, 0, 0);\n    return context.getImageData(0, 0, image.width, image.width);\n};\n\nconst getImageDataColor = (imageData, x, y) => ({\n    r: imageData.data[y * 4 * imageData.width + x * 4],\n    g: imageData.data[y * 4 * imageData.width + x * 4 + 1],\n    b: imageData.data[y * 4 * imageData.width + x * 4 + 2],\n    a: imageData.data[y * 4 * imageData.width + x * 4 + 3],\n});\n\nexport const hiImage01 = (_) => {\n    const config = {\n        width: 600,\n        height: 600,\n    };\n\n    let imageZoomFactor;\n    const png = new Image();\n    png.src = sourcePng;\n    let imageData;\n\n    const numParticles = 500;\n    const particlesArray = [];\n    const particleColor = { r: 252, g: 3, b: 152 };\n\n    const setup = ({ canvas, context }) => {\n        imageData = getImageDataFromImage(context)(png);\n        clearCanvas(canvas, context)();\n        imageZoomFactor = canvas.width / imageData.width;\n\n        for (let i = 0; i < numParticles; i++) {\n            const props = createRandomParticleValues(canvas);\n            props.radius = randomNumberBetween(1, 5);\n            props.color = particleColor;\n            if (i % 2) {\n                props.x = 0;\n            } else {\n                props.x = canvas.width;\n            }\n            particlesArray.push(new Particle(props));\n        }\n\n        background(canvas, context)({ r: 255, g: 255, b: 0 });\n    };\n\n    const draw = ({ canvas, context, mouse }) => {\n        background(canvas, context)({ r: 255, g: 255, b: 0, a: 0.004 });\n\n        for (let i = 0; i < numParticles; i++) {\n            particlesArray[i].updatePosWithVelocity();\n            edgeWrap(canvas, particlesArray[i]);\n\n            const pxColor = getImageDataColor(\n                imageData,\n                Math.round(particlesArray[i].x / imageZoomFactor),\n                Math.round(particlesArray[i].y / imageZoomFactor)\n            );\n\n            if (pxColor.r > 250) {\n                particlesArray[i].drag(0.001);\n                particlesArray[i].color = { r: 3, g: 227, b: 252 };\n            } else {\n                particlesArray[i].color = particleColor;\n            }\n\n            drawParticlePoint(context)(particlesArray[i]);\n        }\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","module.exports = [[\"#69d2e7\",\"#a7dbd8\",\"#e0e4cc\",\"#f38630\",\"#fa6900\"],[\"#fe4365\",\"#fc9d9a\",\"#f9cdad\",\"#c8c8a9\",\"#83af9b\"],[\"#ecd078\",\"#d95b43\",\"#c02942\",\"#542437\",\"#53777a\"],[\"#556270\",\"#4ecdc4\",\"#c7f464\",\"#ff6b6b\",\"#c44d58\"],[\"#774f38\",\"#e08e79\",\"#f1d4af\",\"#ece5ce\",\"#c5e0dc\"],[\"#e8ddcb\",\"#cdb380\",\"#036564\",\"#033649\",\"#031634\"],[\"#490a3d\",\"#bd1550\",\"#e97f02\",\"#f8ca00\",\"#8a9b0f\"],[\"#594f4f\",\"#547980\",\"#45ada8\",\"#9de0ad\",\"#e5fcc2\"],[\"#00a0b0\",\"#6a4a3c\",\"#cc333f\",\"#eb6841\",\"#edc951\"],[\"#e94e77\",\"#d68189\",\"#c6a49a\",\"#c6e5d9\",\"#f4ead5\"],[\"#3fb8af\",\"#7fc7af\",\"#dad8a7\",\"#ff9e9d\",\"#ff3d7f\"],[\"#d9ceb2\",\"#948c75\",\"#d5ded9\",\"#7a6a53\",\"#99b2b7\"],[\"#ffffff\",\"#cbe86b\",\"#f2e9e1\",\"#1c140d\",\"#cbe86b\"],[\"#efffcd\",\"#dce9be\",\"#555152\",\"#2e2633\",\"#99173c\"],[\"#343838\",\"#005f6b\",\"#008c9e\",\"#00b4cc\",\"#00dffc\"],[\"#413e4a\",\"#73626e\",\"#b38184\",\"#f0b49e\",\"#f7e4be\"],[\"#ff4e50\",\"#fc913a\",\"#f9d423\",\"#ede574\",\"#e1f5c4\"],[\"#99b898\",\"#fecea8\",\"#ff847c\",\"#e84a5f\",\"#2a363b\"],[\"#655643\",\"#80bca3\",\"#f6f7bd\",\"#e6ac27\",\"#bf4d28\"],[\"#00a8c6\",\"#40c0cb\",\"#f9f2e7\",\"#aee239\",\"#8fbe00\"],[\"#351330\",\"#424254\",\"#64908a\",\"#e8caa4\",\"#cc2a41\"],[\"#554236\",\"#f77825\",\"#d3ce3d\",\"#f1efa5\",\"#60b99a\"],[\"#5d4157\",\"#838689\",\"#a8caba\",\"#cad7b2\",\"#ebe3aa\"],[\"#8c2318\",\"#5e8c6a\",\"#88a65e\",\"#bfb35a\",\"#f2c45a\"],[\"#fad089\",\"#ff9c5b\",\"#f5634a\",\"#ed303c\",\"#3b8183\"],[\"#ff4242\",\"#f4fad2\",\"#d4ee5e\",\"#e1edb9\",\"#f0f2eb\"],[\"#f8b195\",\"#f67280\",\"#c06c84\",\"#6c5b7b\",\"#355c7d\"],[\"#d1e751\",\"#ffffff\",\"#000000\",\"#4dbce9\",\"#26ade4\"],[\"#1b676b\",\"#519548\",\"#88c425\",\"#bef202\",\"#eafde6\"],[\"#5e412f\",\"#fcebb6\",\"#78c0a8\",\"#f07818\",\"#f0a830\"],[\"#bcbdac\",\"#cfbe27\",\"#f27435\",\"#f02475\",\"#3b2d38\"],[\"#452632\",\"#91204d\",\"#e4844a\",\"#e8bf56\",\"#e2f7ce\"],[\"#eee6ab\",\"#c5bc8e\",\"#696758\",\"#45484b\",\"#36393b\"],[\"#f0d8a8\",\"#3d1c00\",\"#86b8b1\",\"#f2d694\",\"#fa2a00\"],[\"#2a044a\",\"#0b2e59\",\"#0d6759\",\"#7ab317\",\"#a0c55f\"],[\"#f04155\",\"#ff823a\",\"#f2f26f\",\"#fff7bd\",\"#95cfb7\"],[\"#b9d7d9\",\"#668284\",\"#2a2829\",\"#493736\",\"#7b3b3b\"],[\"#bbbb88\",\"#ccc68d\",\"#eedd99\",\"#eec290\",\"#eeaa88\"],[\"#b3cc57\",\"#ecf081\",\"#ffbe40\",\"#ef746f\",\"#ab3e5b\"],[\"#a3a948\",\"#edb92e\",\"#f85931\",\"#ce1836\",\"#009989\"],[\"#300030\",\"#480048\",\"#601848\",\"#c04848\",\"#f07241\"],[\"#67917a\",\"#170409\",\"#b8af03\",\"#ccbf82\",\"#e33258\"],[\"#aab3ab\",\"#c4cbb7\",\"#ebefc9\",\"#eee0b7\",\"#e8caaf\"],[\"#e8d5b7\",\"#0e2430\",\"#fc3a51\",\"#f5b349\",\"#e8d5b9\"],[\"#ab526b\",\"#bca297\",\"#c5ceae\",\"#f0e2a4\",\"#f4ebc3\"],[\"#607848\",\"#789048\",\"#c0d860\",\"#f0f0d8\",\"#604848\"],[\"#b6d8c0\",\"#c8d9bf\",\"#dadabd\",\"#ecdbbc\",\"#fedcba\"],[\"#a8e6ce\",\"#dcedc2\",\"#ffd3b5\",\"#ffaaa6\",\"#ff8c94\"],[\"#3e4147\",\"#fffedf\",\"#dfba69\",\"#5a2e2e\",\"#2a2c31\"],[\"#fc354c\",\"#29221f\",\"#13747d\",\"#0abfbc\",\"#fcf7c5\"],[\"#cc0c39\",\"#e6781e\",\"#c8cf02\",\"#f8fcc1\",\"#1693a7\"],[\"#1c2130\",\"#028f76\",\"#b3e099\",\"#ffeaad\",\"#d14334\"],[\"#a7c5bd\",\"#e5ddcb\",\"#eb7b59\",\"#cf4647\",\"#524656\"],[\"#dad6ca\",\"#1bb0ce\",\"#4f8699\",\"#6a5e72\",\"#563444\"],[\"#5c323e\",\"#a82743\",\"#e15e32\",\"#c0d23e\",\"#e5f04c\"],[\"#edebe6\",\"#d6e1c7\",\"#94c7b6\",\"#403b33\",\"#d3643b\"],[\"#fdf1cc\",\"#c6d6b8\",\"#987f69\",\"#e3ad40\",\"#fcd036\"],[\"#230f2b\",\"#f21d41\",\"#ebebbc\",\"#bce3c5\",\"#82b3ae\"],[\"#b9d3b0\",\"#81bda4\",\"#b28774\",\"#f88f79\",\"#f6aa93\"],[\"#3a111c\",\"#574951\",\"#83988e\",\"#bcdea5\",\"#e6f9bc\"],[\"#5e3929\",\"#cd8c52\",\"#b7d1a3\",\"#dee8be\",\"#fcf7d3\"],[\"#1c0113\",\"#6b0103\",\"#a30006\",\"#c21a01\",\"#f03c02\"],[\"#000000\",\"#9f111b\",\"#b11623\",\"#292c37\",\"#cccccc\"],[\"#382f32\",\"#ffeaf2\",\"#fcd9e5\",\"#fbc5d8\",\"#f1396d\"],[\"#e3dfba\",\"#c8d6bf\",\"#93ccc6\",\"#6cbdb5\",\"#1a1f1e\"],[\"#f6f6f6\",\"#e8e8e8\",\"#333333\",\"#990100\",\"#b90504\"],[\"#1b325f\",\"#9cc4e4\",\"#e9f2f9\",\"#3a89c9\",\"#f26c4f\"],[\"#a1dbb2\",\"#fee5ad\",\"#faca66\",\"#f7a541\",\"#f45d4c\"],[\"#c1b398\",\"#605951\",\"#fbeec2\",\"#61a6ab\",\"#accec0\"],[\"#5e9fa3\",\"#dcd1b4\",\"#fab87f\",\"#f87e7b\",\"#b05574\"],[\"#951f2b\",\"#f5f4d7\",\"#e0dfb1\",\"#a5a36c\",\"#535233\"],[\"#8dccad\",\"#988864\",\"#fea6a2\",\"#f9d6ac\",\"#ffe9af\"],[\"#2d2d29\",\"#215a6d\",\"#3ca2a2\",\"#92c7a3\",\"#dfece6\"],[\"#413d3d\",\"#040004\",\"#c8ff00\",\"#fa023c\",\"#4b000f\"],[\"#eff3cd\",\"#b2d5ba\",\"#61ada0\",\"#248f8d\",\"#605063\"],[\"#ffefd3\",\"#fffee4\",\"#d0ecea\",\"#9fd6d2\",\"#8b7a5e\"],[\"#cfffdd\",\"#b4dec1\",\"#5c5863\",\"#a85163\",\"#ff1f4c\"],[\"#9dc9ac\",\"#fffec7\",\"#f56218\",\"#ff9d2e\",\"#919167\"],[\"#4e395d\",\"#827085\",\"#8ebe94\",\"#ccfc8e\",\"#dc5b3e\"],[\"#a8a7a7\",\"#cc527a\",\"#e8175d\",\"#474747\",\"#363636\"],[\"#f8edd1\",\"#d88a8a\",\"#474843\",\"#9d9d93\",\"#c5cfc6\"],[\"#046d8b\",\"#309292\",\"#2fb8ac\",\"#93a42a\",\"#ecbe13\"],[\"#f38a8a\",\"#55443d\",\"#a0cab5\",\"#cde9ca\",\"#f1edd0\"],[\"#a70267\",\"#f10c49\",\"#fb6b41\",\"#f6d86b\",\"#339194\"],[\"#ff003c\",\"#ff8a00\",\"#fabe28\",\"#88c100\",\"#00c176\"],[\"#ffedbf\",\"#f7803c\",\"#f54828\",\"#2e0d23\",\"#f8e4c1\"],[\"#4e4d4a\",\"#353432\",\"#94ba65\",\"#2790b0\",\"#2b4e72\"],[\"#0ca5b0\",\"#4e3f30\",\"#fefeeb\",\"#f8f4e4\",\"#a5b3aa\"],[\"#4d3b3b\",\"#de6262\",\"#ffb88c\",\"#ffd0b3\",\"#f5e0d3\"],[\"#fffbb7\",\"#a6f6af\",\"#66b6ab\",\"#5b7c8d\",\"#4f2958\"],[\"#edf6ee\",\"#d1c089\",\"#b3204d\",\"#412e28\",\"#151101\"],[\"#9d7e79\",\"#ccac95\",\"#9a947c\",\"#748b83\",\"#5b756c\"],[\"#fcfef5\",\"#e9ffe1\",\"#cdcfb7\",\"#d6e6c3\",\"#fafbe3\"],[\"#9cddc8\",\"#bfd8ad\",\"#ddd9ab\",\"#f7af63\",\"#633d2e\"],[\"#30261c\",\"#403831\",\"#36544f\",\"#1f5f61\",\"#0b8185\"],[\"#aaff00\",\"#ffaa00\",\"#ff00aa\",\"#aa00ff\",\"#00aaff\"],[\"#d1313d\",\"#e5625c\",\"#f9bf76\",\"#8eb2c5\",\"#615375\"],[\"#ffe181\",\"#eee9e5\",\"#fad3b2\",\"#ffba7f\",\"#ff9c97\"],[\"#73c8a9\",\"#dee1b6\",\"#e1b866\",\"#bd5532\",\"#373b44\"],[\"#805841\",\"#dcf7f3\",\"#fffcdd\",\"#ffd8d8\",\"#f5a2a2\"]];","import tinycolor from 'tinycolor2';\nimport * as nicepalettes from 'nice-color-palettes';\nimport { mapRange, oneOf, randomWholeBetween } from '../math/math';\n\nexport const asTinyColor = (arry) => arry.map((c) => tinycolor(c));\n\nexport const brightest = (arry) => {\n    const colors = asTinyColor(arry);\n    return colors.reduce((acc, c) => {\n        if (c.getBrightness() > acc.getBrightness()) {\n            acc = c;\n        }\n        return acc;\n    }, colors[0]);\n};\n\nexport const darkest = (arry) => {\n    const colors = asTinyColor(arry);\n    return colors.reduce((acc, c) => {\n        if (c.getBrightness() < acc.getBrightness()) {\n            acc = c;\n        }\n        return acc;\n    }, colors[0]);\n};\n\nexport const bicPenBlue = tinycolor('hsl(250,79,29)').clone();\nexport const paperWhite = tinycolor('hsl(53,3,100)').clone();\n\nexport const warmWhite = tinycolor('hsl(42, 14%, 86%)').clone();\nexport const warmPink = tinycolor('hsl(29, 42%, 86%)').clone();\n\n// greys from https://uxdesign.cc/dark-mode-ui-design-the-definitive-guide-part-1-color-53dcfaea5129\nexport const coolGreyDark = tinycolor('#1f2933').clone();\nexport const warmGreyDark = tinycolor('#27241d').clone();\n\nexport const palettes = {\n    greyWarm: [\n        '#faf97f',\n        '#e8e6e1',\n        '#d3cec4',\n        '#b8b2a7',\n        '#a39e93',\n        '#857f72',\n        '#625d52',\n        '#504a40',\n        '#423d33',\n        '#27241d',\n    ],\n    greyCool: [\n        '#f5f7fa',\n        '#e4e7eb',\n        '#cbd2d9',\n        '#9aa5b1',\n        '#7b8794',\n        '#616e7c',\n        '#52606d',\n        '#3e4c59',\n        '#323f4b',\n        '#1f2933',\n    ],\n    pop: ['#ed3441', '#ffd630', '#329fe3', '#154296', '#303030'],\n    '60s_psyc': ['#ffeb00', '#fc0019', '#01ff4f', '#ff01d7', '#5600cc', '#00edf5'],\n    '70s': ['#73BFA3', '#F2DBAE', '#F29829', '#D9631E', '#593C2C'],\n    '80s_pastells': ['#FF3F3F', '#FF48C4', '#F3EA5F', '#C04DF9', '#2BD1FC', '#38CEF6'],\n    '80s_pop': ['#FF82E2', '#70BAFF', '#FED715', '#0037B3', '#FE0879'],\n    '90s': ['#42C8B0', '#4575F3', '#6933B0', '#D36F88', '#FC8D45'],\n    retro_sunset: ['#FFD319', '#FF2975', '#F222FF', '#8C1EFF', '#FF901F'],\n    vapor_wave: ['#F6A3EF', '#50D8EC', '#DD6DFB', '#EECD69', '#6FEAE6'],\n    // https://www.colourlovers.com/palette/694737/Thought_Provoking\n    thought_provoking: [\n        'hsl(46, 75%, 70%)',\n        'hsl(10, 66%, 56%)',\n        'hsl(350, 65%, 46%)',\n        'hsl(336, 40%, 24%)',\n        'hsl(185, 19%, 40%)',\n    ],\n};\n\n// colors sampled from http://roberthodgin.com/project/meander\n// const agedWarmWhite = tinycolor('hsl(42, 43%, 76%)');\n// const tintingColor = tinycolor('hsl(38, 38%, 64%)');\n// const palette = [\n//     tinycolor('hsl(97, 9%, 73%)'),\n//     tinycolor('hsl(51, 7%, 38%)'),\n//     tinycolor('hsl(19, 39%, 47%)'),\n//     tinycolor('hsl(166, 39%, 59%)'),\n// ];\n\nexport const nicePalette = (_) => nicepalettes[randomWholeBetween(0, 99)];\nexport const palette = (_) => palettes[oneOf(Object.keys(palettes))];\n\n// hslFromRange(50, 90,270, v);\nexport const hslFromRange = (y1, x2, y2, v) => {\n    const h = mapRange(0, y1, x2, y2, v);\n    const s = 100;\n    const l = 50;\n    return tinycolor(`hsl(${h},${s}%,${l}%)`);\n};\n\n/*\nColor between 2 defined and a hue spin in the middle to introduce a 3rd\n// Palette from https://www.colourlovers.com/palette/694737/Thought_Provoking\n\nconst colorTop = 'hsl(350, 65%, 46%)';\nconst colorBottom = 'hsl(185, 19%, 40%)';\nconst distFromCenter = Math.abs(mid - currentY);\nconst color = tinycolor.mix(colorTop, colorBottom, mapRange(startY, maxY, 0, 100, currentY));\ncolor.spin(mapRange(0, mid / 2, 60, 0, distFromCenter));\ncolor.brighten(mapRange(0, mid / 2, 50, 0, distFromCenter));\ncolor.darken(mapRange(0, mid, 0, 40, distFromCenter) + randomNumberBetween(0, 30));\n */\n","/*\nCanvas animation timeline based on Canvas Sketch time keeping methods\nhttps://github.com/mattdesl/canvas-sketch/blob/master/docs/animated-sketches.md\n */\n\nexport class Timeline {\n    constructor(fps, loop, duration) {\n        this.fps = fps || 30;\n        this.loop = loop || 0; // total loops\n        this.duration = duration || 1; // duration of each loop in seconds\n        this.totalLoopFrames = this.duration ? this.duration * this.fps : 1;\n        this.iterations = 0; // number of times drawn\n        this.time = 0; // elapsed time in seconds\n        this.playhead = 0; // current progress of the loop between 0 and 1\n        this.frame = 1; // frame of the loop\n        this.elapsedLoops = 0;\n        this.startTime = Date.now();\n    }\n\n    get elapsed() {\n        return Date.now() - this.startTime;\n    }\n\n    onFrame() {\n        this.iterations++;\n        // one frame\n        this.frame++;\n        this.playhead = this.frame / this.totalLoopFrames;\n        if (this.iterations % this.fps === 0) {\n            // a second elapsed\n            this.time++;\n            if (this.frame >= this.totalLoopFrames) {\n                // one loop duration passed\n                this.elapsedLoops++;\n                this.playhead = 0;\n                this.frame = 0;\n                if (this.loop && this.elapsedLoops >= this.loop) {\n                    console.log('End of loops');\n                    return -1;\n                }\n            }\n        }\n        return 1;\n    }\n}\n","import { background, drawLineAngle, setStokeColor } from '../lib/canvas/canvas';\nimport { nicePalette } from '../lib/color/palettes';\nimport { create3dNoiseAbs, marginify, oneOf, toSinValue, uvFromAngle } from '../lib/math/math';\nimport { Timeline } from '../lib/Timeline';\nimport { createGridPointsUV } from '../lib/math/grids';\n\nexport const windLines = () => {\n    const config = {\n        width: 600,\n        height: 600,\n        fps: 60,\n    };\n\n    let counter = 0;\n    let grid = createGridPointsUV(15, 15);\n\n    const timeline = new Timeline(config.fps, 0, 5);\n\n    const setup = ({ canvas, context }) => {\n        const colors = nicePalette();\n        grid = grid.map((g) => {\n            g.color = oneOf(colors);\n            return g;\n        });\n        background(canvas, context)('rgba(255,255,255,1');\n    };\n\n    const draw = ({ canvas, context, mouse }) => {\n        background(canvas, context)('rgba(255,255,255,.1');\n\n        grid.forEach(({ position, rotation, color }) => {\n            const [u, v] = position;\n            const { x, y } = marginify({ margin: 100, u, v, width: canvas.width, height: canvas.height });\n            const t = toSinValue(timeline.playhead) * 0.1;\n            const wave = create3dNoiseAbs(u, v, counter, 3 * t) * 10;\n            const startvect = uvFromAngle((rotation + wave) * -1).setMag(25);\n            setStokeColor(context)(color);\n            drawLineAngle(context)(x + startvect.x, y + startvect.y, rotation + wave, 25, 4, 'round');\n        });\n\n        counter += 0.01;\n        return timeline.onFrame();\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","/*\nConvenience canvas sketch runner. Based on p5js\n\n\nconst variation = () => {\n    const config = {};\n\n    const setup = ({canvas, context}) => {\n        // create initial state\n    };\n\n    // will run every frame\n    const draw = ({canvas, context, mouse}) => {\n        // draw on every frame\n        return 1; // -1 to exit animation loop\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n\nTODO\n- [ ] merge screen shot code\n- [ ] Canvas Recorder  https://xosh.org/canvas-recorder/\n- [ ] coords of a mouse down to variation?\n- [ ] better touch input\n- [ ] svg https://github.com/canvg/canvg\n- [ ] great ideas here http://paperjs.org/features/\n*/\n\nimport { isHiDPI, contextScale, resizeCanvas } from './canvas/canvas';\nimport { getRandomSeed, golden } from './math/math';\nimport { defaultValue } from './utils';\n\nexport const orientation = {\n    portrait: 0,\n    landscape: 1,\n};\n\nexport const ratio = {\n    letter: 0.773, // 8.5x11\n    poster: 0.667, // 24x36\n    golden: golden - 1,\n    square: -1,\n    auto: 1,\n};\n\nexport const scale = {\n    standard: 1,\n    hidpi: 2,\n};\n\nexport const sketch = () => {\n    const mouse = {\n        x: undefined,\n        y: undefined,\n        isDown: false,\n        radius: 100,\n    };\n\n    let hasStarted = false;\n\n    let fps = 0;\n\n    let drawRuns = 0;\n\n    let currentVariationFn;\n    let currentVariationRes;\n    let animationId;\n\n    const canvasSizeFraction = 0.9;\n    const canvas = document.getElementById('canvas');\n    const context = canvas.getContext('2d');\n\n    const getCanvas = (_) => canvas;\n    const getContext = (_) => context;\n    const getMouse = (_) => mouse;\n\n    const mouseDown = (evt) => {\n        mouse.isDown = true;\n    };\n\n    const mouseMove = (evt) => {\n        const mult = isHiDPI ? 2 : 1;\n        const canvasFrame = canvas.getBoundingClientRect();\n        mouse.x = (evt.x - canvasFrame.x) * mult;\n        mouse.y = (evt.y - canvasFrame.y) * mult;\n    };\n\n    const mouseUp = (evt) => {\n        mouse.isDown = false;\n    };\n\n    const mouseOut = (evt) => {\n        mouse.x = undefined;\n        mouse.y = undefined;\n        mouse.isDown = false;\n    };\n\n    window.addEventListener('mousedown', mouseDown);\n    window.addEventListener('touchstart', mouseDown);\n\n    window.addEventListener('mousemove', mouseMove);\n    window.addEventListener('touchmove', mouseMove);\n\n    window.addEventListener('mouseup', mouseUp);\n    window.addEventListener('touchend', mouseUp);\n\n    window.addEventListener('mouseout', mouseOut);\n    window.addEventListener('touchcancel', mouseOut);\n\n    const applyCanvasSize = (config, fraction) => {\n        const width = defaultValue(config, 'width', window.innerWidth);\n        const height = defaultValue(config, 'height', window.innerHeight);\n        let newWidth = width;\n        let newHeight = height;\n\n        const cfgOrientation = defaultValue(config, 'orientation', orientation.landscape);\n        const cfgRatio = defaultValue(config, 'ratio', ratio.auto);\n        const cfgScale = defaultValue(config, 'scale', scale.standard);\n\n        const aSide = Math.min(width, height) * fraction;\n        const bSide = Math.round(cfgRatio * aSide) * fraction;\n\n        if (cfgRatio === ratio.square) {\n            newWidth = aSide;\n            newHeight = aSide;\n        } else if (cfgOrientation === orientation.portrait) {\n            newWidth = bSide;\n            newHeight = aSide;\n        } else if (cfgOrientation === orientation.landscape && cfgRatio !== ratio.auto) {\n            newWidth = aSide;\n            newHeight = bSide;\n        }\n\n        resizeCanvas(canvas, context, newWidth, newHeight, cfgScale);\n    };\n\n    const run = (variation) => {\n        currentVariationFn = variation;\n        currentVariationRes = currentVariationFn.call(this);\n\n        let currentDrawLimit;\n\n        let backgroundColor;\n\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        if (currentVariationRes.hasOwnProperty('config')) {\n            const { config } = currentVariationRes;\n            applyCanvasSize(config, canvasSizeFraction);\n            if (config.background) {\n                backgroundColor = config.background;\n            }\n            if (config.fps) {\n                fps = config.fps;\n            }\n            if (config.drawLimit > 0) {\n                currentDrawLimit = config.drawLimit;\n            }\n        } else {\n            resizeCanvas(canvas, context, window.innerWidth, window.innerHeight);\n        }\n\n        let rendering = true;\n        const targetFpsInterval = 1000 / fps;\n        let lastAnimationFrameTime;\n\n        // context.translate(0.5, 0.5);\n\n        const checkDrawLimit = () => {\n            if (currentDrawLimit) {\n                return drawRuns < currentDrawLimit;\n            }\n            return true;\n        };\n\n        const startSketch = () => {\n            window.removeEventListener('load', startSketch);\n            hasStarted = true;\n\n            currentVariationRes.setup({ canvas, context, s: this });\n\n            const render = () => {\n                const result = currentVariationRes.draw({ canvas, context, mouse });\n                drawRuns++;\n                if (result !== -1 && checkDrawLimit()) {\n                    animationId = requestAnimationFrame(render);\n                }\n            };\n\n            // https://stackoverflow.com/questions/19764018/controlling-fps-with-requestanimationframe\n            const renderAtFps = () => {\n                if (rendering) {\n                    animationId = window.requestAnimationFrame(renderAtFps);\n                }\n\n                const now = Date.now();\n                const elapsed = now - lastAnimationFrameTime;\n\n                if (elapsed > targetFpsInterval) {\n                    lastAnimationFrameTime = now - (elapsed % targetFpsInterval);\n                    const result = currentVariationRes.draw({ canvas, context, mouse });\n                    drawRuns++;\n                    if (result === -1 || (currentDrawLimit && drawRuns >= currentDrawLimit)) {\n                        rendering = false;\n                    }\n                }\n            };\n\n            if (!fps) {\n                animationId = window.requestAnimationFrame(render);\n            } else {\n                lastAnimationFrameTime = Date.now();\n                animationId = window.requestAnimationFrame(renderAtFps);\n            }\n        };\n\n        if (!hasStarted) {\n            window.addEventListener('load', startSketch);\n        } else {\n            startSketch();\n        }\n    };\n\n    const stop = () => {\n        window.cancelAnimationFrame(animationId);\n    };\n\n    const getVariationName = () => {\n        const seed = getRandomSeed();\n        let name = 'untitled';\n        if (\n            currentVariationRes &&\n            currentVariationRes.hasOwnProperty('config') &&\n            currentVariationRes.config.hasOwnProperty('name')\n        ) {\n            name = currentVariationRes.config.name;\n        }\n        return `sketch-${name}-${seed}`;\n    };\n\n    const windowResize = (evt) => {\n        // resizeCanvas(canvas, context, window.innerWidth * canvasSizeFraction, window.innerHeight * canvasSizeFraction);\n        if (animationId) {\n            stop();\n            run(currentVariationFn);\n        }\n    };\n    window.addEventListener('resize', windowResize);\n\n    return {\n        variationName: getVariationName,\n        canvas: getCanvas,\n        context: getContext,\n        mouse: getMouse,\n        run,\n        stop,\n        s: sketch,\n    };\n};\n","import tinycolor from 'tinycolor2';\nimport { background } from '../lib/canvas/canvas';\nimport { ratio, orientation } from '../lib/Sketch';\nimport { create2dNoiseAbs, mapRange, randomNumberBetween, lowest, highest } from '../lib/math/math';\n\n/*\nOriginal inspiration\nChurn by Kenny Vaden\nhttps://www.reddit.com/r/generative/comments/lq8r11/churn_r_code/\n */\n\nconst createWave = (width, angle, frequency, amplitude, noise = 1) => {\n    const points = [];\n    const cfrequency = frequency * noise;\n    const camplitude = amplitude * noise;\n\n    for (let i = 0; i < width; i++) {\n        const s = Math.sin((angle + Math.PI * 2 + i) / frequency) * amplitude;\n        const c = Math.cos((angle + Math.PI * 2 + i) / cfrequency) * camplitude;\n        points.push(s + c);\n    }\n\n    return points;\n};\n\n// get the lowest of top and the highest of bottom, height+=that difference\nconst drawWaveLine = (context) => (startx, endx, yorigin, height, topWave, bottomWave, color, dots = true) => {\n    let currentX = startx;\n    let currentY = yorigin;\n\n    const waveColor = color.clone();\n\n    // const highestTop = lowest(topWave);\n    const lineheight = highest(bottomWave) - lowest(topWave) + height;\n\n    const gradient = context.createLinearGradient(0, yorigin, 0, yorigin + lineheight);\n    gradient.addColorStop(0, waveColor.toRgbString());\n    gradient.addColorStop(1, waveColor.darken(20).toRgbString());\n\n    context.strokeStyle = waveColor.darken(70).toRgbString();\n    context.lineWidth = 0.75;\n    context.beginPath();\n\n    context.moveTo(startx, currentY);\n\n    let xstep = (endx - startx) / topWave.length + 1;\n    topWave.forEach((w) => {\n        context.lineTo(currentX, w + currentY);\n        currentX += xstep;\n    });\n\n    currentY += lineheight;\n    context.lineTo(currentX, currentY);\n\n    xstep = (endx - startx) / bottomWave.length + 1;\n    bottomWave.forEach((w) => {\n        context.lineTo(currentX, w + currentY);\n        currentX -= xstep;\n    });\n\n    context.lineTo(startx, currentY);\n\n    if (dots) {\n        context.stroke();\n        context.fillStyle = gradient;\n    } else {\n        context.fillStyle = tinycolor(waveColor).toRgbString();\n    }\n\n    context.fill();\n\n    if (dots) {\n        currentX = startx;\n        currentY = yorigin;\n        xstep = (endx - startx) / topWave.length + 1;\n        const dotColor = color.clone();\n        topWave.forEach((w) => {\n            // if (w <= highestTop * 0.5) {\n            const rnd = randomNumberBetween(0, yorigin);\n            if (rnd < 2) {\n                // context.strokeStyle = tinycolor(waveColor).darken(20).toRgbString();\n                // context.lineWidth = 2;\n                const radius = rnd < 0.008 ? randomNumberBetween(50, 100) : randomNumberBetween(1, 3);\n\n                context.fillStyle = dotColor.lighten(5).toRgbString();\n                context.beginPath();\n                context.arc(\n                    currentX + randomNumberBetween(-50, 50),\n                    w + currentY - randomNumberBetween(5, 50),\n                    radius,\n                    0,\n                    Math.PI * 2,\n                    false\n                );\n                context.fill();\n                context.stroke();\n            }\n            // }\n            currentX += xstep;\n        });\n    }\n};\n\nexport const waves01 = () => {\n    const config = {\n        name: 'waves01',\n        // orientation: orientation.portrait,\n        ratio: ratio.square,\n    };\n\n    let canvasHeight;\n    let canvasMiddle;\n\n    // Palette from https://www.colourlovers.com/palette/694737/Thought_Provoking\n    const colorBackground = 'hsl(46, 75%, 70%)';\n    const colorTop = 'hsl(350, 65%, 46%)';\n    const colorBottom = 'hsl(185, 19%, 40%)';\n\n    const waves = [];\n\n    const waveResolution = 400;\n    let waveRows;\n\n    let incrementY = 1;\n    let startY = 0;\n    let currentY;\n    let maxY;\n\n    let angle = 90;\n    let frequency = 10;\n    let amplitude = 10;\n    let cosOffset = 0;\n\n    const createWavesRow = (idx) => {\n        const mid = waveRows / 2;\n        const distFromCenter = Math.abs(mid - idx);\n\n        angle = mapRange(0, waveRows, 0, 360, idx);\n\n        frequency = mapRange(0, mid, 8, 30, distFromCenter);\n        amplitude = mapRange(0, mid, 15, 20, distFromCenter) + randomNumberBetween(-5, 5);\n\n        const noise = create2dNoiseAbs(angle, idx, amplitude * 0.5, frequency * randomNumberBetween(0, 2));\n        cosOffset = noise / randomNumberBetween(2, 10);\n\n        return {\n            top: createWave(waveResolution, angle, frequency, amplitude, cosOffset),\n            bottom: createWave(waveResolution, angle, frequency, amplitude, cosOffset),\n        };\n    };\n\n    const setup = ({ canvas, context }) => {\n        canvasHeight = canvas.height;\n        canvasMiddle = canvas.height / 2;\n\n        waveRows = canvas.height;\n\n        const buffer = canvas.height / 5;\n        startY = buffer;\n\n        currentY = startY;\n\n        maxY = canvas.height - buffer * 1.5;\n        incrementY = (maxY - startY) / waveRows;\n\n        for (let i = 0; i < waveRows; i++) {\n            waves.push(createWavesRow(i));\n        }\n\n        background(canvas, context)(tinycolor(colorBackground).lighten(20));\n    };\n\n    const draw = ({ canvas, context, mouse }) => {\n        const mid = canvasMiddle;\n\n        for (let i = 0; i < waves.length; i++) {\n            const distFromCenter = Math.abs(mid - currentY);\n            const color = tinycolor.mix(colorTop, colorBottom, mapRange(startY, maxY, 0, 100, currentY));\n\n            color.spin(mapRange(0, mid / 2, 60, 0, distFromCenter));\n            color.brighten(mapRange(0, mid / 2, 50, 0, distFromCenter));\n            color.darken(mapRange(0, mid, 0, 40, distFromCenter) + randomNumberBetween(0, 30));\n\n            const height = mapRange(startY, maxY, 50, 0, currentY);\n            drawWaveLine(context)(0, canvas.width, currentY, height, waves[i].top, waves[i].bottom, color, true);\n\n            currentY += incrementY;\n        }\n\n        // final white lines at top and bottom to clean up edges\n        // drawWaveLine(context)(0, canvas.width, currentY + rowHeight, 200, topwave, [0], 'white', false);\n        // drawWaveLine(context)(0, canvas.width, -100, 100, topwave, bottomwave, 'white', false);\n\n        return -1;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import tinycolor from 'tinycolor2';\nimport { contextScale } from './canvas';\n\n// https://www.cssfontstack.com/\nexport const textStyles = {\n    size: (s) => `${s * contextScale}px \"Helvetica Neue\",Helvetica,Arial,sans-serif`,\n    sansHelvetica: (s) => `${s * contextScale}px \"Helvetica Neue\",Helvetica,Arial,sans-serif`,\n    monoCourier: (s) =>\n        `${s * contextScale}px \"Courier New\", Courier, \"Lucida Sans Typewriter\", \"Lucida Typewriter\", monospace`,\n    monoLucidia: (s) =>\n        `${\n            s * contextScale\n        }px \"Lucida Sans Typewriter\", \"Lucida Console\", monaco, \"Bitstream Vera Sans Mono\", monospace`,\n    serifGeorgia: (s) => `${s * contextScale}px Georgia, Times, \"Times New Roman\", serif`,\n    default: '16px \"Helvetica Neue\",Helvetica,Arial,sans-serif',\n    small: '12px \"Helvetica Neue\",Helvetica,Arial,sans-serif',\n};\nexport const drawTextFilled = (context) => (text, x, y, color, style) => {\n    context.fillStyle = tinycolor(color).toRgbString();\n    context.font = style || textStyles.sansHelvetica(16);\n    context.fillText(text, x, y);\n    // https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics\n    return context.measureText(text);\n};\nexport const setTextAlignLeftTop = (context) => {\n    context.textAlign = 'left';\n    context.textBaseline = 'top';\n};\nexport const setTextAlignAllCenter = (context) => {\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n};\n","import { background, pixel, drawRect, contextScale } from '../lib/canvas/canvas';\nimport { create2dNoiseAbs, oneOf, pointDistance, randomWholeBetween, round2 } from '../lib/math/math';\nimport { brightest, darkest, nicePalette } from '../lib/color/palettes';\nimport { ratio, scale } from '../lib/Sketch';\nimport { drawTextFilled, setTextAlignLeftTop, textStyles } from '../lib/canvas/canvas-text';\nimport { createGridCellsXY } from '../lib/math/grids';\n\nclass Curve {\n    constructor(x, y, radius, angle, speed, noise) {\n        this.x = x;\n        this.y = y;\n        this.originX = x;\n        this.originY = y;\n        this.radius = radius;\n        this.speed = speed || 1;\n        this.angle = angle || 0;\n        this.noise = noise;\n\n        // Randomize some noise possibilities\n        this.xa = oneOf([randomWholeBetween(1, 5), round2(this.noise)]);\n        this.xb = oneOf([randomWholeBetween(1, 5), round2(this.noise)]);\n        this.ya = oneOf([randomWholeBetween(1, 5), round2(this.noise)]);\n        this.yb = oneOf([randomWholeBetween(1, 5), round2(this.noise)]);\n    }\n\n    get size() {\n        return this.radius * 2;\n    }\n\n    get centerX() {\n        return this.originX + this.radius;\n    }\n\n    get centerY() {\n        return this.originY + this.radius;\n    }\n\n    get distFromCenter() {\n        return pointDistance({ x: this.centerX, y: this.centerY }, { x: this.x, y: this.y });\n    }\n}\n\nexport const lissajous01 = () => {\n    const config = {\n        name: 'lissajous01',\n        ratio: ratio.square,\n        scale: scale.hidpi,\n    };\n\n    const renderBatch = 10;\n    const curves = [];\n    let canvasCenterX;\n    let canvasCenterY;\n    let centerRadius;\n    const columns = 3;\n    let margin;\n    const palette = nicePalette();\n    const colorBackground = brightest(palette).clone().lighten(10);\n    const colorCurve = darkest(palette).clone().darken(25);\n    const colorText = colorBackground.clone().darken(15).desaturate(20);\n    let tick = 0;\n    let grid;\n\n    const setup = ({ canvas, context }) => {\n        canvasCenterX = canvas.width / 2;\n        canvasCenterY = canvas.height / 2;\n        centerRadius = canvas.height / 4;\n        margin = 50 * contextScale;\n        if (columns === 1) {\n            curves.push(new Curve(canvasCenterX, canvasCenterY, centerRadius, 0, 0.05));\n        } else {\n            grid = createGridCellsXY(canvas.width, canvas.width, columns, columns, margin, margin / 2);\n            grid.points.forEach((point) => {\n                const x = point[0];\n                const y = point[1];\n                curves.push(new Curve(x, y, grid.columnWidth / 2, 0, 0.05, create2dNoiseAbs(x, y)));\n            });\n        }\n\n        background(canvas, context)(colorBackground);\n    };\n\n    const circleX = (curve, v = 1) => curve.radius * Math.cos(curve.angle * v);\n    const circleY = (curve, v = 1) => curve.radius * Math.sin(curve.angle * v);\n\n    // k is # of petals\n    // https://en.wikipedia.org/wiki/Rose_(mathematics)\n    // http://xahlee.info/SpecialPlaneCurves_dir/Rose_dir/rose.html\n    const roseX = (curve, k = 1, a = 1, b = 1) =>\n        curve.radius * Math.cos(k * curve.angle * a) * Math.cos(curve.angle * b);\n    const roseY = (curve, k = 1, a = 1, b = 1) =>\n        curve.radius * Math.cos(k * curve.angle * a) * Math.sin(curve.angle * b);\n\n    const linearYDown = (curve) => {\n        let { y } = curve;\n        if (++y > curve.size) y = 0;\n        return y;\n    };\n\n    const draw = ({ context }) => {\n        grid.points.forEach((point) => {\n            drawRect(context)(point[0], point[1], grid.columnWidth, grid.rowHeight, 1, colorText);\n        });\n        for (let b = 0; b < renderBatch; b++) {\n            for (let i = 0; i < curves.length; i++) {\n                // const idx = i + 1;\n                // const pointRad = 1;\n                const c = curves[i];\n\n                const k = round2(((i + 1) * 2) / 9);\n\n                const { xa } = c;\n                const { xb } = c;\n                const { ya } = c;\n                const { yb } = c;\n\n                // c.x = circleX(c);\n                // c.y = circleY(c);\n                c.x = roseX(c, k, xa, xb);\n                c.y = roseY(c, k, ya, yb);\n                // c.y = linearYDown(c);\n\n                // TODO, put a/b on the canvas so i can remember them!\n\n                c.angle += c.speed;\n\n                // const h = mapRange(0, c.radius, 180, 270, c.distFromCenter);\n                // const s = 100;\n                // const l = 30;\n                // const a = 0.75;\n                // const color = `hsla(${h},${s}%,${l}%,${a})`;\n\n                pixel(context)(c.x + c.centerX, c.y + c.centerY, colorCurve);\n\n                setTextAlignLeftTop(context);\n                drawTextFilled(context)(\n                    `k=${k}, ${xa}, ${xb}, ${ya}, ${yb}`,\n                    c.originX,\n                    c.originY + c.size + 10,\n                    colorText,\n                    textStyles.size(10)\n                );\n            }\n            tick++;\n        }\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import { create2dNoise, create3dNoise, pointDistance, randomNumberBetween, uvFromAngle } from './math';\nimport { Particle } from '../systems/Particle';\nimport { Vector } from './Vector';\n\nconst TAU = Math.PI * 2;\n\nexport const simplexNoise2d = (x, y, f = 0.0005) => create2dNoise(x, y, 1, f) * TAU;\nexport const simplexNoise3d = (x, y, t, f = 0.002) => create3dNoise(x, y, t, 1, f) * TAU;\n\nexport const diagLines = (x, y) => (x + y) * 0.01 * TAU;\n\n// From https://medium.com/@bit101/flow-fields-part-i-3ebebc688fd8\nexport const sinField = (x, y) => (Math.sin(x * 0.01) + Math.sin(y * 0.01)) * TAU;\n\n// random attractor params\nconst a = randomNumberBetween(-2, 2);\nconst b = randomNumberBetween(-2, 2);\nconst c = randomNumberBetween(-2, 2);\nconst d = randomNumberBetween(-2, 2);\n\n// http://paulbourke.net/fractals/clifford/\nexport const cliffordAttractor = (width, height, x, y) => {\n    const scale = 0.01;\n    x = (x - width / 2) * scale;\n    y = (y - height / 2) * scale;\n    const x1 = Math.sin(a * y) + c * Math.cos(a * x);\n    const y1 = Math.sin(b * x) + d * Math.cos(b * y);\n    return Math.atan2(y1 - y, x1 - x);\n};\n\n// http://paulbourke.net/fractals/peterdejong/\nexport const jongAttractor = (width, height, x, y) => {\n    const scale = 0.01;\n    x = (x - width / 2) * scale;\n    y = (y - height / 2) * scale;\n    const x1 = Math.sin(a * y) - Math.cos(b * x);\n    const y1 = Math.sin(c * x) - Math.cos(d * y);\n    return Math.atan2(y1 - y, x1 - x);\n};\n\n// Misc formula\nconst flowAtPoint = (x, y) => {\n    const scale = 0.01;\n    const fromCenter = pointDistance({ x, y }, { x: canvasMidX, y: canvasMidY });\n    const simplex = simplexNoise2d(x, y, 0.01);\n    // const theta = simplex;\n    const theta = (fromCenter + simplex) / 2; // mostly radial around middle\n    // const r1 = (Math.sin(1.2 * x) + 0.2 * Math.atan(2 * y)) * 8 * Math.PI;\n    // const r2 = (Math.pow(x, 2) + 0.8 * Math.pow(y, 1 / 2)) * 8 * Math.PI * 4;\n    // const theta = ((r1 + r2 + simplex) / 3) * 0.001;\n    // const theta = ((Math.cos(x) + x + Math.sin(y)) * 24) % (Math.PI / 2); // wander dl like like\n    // const theta = Math.atan2(y, x); // cones out from top left\n    // const theta = x + y + Math.cos(x * scale) * Math.sin(x * scale); // bl to tr diag and cross perp lines\n    // const theta = Math.cos(x * scale) * Math.sin(x * scale); // vertical lines\n    // const theta = Math.cos(x) * Math.sin(x) * scale; // horizontal lines\n    // const theta = x * Math.sin(y) * scale; // scribble\n    // const theta = Math.sin(x * scale) + Math.sin(y * scale); // diamonds\n    return theta * TAU;\n};\n\n/*\nconst plotFFPointLines = (num) => {\n        for (let i = 0; i < num; i++) {\n            const coords = createFFParticleCoords(noise, 0, randomWholeBetween(0, canvasMidY * 2), 2000, 1);\n            drawConnectedPoints(ctx)(coords, tinycolor('rgba(0,0,0,.5'), 1);\n        }\n    };\n */\nexport const createFFParticleCoords = (fieldFn, startX, startY, length, fMag = 1, vlimit = 1) => {\n    const props = {\n        x: startX,\n        y: startY,\n        velocityX: 0,\n        velocityY: 0,\n        mass: 1,\n    };\n    const particle = new Particle(props);\n    const coords = [];\n    for (let i = 0; i < length; i++) {\n        const theta = fieldFn(particle.x, particle.y);\n        // theta = quantize(4, theta);\n        const force = uvFromAngle(theta).setMag(fMag);\n\n        particle.applyForce(force);\n        particle.velocity = particle.velocity.limit(vlimit);\n        particle.updatePosWithVelocity();\n        coords.push([particle.x, particle.y]);\n        particle.acceleration = new Vector(0, 0);\n    }\n    return coords;\n};\n","import tinycolor from 'tinycolor2';\nimport { mapRange, randomWholeBetween, uvFromAngle, snapNumber, quantize } from '../lib/math/math';\nimport { edgeWrap, Particle, createRandomParticleValues } from '../lib/systems/Particle';\nimport { background, drawCircleFilled } from '../lib/canvas/canvas';\nimport { ratio, scale } from '../lib/Sketch';\nimport { Vector } from '../lib/math/Vector';\nimport { simplexNoise3d } from '../lib/math/attractors';\nimport { hslFromRange } from '../lib/color/palettes';\n\nexport const flowFieldParticles = () => {\n    const config = {\n        name: 'flowFieldParticles',\n        ratio: ratio.square,\n        scale: scale.standard,\n    };\n\n    const numParticles = 400;\n    const particlesArray = [];\n    const maxSize = 3;\n\n    let time = 0;\n\n    const createRandomParticle = (canvas) => {\n        const props = createRandomParticleValues(canvas);\n        props.x = randomWholeBetween(0, canvas.width);\n        props.y = randomWholeBetween(0, canvas.height);\n        props.velocityX = 0;\n        props.velocityY = 0;\n        return new Particle(props);\n    };\n\n    const setup = ({ canvas, context }) => {\n        for (let i = 0; i < numParticles; i++) {\n            particlesArray.push(createRandomParticle(canvas));\n        }\n\n        background(canvas, context)('rgba(50,50,50,1)');\n    };\n\n    const drawPixel = (canvas, context, force, particle, color, rad = 1) => {\n        particle.applyForce(force);\n        particle.velocity = particle.velocity.limit(1);\n        particle.updatePosWithVelocity();\n        edgeWrap(canvas, particle);\n        const pcolor = color || particle.color;\n        const x = snapNumber(maxSize * 2, particle.x);\n        const y = snapNumber(maxSize * 2, particle.y);\n        drawCircleFilled(context)(x, y, rad, pcolor);\n        return true;\n    };\n\n    const drawParticles = ({ canvas, context }) => {\n        for (let i = 0; i < numParticles; i++) {\n            const particle = particlesArray[i];\n            const sNoise3d = simplexNoise3d(particle.x, particle.y, time, 0.002);\n            const theta = quantize(3, sNoise3d);\n            const force = uvFromAngle(theta);\n            const clr = hslFromRange(5, 270, 360, Math.abs(theta)).setAlpha(0.25);\n            const size = mapRange(0, 5, 1, maxSize, Math.abs(theta));\n\n            drawPixel(canvas, context, force, particle, clr, size);\n\n            particle.acceleration = new Vector(0, 0);\n        }\n    };\n\n    const drawFibers = ({ canvas, context }) => {\n        const particle = createRandomParticle(canvas);\n        const length = 200;\n        for (let i = 0; i < length; i++) {\n            const sNoise3d = simplexNoise3d(particle.x, particle.y, time, 0.002);\n            const theta = sNoise3d;\n            const force = uvFromAngle(theta);\n            const clr = 'rgba(0,0,0,.05)';\n\n            drawPixel(canvas, context, force, particle, clr, 1);\n\n            particle.acceleration = new Vector(0, 0);\n        }\n    };\n\n    const draw = ({ canvas, context }) => {\n        drawFibers({ canvas, context });\n        drawParticles({ canvas, context });\n        time += 0.01;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import tinycolor from 'tinycolor2';\n\nimport { background, drawLineAngle } from '../lib/canvas/canvas';\nimport { ratio, scale } from '../lib/Sketch';\nimport { nicePalette, hslFromRange } from '../lib/color/palettes';\nimport {\n    simplexNoise2d,\n    simplexNoise3d,\n    sinField,\n    cliffordAttractor,\n    jongAttractor,\n    diagLines,\n} from '../lib/math/attractors';\nimport { mapRange, snapNumber } from '../lib/math/math';\n\nconst TAU = Math.PI * 2;\n\nconst arc = (context, x, y, size, thick, color, theta) => {\n    const startR = snapNumber(Math.PI / 2, theta);\n    const endR = startR + Math.PI / 2;\n    const clockWise = true;\n\n    context.strokeStyle = tinycolor(color).toRgbString();\n    context.lineCap = 'round';\n    context.lineWidth = thick;\n    context.beginPath();\n    context.arc(x + size, y + size, size, startR, endR, clockWise);\n    context.stroke();\n};\n\nconst circle = (context, x, y, size, color, theta) => {\n    const startR = 0; // snapNumber(Math.PI / 2, theta);\n    const endR = TAU; // startR + Math.PI / 2;\n    const clockWise = true;\n    const rad = mapRange(0, 5, size * 0.2, size * 0.6, Math.abs(theta));\n\n    context.beginPath();\n    context.arc(x + size, y + size, rad, startR, endR, clockWise);\n    context.fillStyle = tinycolor(color).toRgbString();\n    context.fill();\n};\n\nconst line = (context, x, y, size, thick, color, theta) => {\n    const startR = snapNumber(Math.PI / 2, theta) + Math.PI / 2;\n    context.strokeStyle = tinycolor(color).toRgbString();\n    drawLineAngle(context)(x + size, y + size, startR, size * 2, thick, 'round');\n};\n\nexport const flowFieldArcs = () => {\n    const config = {\n        name: 'flowFieldArcs',\n        ratio: ratio.square,\n        scale: scale.standard,\n    };\n\n    let time = 0;\n    const palette = nicePalette();\n    const colorBackground = tinycolor('rgba(50,50,50,1)');\n\n    const setup = ({ canvas, context }) => {\n        background(canvas, context)(colorBackground);\n    };\n\n    const renderField = ({ width, height }, context, fn, cell) => {\n        const mid = cell / 2;\n        for (let x = 0; x < width; x += cell) {\n            for (let y = 0; y < height; y += cell) {\n                const theta = fn(x, y);\n                const arcColor = hslFromRange(5, 270, 360, Math.abs(theta));\n                const lineColor = hslFromRange(5, 180, 270, Math.abs(theta)).darken(10);\n                line(context, x, y, mid, mid * 0.5, lineColor, theta);\n                circle(context, x, y, mid, lineColor, theta);\n                arc(context, x, y, mid, mid * 0.5, arcColor, theta);\n                arc(context, x, y, mid, mid * 0.1, 'yellow', theta);\n            }\n        }\n    };\n\n    const draw = ({ canvas, context }) => {\n        background(canvas, context)(colorBackground.setAlpha(0.1));\n\n        // const clifford = (x, y) => cliffordAttractor(canvas.width, canvas.height, x, y);\n        // const jong = (x, y) => jongAttractor(canvas.width, canvas.height, x, y);\n        const noise = (x, y) => simplexNoise3d(x, y, time, 0.001);\n\n        renderField(canvas, context, noise, Math.round(canvas.width / 20));\n        time += 0.25;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import tinycolor from 'tinycolor2';\nimport { clearCanvas, getImageDataColor } from './canvas';\nimport { averageNumArray, mapRange } from '../math/math';\n\nexport class Bitmap {\n    constructor(src) {\n        this.scaleX = 1;\n        this.scaleY = 1;\n\n        this.image = new Image();\n        this.image.src = src;\n        this.imageData = undefined;\n    }\n\n    get width() {\n        return this.imageData.width;\n    }\n\n    get height() {\n        return this.imageData.height;\n    }\n\n    get data() {\n        return this.imageData;\n    }\n\n    toCanvasX(x) {\n        return Math.round(x * this.scaleX);\n    }\n\n    toCanvasY(y) {\n        return Math.round(y * this.scaley);\n    }\n\n    init(canvas, context, clear = true) {\n        this.canvas = canvas;\n        this.context = context;\n        this.context.drawImage(this.image, 0, 0);\n        this.imageData = context.getImageData(0, 0, this.image.width, this.image.width);\n        this.scaleX = canvas.width / this.imageData.width;\n        this.scaleY = canvas.height / this.imageData.height;\n        if (clear) clearCanvas(canvas, context);\n    }\n\n    pixelColorRaw(x, y) {\n        if (x < 0) x = 0;\n        if (y < 0) y = 0;\n        if (x >= this.width) x = this.width - 1;\n        if (y >= this.height) y = this.height - 1;\n        return {\n            r: this.imageData.data[y * 4 * this.imageData.width + x * 4],\n            g: this.imageData.data[y * 4 * this.imageData.width + x * 4 + 1],\n            b: this.imageData.data[y * 4 * this.imageData.width + x * 4 + 2],\n            a: this.imageData.data[y * 4 * this.imageData.width + x * 4 + 3],\n        };\n    }\n\n    pixelColor(x, y) {\n        return tinycolor(this.pixelColorRaw(x, y));\n    }\n\n    /*\n    Gray = 0.21R + 0.72G + 0.07B // Luminosity\n    Gray = (R + G + B) Ã· 3 // Average Brightness\n    Gray = 0.299R + 0.587G + 0.114B // rec601 standard\n    Gray = 0.2126R + 0.7152G + 0.0722B // ITU-R BT.709 standard\n    Gray = 0.2627R + 0.6780G + 0.0593B // ITU-R BT.2100 standard\n     */\n    // https://sighack.com/post/averaging-rgb-colors-the-right-way\n    pixelAverageGrey(x, y) {\n        const color = this.pixelColorRaw(x, y);\n        return Math.sqrt((color.r * color.r + color.g * color.g + color.b * color.b) / 3);\n    }\n\n    pixelTheta(x, y) {\n        // return this.pixelColor(x, y).getBrightness() / 256;\n        return this.pixelAverageGrey(x, y) / 256;\n    }\n\n    pixelColorFromCanvas(x, y) {\n        return this.pixelColor(Math.round(x / this.scaleX), Math.round(y / this.scaleY));\n    }\n\n    pixelThetaFromCanvas(x, y) {\n        return this.pixelTheta(Math.round(x / this.scaleX), Math.round(y / this.scaleY));\n    }\n\n    sizeFromPixelBrightness(x, y, size = 5, low = 0, max = 255) {\n        const pixelColor = this.pixelColorFromCanvas(x, y);\n        const brightness = 256 - pixelColor.getBrightness();\n        return mapRange(low, max, 0, size, brightness);\n    }\n\n    averageGreyFromCell(x, y, w, h, res = 2) {\n        const points = [];\n        for (let i = x; i < x + w; i += res) {\n            for (let k = y; k < y + h; k += res) {\n                points.push(this.pixelAverageGrey(Math.round(i / this.scaleX), Math.round(k / this.scaleY)));\n            }\n        }\n        return averageNumArray(points);\n    }\n\n    // const createColorArrayFromImageData = (imageData) => {\n    //     const data = [];\n    //     for (let y = 0, { height } = imageData; y < height; y++) {\n    //         for (let x = 0, { width } = imageData; x < width; x++) {\n    //             data.push({ x, y, ...getImageColor(imageData, x, y) });\n    //         }\n    //     }\n    //     return data;\n    // };\n}\n\n/*\nconst renderImage = () => {\n        for (let x = startX; x < maxX; x++) {\n            for (let y = startY; y < maxY; y++) {\n                const color = image.pixelColorFromCanvas(x, y);\n                pixel(ctx)(x, y, color, 'square', 1);\n            }\n        }\n    };\n */\n","// \"paint splatters\" around center point\nimport { randomNumberBetween, randomWholeBetween } from '../math/math';\nimport { drawCircleFilled } from './canvas';\n\nconst TAU = Math.PI * 2;\n\nexport const splatter = (context) => (x, y, color, size, amount = 3, range = 20) => {\n    for (let i = 0; i < amount; i++) {\n        const s = randomWholeBetween(size * 0.25, size * 3);\n        // circle dist\n        const radius = randomWholeBetween(0, range);\n        const angle = randomNumberBetween(0, TAU);\n        const xoff = radius * Math.cos(angle);\n        const yoff = radius * Math.sin(angle);\n        // square dist\n        // const xoff = randomWholeBetween(-range, range);\n        // const yoff = randomWholeBetween(-range, range);\n        drawCircleFilled(context)(x + xoff, y + yoff, s, color);\n    }\n};\n","import tinycolor from 'tinycolor2';\nimport { pixel, drawCircleFilled } from './canvas';\nimport { mapRange } from '../math/math';\n\nlet lineCap = 'butt';\nlet lineJoin = 'miter';\n\nexport const turtleLineMode = (m = 'butt') => {\n    if (m === 'butt') {\n        lineCap = 'butt';\n        lineJoin = 'miter';\n    } else if (m === 'round') {\n        lineCap = 'round';\n        lineJoin = 'round';\n    }\n};\n\nexport const plotLines = (context) => (points, color = 'black', width = 1) => {\n    context.beginPath();\n    context.strokeStyle = tinycolor(color).toRgbString();\n    context.lineWidth = width;\n    context.lineCap = lineCap;\n    context.lineJoin = lineJoin;\n\n    points.forEach((coords, i) => {\n        if (i === 0) {\n            context.moveTo(coords[0], coords[1]);\n        } else {\n            context.lineTo(coords[0], coords[1]);\n        }\n    });\n    context.stroke();\n};\n\nexport const drawPoints = (ctx) => (points, color = 'black', width = 1) => {\n    points.forEach((coords, i) => {\n        pixel(ctx)(coords[0], coords[1], color, 'circle', width);\n    });\n};\n\nexport const drawConnectedPoints = (ctx) => (points, color = 'black', width = 1, close = false, drawPoint = false) => {\n    ctx.beginPath();\n    ctx.strokeStyle = tinycolor(color).clone().toRgbString();\n\n    ctx.lineWidth = width;\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n\n    points.forEach((coords, i) => {\n        if (i === 0) {\n            ctx.moveTo(coords[0], coords[1]);\n        } else {\n            ctx.lineTo(coords[0], coords[1]);\n        }\n        if (drawPoint) {\n            drawCircleFilled(ctx)(coords[0], coords[1], 1, 'red');\n        }\n    });\n    if (close) {\n        ctx.lineTo(points[0][0], points[0][1]);\n    }\n    ctx.stroke();\n};\n\nexport const drawPointsTaper = (ctx) => (points, color = 'black', width = 1) => {\n    ctx.strokeStyle = tinycolor(color).clone().toRgbString();\n\n    const mid = points.length / 2;\n\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n\n    points.forEach((coords, i) => {\n        const dist = Math.abs(mid - i);\n        const w = mapRange(0, mid, width, 1, dist);\n        ctx.lineWidth = w;\n        ctx.beginPath();\n        ctx.moveTo(coords[0], coords[1]);\n        ctx.lineTo(coords[0], coords[1]);\n        ctx.stroke();\n    });\n};\n\nexport const circleAtPoint = (context) => (points, color = 'black', radius = 5) => {\n    points.forEach((coords) => {\n        drawCircleFilled(context)(coords[0], coords[1], radius, color);\n    });\n};\n\nexport const variableCircleAtPoint = (context) => (points, color = 'black', radius = 5, freq = 10, amp = 2) => {\n    points.forEach((coords) => {\n        const v = Math.sin(coords[0] / freq) * amp;\n        drawCircleFilled(context)(coords[0], coords[1], Math.abs(radius - v), color);\n    });\n};\n\nexport const drawSegment = (ctx) => (segments, color, weight, points = false) => {\n    ctx.lineCap = 'round';\n    // ctx.lineJoin = 'round';\n    ctx.strokeStyle = tinycolor(color).clone().toRgbString();\n    ctx.lineWidth = weight;\n    ctx.beginPath();\n    segments.forEach((seg, i) => {\n        if (i === 0) {\n            ctx.moveTo(seg.start.x, seg.start.y);\n        } else {\n            ctx.lineTo(seg.start.x, seg.start.y);\n        }\n        ctx.lineTo(seg.end.x, seg.end.y);\n    });\n    ctx.stroke();\n    if (points) {\n        segments.forEach((seg, i) => {\n            const rad = i === 0 || i === segments.length - 1 ? 3 : 1;\n            drawCircleFilled(ctx)(seg.start.x, seg.start.y, rad, 'green');\n            drawCircleFilled(ctx)(seg.end.x, seg.end.y, rad, 'red');\n        });\n    }\n};\n\nexport const drawSegmentTaper = (ctx) => (segments, color, maxWeight, minWeight = 1, points = false) => {\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    ctx.strokeStyle = tinycolor(color).clone().toRgbString();\n\n    const mid = segments.length / 2;\n\n    segments.forEach((seg, i) => {\n        const dist = Math.abs(mid - i);\n        const w = mapRange(0, mid, maxWeight, minWeight, dist);\n\n        ctx.beginPath();\n        ctx.lineWidth = w;\n        if (i === 0) {\n            ctx.moveTo(seg.start.x, seg.start.y);\n        } else {\n            ctx.lineTo(seg.start.x, seg.start.y);\n        }\n        ctx.lineTo(seg.end.x, seg.end.y);\n        ctx.stroke();\n    });\n\n    if (points) {\n        segments.forEach((seg, i) => {\n            const rad = i === 0 || i === segments.length - 1 ? 3 : 1;\n            drawCircleFilled(ctx)(seg.start.x, seg.start.y, rad, 'green');\n            drawCircleFilled(ctx)(seg.end.x, seg.end.y, rad, 'red');\n        });\n    }\n};\n","import tinycolor from 'tinycolor2';\nimport { mapRange, pointDistance, randomWholeBetween, uvFromAngle, valueCloseTo } from '../math/math';\nimport { drawPoints } from './canvas-linespoints';\n\nexport const renderField = ({ width, height }, context, fn, color = 'black', resolution = '50', length = 10) => {\n    const xStep = Math.round(width / resolution);\n    const yStep = Math.round(height / resolution);\n    const xMid = xStep / 2;\n    const yMid = yStep / 2;\n    for (let x = 0; x < width; x += xStep) {\n        for (let y = 0; y < height; y += yStep) {\n            const theta = fn(x, y);\n            const vect = uvFromAngle(theta).setMag(length || xMid);\n            const x1 = x + xMid;\n            const y1 = y + yMid;\n            const x2 = x1 + vect.x;\n            const y2 = y1 + vect.y;\n            context.strokeStyle = tinycolor(color);\n            context.lineWidth = 1;\n            context.beginPath();\n            context.moveTo(x1, y1);\n            context.lineTo(x2, y2);\n            context.stroke();\n        }\n    }\n};\n\nexport const renderFieldColor = (\n    { width, height },\n    context,\n    fn,\n    resolution = '50',\n    lowColor,\n    highColor,\n    noiseMax = 5\n) => {\n    const xStep = Math.round(width / resolution);\n    const yStep = Math.round(height / resolution);\n    for (let x = 0; x < width; x += xStep) {\n        for (let y = 0; y < height; y += yStep) {\n            const theta = fn(x, y);\n            const colorMix = mapRange(0, noiseMax * 2, 0, 100, theta + noiseMax);\n            const fillColor = tinycolor.mix(lowColor, highColor, colorMix);\n            context.fillStyle = tinycolor(fillColor).toRgbString();\n            context.fillRect(x, y, x + xStep, y + yStep);\n        }\n    }\n};\n\n// https://codepen.io/crummy/pen/RWRWQe?editors=0010\n// http://bl.ocks.org/blinsay/c8bcfeff0b6159f44aec\n// https://github.com/anvaka/streamlines\nexport const renderFieldContour = (\n    { width, height },\n    context,\n    fn,\n    min = -8,\n    max = 8,\n    steps = 30,\n    lowColor = 'black',\n    highColor = 'white',\n    varience = 0.025\n) => {\n    const nsteps = (max - min) / steps;\n    const rpoints = 100000;\n\n    for (let n = min; n < max; n += nsteps) {\n        const lowPoints = [];\n        const highPoints = [];\n        for (let i = 0; i < rpoints; i++) {\n            const px = randomWholeBetween(0, width);\n            const py = randomWholeBetween(0, height);\n            const nheight = fn(px, py);\n            if (valueCloseTo(n, nheight, varience)) {\n                if (nheight <= 0) lowPoints.push([px, py]);\n                else highPoints.push([px, py]);\n\n                // const vect = uvFromAngle(nheight).setMag(5);\n                // const x2 = px + vect.x;\n                // const y2 = py + vect.y;\n                // context.strokeStyle = tinycolor(lowColor);\n                // context.lineWidth = 1;\n                // context.beginPath();\n                // context.moveTo(px, py);\n                // context.lineTo(x2, y2);\n                // context.stroke();\n            }\n        }\n        drawPoints(context)(lowPoints, lowColor, 1);\n        drawPoints(context)(highPoints, highColor, 1);\n    }\n};\n\n// https://thingonitsown.blogspot.com/2019/02/finding-perlin-contours.html\n/*\nfunction renderNoiseContour(startX, startY, borderVal, fn) {\n    const lookRad = 2;\n    let nextX = startX;\n    let nextY = startY;\n    const coords = [];\n    // set color\n    // start shape\n\n    let distance = 0;\n    for (let i = 0; i < 50000; i++) {\n        const lastDistance = distance;\n        const lastX = nextX;\n        const lastY = nextY;\n        for (\n            distance = lastDistance + Math.PI / 2;\n            (distance > lastDistance - Math.PI / 2 && !valueCloseTo(borderVal, fn(startX, startY), 0.0035)) ||\n            distance === lastDistance + Math.PI / 2;\n            distance -= 0.17\n        ) {\n            nextX = lastX + lookRad * Math.cos(distance);\n            nextY = lastY - lookRad * Math.sin(distance);\n        }\n        coords.push([nextX, nextY]);\n        // vertex(nextX - mx + windowWidth / 2, nextY - my + windowHeight / 2)\n\n        if (pointDistance({ x: nextX, y: nextY }, { x: startX, y: startY }) < lookRad && i > 1) {\n            if (i > 4) {\n                // endShape(CLOSE)\n                return coords;\n            }\n            break;\n        }\n    }\n}\n*/\n","import tinycolor from 'tinycolor2';\nimport { mapRange, randomWholeBetween, uvFromAngle, snapNumber, quantize, pointDistance } from '../lib/math/math';\nimport { Particle, createRandomParticleValues } from '../lib/systems/Particle';\nimport { background, drawCircleFilled } from '../lib/canvas/canvas';\nimport { ratio, scale } from '../lib/Sketch';\nimport { Vector } from '../lib/math/Vector';\nimport { diagLines, simplexNoise2d, simplexNoise3d } from '../lib/math/attractors';\nimport { hslFromRange, warmWhite } from '../lib/color/palettes';\nimport { Bitmap } from '../lib/canvas/Bitmap';\nimport sourcePng from '../../media/images/kristijan-arsov-woman-400.png';\nimport { splatter } from '../lib/canvas/canvas-paint';\nimport { renderField } from '../lib/canvas/rendernoise';\n\n/*\nhttps://marcteyssier.com/projects/flowfield/\nhttps://larrycarlson.com/collections/wavy-art-prints\n */\n\nconst TAU = Math.PI * 2;\n\nexport const flowFieldImage = () => {\n    const config = {\n        name: 'flowFieldImage',\n        ratio: ratio.square,\n        scale: scale.standard,\n    };\n\n    const maxSize = 5;\n    let time = 0;\n    const backgroundColor = warmWhite;\n    const image = new Bitmap(sourcePng);\n\n    const createRandomParticle = (canvas) => {\n        const props = createRandomParticleValues(canvas);\n        props.x = randomWholeBetween(0, canvas.width);\n        props.y = randomWholeBetween(0, canvas.height);\n        props.velocityX = 0;\n        props.velocityY = 0;\n        return new Particle(props);\n    };\n\n    const imageFlow = (x, y) => image.pixelThetaFromCanvas(x, y) * TAU;\n\n    const setup = ({ canvas, context }) => {\n        image.init(canvas, context);\n        background(canvas, context)(backgroundColor);\n        renderField(canvas, context, imageFlow, 'rgba(0,0,0,.15)', 50, 10);\n    };\n\n    const drawPixel = (canvas, context, particle, color, rad = 1) => {\n        const pcolor = color || particle.color;\n        const { x } = particle;\n        const { y } = particle;\n        drawCircleFilled(context)(x, y, rad, pcolor);\n        return true;\n    };\n\n    const drawParticle = ({ canvas, context }, particle) => {\n        const theta = imageFlow(particle.x, particle.y);\n        const force = uvFromAngle(theta);\n        particle.applyForce(force);\n        particle.velocity = particle.velocity.limit(3);\n        particle.updatePosWithVelocity();\n\n        const fromCenter = pointDistance(particle, { x: canvas.width / 2, y: canvas.height / 2 });\n\n        const imagePixelColor = image.pixelColorFromCanvas(particle.x, particle.y);\n        const imagePixelBrightness = 256 - imagePixelColor.getBrightness();\n        const hslColor = hslFromRange(canvas.width, 90, 270, particle.x).spin(time);\n        const particleColor = tinycolor.mix(hslColor, imagePixelColor, 90);\n        particleColor.desaturate(mapRange(canvas.width / 3, canvas.width / 2, 0, 10, fromCenter));\n\n        const size = mapRange(0, 255, 0, maxSize, imagePixelBrightness);\n        const sizeMult = mapRange(canvas.width / 3, canvas.width / 2, 1, 5, fromCenter);\n\n        drawPixel(canvas, context, particle, particleColor, size * sizeMult);\n\n        if (Math.abs(theta) >= 5.7) {\n            splatter(context)(particle.x, particle.y, particleColor.brighten(10), 1, 3, 100);\n        }\n\n        particle.acceleration = new Vector(0, 0);\n    };\n\n    const drawFibers = ({ canvas, context }) => {\n        const particle = createRandomParticle(canvas);\n        const length = randomWholeBetween(50, 1000);\n        for (let i = 0; i < length; i++) {\n            drawParticle({ canvas, context }, particle);\n        }\n    };\n\n    const draw = ({ canvas, context }) => {\n        drawFibers({ canvas, context });\n        time += 0.05;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import tinycolor from 'tinycolor2';\nimport { randomWholeBetween, degreesToRadians, randomPointAround } from '../lib/math/math';\nimport { background, drawCircleFilled } from '../lib/canvas/canvas';\nimport { ratio, scale } from '../lib/Sketch';\nimport { brightest, darkest, hslFromRange, nicePalette } from '../lib/color/palettes';\nimport { simplexNoise2d, simplexNoise3d } from '../lib/math/attractors';\n\n/*\nStarted here but took a detour\nhttps://www.reddit.com/r/creativecoding/comments/lx9prx/audiovisual_sound_of_space_solar_system_david/\n */\n\nconst TAU = Math.PI * 2;\n\nexport const radialNoise = () => {\n    const config = {\n        name: 'radialNoise',\n        ratio: ratio.square,\n        scale: scale.standard,\n    };\n\n    let canvasMidX;\n    let canvasMidY;\n    let maxRadius;\n    let radiusScale;\n    let currentRadiusSize = 360;\n\n    let originX;\n    let originY;\n    let time = 0;\n    let angle = 0;\n\n    const history = {};\n\n    const palette = nicePalette();\n    const backgroundColor = brightest(palette).clone().lighten(10);\n    const imageColor = darkest(palette).clone();\n\n    // let imageZoomFactor;\n    // const png = new Image();\n    // png.src = sourcePng;\n    // let imageData;\n\n    const setup = ({ canvas, context }) => {\n        canvasMidX = canvas.width / 2;\n        canvasMidY = canvas.height / 2;\n        maxRadius = canvas.width * 0.4;\n        radiusScale = currentRadiusSize / maxRadius;\n\n        originX = canvasMidX;\n        originY = canvasMidY;\n\n        // imageData = getImageDataFromImage(context)(png);\n        // clearCanvas(canvas, context)();\n        // imageZoomFactor = 360 / imageData.width;\n\n        background(canvas, context)(backgroundColor);\n    };\n\n    const drawPixel = (context, x, y, color, size = 1, heading = 0) => {\n        drawCircleFilled(context)(x, y, size, color);\n    };\n\n    const drawLine = (context, x1, y1, x2, y2, color, strokeWidth = 1) => {\n        context.strokeStyle = tinycolor(color).toRgbString();\n        context.lineWidth = strokeWidth;\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n    };\n\n    const circleX = (r, a, v = 1) => r * Math.cos(a * v);\n    const circleY = (r, a, v = 1) => r * Math.sin(a * v);\n\n    const draw = ({ canvas, context }) => {\n        for (let radius = 0; radius < currentRadiusSize; radius++) {\n            let ox;\n            let oy;\n\n            if (history.hasOwnProperty(radius)) {\n                ox = history[radius].x;\n                oy = history[radius].y;\n            }\n\n            const radScaled = radius / radiusScale;\n            const a = 1;\n            const b = 1;\n            const radians = degreesToRadians(angle) - Math.PI / 8;\n            let x = originX + circleX(radScaled, radians, a);\n            let y = originY + circleY(radScaled, radians, b);\n\n            const noise = simplexNoise3d(x, y, time, 0.02);\n            x += noise;\n            y += noise;\n\n            const monoColor = imageColor.clone().spin(time * 0.1);\n\n            if (ox !== undefined && oy !== undefined) {\n                drawLine(context, ox, oy, x, y, monoColor, 0.5);\n            }\n\n            history[radius] = { x, y };\n\n            time += 0.01;\n        }\n\n        angle += 3;\n\n        if (angle > 360) {\n            angle = 0;\n\n            currentRadiusSize = randomWholeBetween(100, 360);\n            radiusScale = 1; // currentRadiusSize / maxRadius;\n\n            const offs = randomPointAround((canvas.width - maxRadius) * 0.75);\n            originX = canvasMidX + offs.x;\n            originY = canvasMidY + offs.y;\n            background(canvas, context)(backgroundColor.setAlpha(0.25));\n        }\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import tinycolor from 'tinycolor2';\nimport random from 'canvas-sketch-util/random';\nimport { randomWholeBetween, uvFromAngle, oneOf, randomPointAround, randomBoolean } from '../lib/math/math';\nimport { Particle } from '../lib/systems/Particle';\nimport { background } from '../lib/canvas/canvas';\nimport { ratio, scale } from '../lib/Sketch';\nimport { palettes } from '../lib/color/palettes';\nimport { Vector } from '../lib/math/Vector';\nimport { simplexNoise2d, simplexNoise3d, cliffordAttractor, jongAttractor } from '../lib/math/attractors';\nimport { renderField } from '../lib/canvas/rendernoise';\n\n/*\nBased on\nhttps://tylerxhobbs.com/essays/2020/flow-fields\n */\n\nconst drawRibbonPoint = (context, point, i, thickness = 0, height = 0) => {\n    const x = point[0];\n    const y = point[1];\n    const jitterX = 0; // Math.cos(i * 0.05) * height;\n    const jitterY = 0; // Math.sin(i * 0.05) * height;\n    context.lineTo(x + thickness + jitterX, y + thickness + jitterY);\n};\n\nconst drawRibbon = (context) => (sideA, sideB, color, stroke = false, thickness = 1) => {\n    const startx = sideA[0][0];\n    const starty = sideA[0][1];\n    const endx = sideB[0][0] + thickness;\n    const endy = sideB[0][1] + thickness;\n\n    const rColor = tinycolor(color).clone();\n    const gradient = context.createLinearGradient(0, starty - thickness, 0, endy + thickness);\n    gradient.addColorStop(0, rColor.toRgbString());\n    gradient.addColorStop(1, rColor.clone().darken(20).toRgbString());\n\n    context.beginPath();\n    context.moveTo(startx, starty);\n    sideA.forEach((w, i) => {\n        drawRibbonPoint(context, w, i, 0, thickness * 0.1);\n    });\n    sideB.forEach((w, i) => {\n        drawRibbonPoint(context, w, i, thickness, thickness * 0.1);\n    });\n    context.lineTo(startx, starty);\n\n    if (stroke) {\n        context.strokeStyle = rColor.darken(70).toRgbString();\n        context.lineWidth = 0.75;\n        context.stroke();\n    }\n\n    context.fillStyle = gradient;\n    context.fill();\n};\n\nexport const flowFieldRibbons = () => {\n    const config = {\n        name: 'flowFieldRibbons',\n        ratio: ratio.square,\n        scale: scale.standard,\n    };\n\n    let canvasMidX;\n    let canvasMidY;\n    const palette = palettes.pop;\n    const backgroundColor = tinycolor('white');\n\n    let time = 0;\n\n    const createRibbon = (fieldFn, startX, startY, length, vlimit = 1) => {\n        const props = {\n            x: startX,\n            y: startY,\n            velocityX: 0,\n            velocityY: 0,\n            mass: 1,\n        };\n        const particle = new Particle(props);\n        const coords = [];\n        for (let i = 0; i < length; i++) {\n            const theta = fieldFn(particle.x, particle.y);\n            // theta = quantize(4, theta);\n            const force = uvFromAngle(theta);\n            particle.applyForce(force);\n            particle.velocity = particle.velocity.limit(vlimit);\n            particle.updatePosWithVelocity();\n            coords.push([particle.x, particle.y]);\n            particle.acceleration = new Vector(0, 0);\n        }\n        return coords;\n    };\n\n    const simplex2d = (x, y) => simplexNoise2d(x, y, 0.0005);\n    const simplex3d = (x, y) => simplexNoise3d(x, y, time, 0.0005);\n    const clifford = (x, y) => cliffordAttractor(canvas.width, canvas.height, x, y);\n    const jong = (x, y) => jongAttractor(canvas.width, canvas.height, x, y);\n    const noise = randomBoolean() ? clifford : jong;\n\n    let maxRadius;\n\n    const setup = ({ canvas, context }) => {\n        canvasMidX = canvas.width / 2;\n        canvasMidY = canvas.height / 2;\n        maxRadius = canvas.width * 0.4;\n\n        background(canvas, context)(backgroundColor);\n\n        renderField(canvas, context, noise, 'rgba(0,0,0,.15)', canvas.width / 10, 5);\n    };\n\n    const ribbonLen = randomWholeBetween(50, 1000);\n    const ribbonThickness = randomWholeBetween(3, 30);\n\n    const draw = ({ canvas, context }) => {\n        const color = oneOf(palette);\n        const len = maxRadius * 2; // ribbonLen;\n\n        const rpoint = random.onCircle(maxRadius); // randomPointAround(maxRadius * 0.4);\n\n        const x = rpoint[0] + canvasMidX;\n        const y = rpoint[1] + canvasMidY;\n        const x2 = x + 2;\n        const y2 = y;\n\n        const sideA = createRibbon(noise, x, y, len, 1);\n        const sideB = createRibbon(noise, x2, y2, len, 1).reverse();\n\n        drawRibbon(context)(sideA, sideB, color, false, ribbonThickness);\n\n        time += 0.01;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import tinycolor from 'tinycolor2';\nimport random from 'canvas-sketch-util/random';\nimport { randomWholeBetween, uvFromAngle, oneOf, randomPointAround, randomBoolean } from '../lib/math/math';\nimport { Particle } from '../lib/systems/Particle';\nimport { background } from '../lib/canvas/canvas';\nimport { ratio, scale } from '../lib/Sketch';\nimport { palettes } from '../lib/color/palettes';\nimport { Vector } from '../lib/math/Vector';\nimport { simplexNoise2d, simplexNoise3d, cliffordAttractor, jongAttractor } from '../lib/math/attractors';\nimport { renderField } from '../lib/canvas/rendernoise';\n\n/*\nBased on\nhttps://tylerxhobbs.com/essays/2020/flow-fields\n */\n\nconst drawRibbonPoint = (context, point, i, thickness = 0, height = 0) => {\n    const x = point[0];\n    const y = point[1];\n    const jitterX = 0; // Math.cos(i * 0.05) * height;\n    const jitterY = 0; // Math.sin(i * 0.05) * height;\n    context.lineTo(x + thickness + jitterX, y + thickness + jitterY);\n};\n\nconst drawRibbonSegment = (context, sideA, sideB, color, stroke = false, thickness = 1) => {\n    const segStartX = sideA[0][0];\n    const segStartY = sideA[0][1];\n    const segEndX = sideB[0][0] + thickness;\n    const segEndY = sideB[0][1] + thickness;\n\n    const rColor = tinycolor(color).clone();\n    const gradient = context.createLinearGradient(0, segStartY - thickness, 0, segEndY + thickness);\n    gradient.addColorStop(0, rColor.toRgbString());\n    gradient.addColorStop(0.5, rColor.toRgbString());\n    gradient.addColorStop(1, rColor.clone().darken(20).saturate(50).toRgbString());\n\n    context.beginPath();\n    context.moveTo(segStartX, segStartY);\n    sideA.forEach((w, i) => {\n        drawRibbonPoint(context, w, i, 0, thickness * 0.1);\n    });\n    sideB.forEach((w, i) => {\n        drawRibbonPoint(context, w, i, thickness, thickness * 0.1);\n    });\n    context.lineTo(segStartX, segStartY);\n\n    if (stroke) {\n        context.strokeStyle = rColor.darken(70).toRgbString();\n        context.lineWidth = 0.75;\n        context.stroke();\n    }\n\n    context.fillStyle = gradient;\n    context.fill();\n};\n\nconst drawRibbon = (context) => (sideA, sideB, color, stroke = false, thickness = 1) => {\n    const segmentGap = 1; // randomWholeBetween(1, 4);\n    const segments = randomWholeBetween(1, 3);\n    // const segmentsStep = Math.ceil((sideA.length - segmentGap * (segments - 1)) / segments);\n    const segmentData = [];\n\n    let left = sideA.length;\n    let start = 0;\n\n    for (let i = 0; i < segments; i++) {\n        const len = randomWholeBetween(1, left / 2);\n        // const start = i * segmentsStep + segmentGap * i;\n        // const len = segmentsStep;\n        segmentData.push({\n            sideA: sideA.slice(start, start + len),\n            sideB: sideB.slice(start, start + len).reverse(),\n        });\n        start += len + segmentGap;\n        left -= len + segmentGap;\n    }\n    segmentData.forEach((s) => {\n        drawRibbonSegment(context, s.sideA, s.sideB, color, stroke, thickness);\n    });\n\n    // drawRibbonSegment(context, segmentStart, segmentLen, sideA, sideB, color, stroke, thickness);\n};\n\nexport const flowFieldRibbons2 = () => {\n    const config = {\n        name: 'flowFieldRibbons',\n        ratio: ratio.square,\n        scale: scale.standard,\n    };\n\n    let canvasMidX;\n    let canvasMidY;\n    const palette = palettes['80s_pop'];\n    const backgroundColor = tinycolor('white');\n\n    let time = 0;\n\n    const createRibbon = (fieldFn, startX, startY, length, vlimit = 1) => {\n        const props = {\n            x: startX,\n            y: startY,\n            velocityX: 0,\n            velocityY: 0,\n            mass: 1,\n        };\n        const particle = new Particle(props);\n        const coords = [];\n        for (let i = 0; i < length; i++) {\n            const theta = fieldFn(particle.x, particle.y);\n            // theta = quantize(4, theta);\n            const force = uvFromAngle(theta);\n            particle.applyForce(force);\n            particle.velocity = particle.velocity.limit(vlimit);\n            particle.updatePosWithVelocity();\n            coords.push([particle.x, particle.y]);\n            particle.acceleration = new Vector(0, 0);\n        }\n        return coords;\n    };\n\n    const simplex2d = (x, y) => simplexNoise2d(x, y, 0.0001);\n    const simplex3d = (x, y) => simplexNoise3d(x, y, time, 0.0005);\n    const clifford = (x, y) => cliffordAttractor(canvas.width, canvas.height, x, y);\n    const jong = (x, y) => jongAttractor(canvas.width, canvas.height, x, y);\n    const noise = randomBoolean() ? clifford : jong;\n\n    let maxRadius;\n\n    const setup = ({ canvas, context }) => {\n        canvasMidX = canvas.width / 2;\n        canvasMidY = canvas.height / 2;\n        maxRadius = canvas.width * 0.4;\n\n        background(canvas, context)(backgroundColor);\n\n        // renderField(\n        //     canvas,\n        //     context,\n        //     noise,\n        //     tinycolor(oneOf(palette)).lighten(30),\n        //     canvas.width / 10,\n        //     canvas.width / 20\n        // );\n    };\n\n    const ribbonLen = randomWholeBetween(200, 500);\n    const ribbonThickness = randomWholeBetween(100, 300);\n\n    const maxItterations = randomWholeBetween(10, 30);\n    let currentItteration = 0;\n\n    const draw = ({ canvas, context }) => {\n        const color = oneOf(palette);\n        const len = ribbonLen;\n\n        // const rpoint = random.onCircle(maxRadius); // randomPointAround(maxRadius * 0.4);\n        const rpoint = [randomWholeBetween(0, canvas.width), randomWholeBetween(0, canvas.height)];\n\n        const x = rpoint[0];\n        const y = rpoint[1];\n        const x2 = x + 2;\n        const y2 = y;\n\n        const sideA = createRibbon(noise, x, y, len, 1);\n        const sideB = createRibbon(noise, x2, y2, len, 1);\n\n        drawRibbon(context)(sideA, sideB, color, false, ribbonThickness);\n\n        time += 0.01;\n\n        if (++currentItteration > maxItterations) return -1;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","export class Point {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    get toArray() {\n        return [this.x, this.y, this.z];\n    }\n\n    get toObject() {\n        return {\n            x: this.x,\n            y: this.y,\n            z: this.z,\n        };\n    }\n\n    clone() {\n        return new Point(this.x, this.y, this.z);\n    }\n}\n","/*\nFlow field inside?\nParticle physics inside\nBorder\nClip to no overflow?\n */\n\nimport tinycolor from 'tinycolor2';\nimport { randomWholeBetween, randomNormalWholeBetween } from '../math/math';\nimport { defaultValue } from '../utils';\nimport { drawRect, drawRectFilled, resetStyles } from './canvas';\nimport { Point } from '../math/Point';\n\nconst defaultMP = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n};\n\nconst defaultFlow = (x, y) => 0;\n\nlet boxIndex = 0;\n\nexport class Box {\n    #backgroundColor;\n\n    constructor(props, children = []) {\n        this.name = `box${boxIndex++}`;\n        this.canvas = props.canvas;\n        this.context = props.context;\n        this.x = props.x;\n        this.y = props.y;\n        this.width = props.width;\n        this.height = props.height;\n        this.rotation = defaultValue(props, 'rotation', 0);\n        this.#backgroundColor = tinycolor(defaultValue(props, 'backgroundColor', 'white'));\n        this.padding = defaultValue(props, 'padding', defaultMP);\n        this.clip = defaultValue(props, 'clip', true);\n        this.flowField = defaultValue(props, 'flowField', defaultFlow);\n        this.children = children;\n    }\n\n    get x2() {\n        return this.x + this.width;\n    }\n\n    get y2() {\n        return this.y + this.height;\n    }\n\n    get innerWidth() {\n        return this.width - this.padding.left - this.padding.right;\n    }\n\n    get innerHeight() {\n        return this.height - this.padding.top - this.padding.bottom;\n    }\n\n    get centerPoint() {\n        return new Point(this.x + Math.round(this.width / 2), this.y + Math.round(this.height / 2));\n    }\n\n    get backgroundColor() {\n        return this.#backgroundColor.clone();\n    }\n\n    set backgroundColor(c) {\n        this.#backgroundColor = tinycolor(c);\n    }\n\n    fill(color) {\n        color = color || this.backgroundColor;\n        drawRectFilled(this.context)(this.x, this.y, this.width, this.height, color);\n    }\n\n    erase() {\n        this.context.clearRect(this.x, this.y, this.width, this.height);\n    }\n\n    outline(thickness, color) {\n        this.context.strokeStyle = tinycolor(color).toRgbString();\n        this.context.lineWidth = thickness;\n        this.context.rect(this.x, this.y, this.width, this.height);\n        this.context.stroke();\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/clip\n    // https://dustinpfister.github.io/2019/08/14/canvas-save/\n    // https://dustinpfister.github.io/2019/10/08/canvas-clip/\n    createClip() {\n        this.context.save();\n        const region = new Path2D();\n        region.rect(this.x, this.y, this.width, this.height);\n        this.context.clip(region);\n    }\n\n    removeClip() {\n        this.context.restore();\n    }\n\n    translateX(x) {\n        return this.x + x;\n    }\n\n    translateY(y) {\n        return this.y + y;\n    }\n\n    translateInto(point) {\n        return new Point(this.translateX(point.x), this.translateY(point.y));\n    }\n\n    translateOut(point) {\n        return new Point(point.x - this.x, point.y - this.y);\n    }\n\n    randomPointInside(distribution = 'whole') {\n        const edgeBuffer = 10;\n        let point = new Point(\n            randomWholeBetween(edgeBuffer, this.width - edgeBuffer),\n            randomWholeBetween(edgeBuffer, this.height - edgeBuffer)\n        );\n        if (distribution === 'normal') {\n            point = new Point(\n                randomNormalWholeBetween(edgeBuffer, this.width - edgeBuffer),\n                randomNormalWholeBetween(edgeBuffer, this.height - edgeBuffer)\n            );\n        }\n        return point;\n    }\n\n    isInside(point) {\n        return point.x >= this.x && point.x <= this.x2 && point.y >= this.y && point.y <= this.y2;\n    }\n\n    isOutside(point) {\n        return !this.isInside(point);\n    }\n\n    clipPoint(point) {\n        const np = new Point(point.x, point.y);\n        if (point.x < this.x) np.x = this.x;\n        if (point.x > this.x2) np.x = this.x2;\n        if (point.y < this.y) np.y = this.y;\n        if (point.y > this.y2) np.y = this.y2;\n        return np;\n    }\n\n    wrapPoint(point) {\n        const np = new Point(point.x, point.y);\n        if (point.x < this.x) np.x = this.x2;\n        if (point.x > this.x2) np.x = this.x;\n        if (point.y < this.y) np.y = this.y2;\n        if (point.y > this.y2) np.y = this.y;\n        return np;\n    }\n\n    particleEdgeBounce = (particle) => {\n        const psize = particle.radius;\n        if (particle.x + psize > this.x2) {\n            particle.x = this.x2 - psize;\n            particle.reverseVelocityX();\n        }\n        if (particle.x - psize < this.x) {\n            particle.x = this.x + psize;\n            particle.reverseVelocityX();\n        }\n        if (particle.y + psize > this.y2) {\n            particle.y = this.y2 - psize;\n            particle.reverseVelocityY();\n        }\n        if (particle.y - psize < this.y) {\n            particle.y = this.y + psize;\n            particle.reverseVelocityY();\n        }\n    };\n\n    particleEdgeWrap = (particle) => {\n        const psize = particle.radius;\n        if (particle.x + psize > this.x2) {\n            particle.x = this.x + psize;\n        }\n        if (particle.x - psize < this.x) {\n            particle.x = this.x2 - psize;\n        }\n        if (particle.y + psize > this.y2) {\n            particle.y = this.y + psize;\n        }\n        if (particle.y - psize < this.y) {\n            particle.y = this.y2 - psize;\n        }\n    };\n}\n","// More detailed implementation https://blog.wolfram.com/2016/05/06/computational-stippling-can-machines-do-as-well-as-humans/\nimport tinycolor from 'tinycolor2';\nimport {\n    logInterval,\n    mapRange,\n    randomNormalWholeBetween,\n    randomNumberBetween,\n    randomSign,\n    randomWholeBetween,\n    round2,\n} from '../math/math';\nimport { drawRectFilled } from './canvas';\nimport { plotLines } from './canvas-linespoints';\nimport { last } from '../utils';\n\nconst TAU = Math.PI * 2;\nconst intervals = logInterval(10, 1, 10);\nlet clipping = true;\n\nexport const setTextureClippingMask = (v = true) => {\n    clipping = v;\n};\n\nconst getRotatedXYCoords = (x, y, length, theta) => ({\n    x1: x,\n    y1: y,\n    x2: x + length * Math.cos(theta),\n    y2: y + length * Math.sin(theta),\n});\n\nconst getRotatedYCoords = (x, y, length, theta) => ({\n    x1: x,\n    y1: y,\n    x2: x + length, // * Math.cos(theta),\n    y2: y + length * Math.sin(theta),\n});\n\nexport const texturizeRect = (context) => (\n    x,\n    y,\n    width,\n    height,\n    color = 'black',\n    amount = 5,\n    mode = 'circles2',\n    mult = 1\n) => {\n    if (amount <= 0) return;\n\n    if (clipping) {\n        context.save();\n        const region = new Path2D();\n        region.rect(x, y, width, height);\n        context.clip(region);\n    }\n\n    const quarter = width / 4;\n    const strokeColor = tinycolor(color).toRgbString();\n    const lineWidth = 1;\n    // const numIttr = mapRange(1, 10, 2, 200, amount) * mult;\n    const endValue = mode === 'xhatch' ? 100 : 25;\n    const numIttr = intervals[Math.round(amount) - 1] * mapRange(1, 10, 1, endValue, amount) * mult;\n\n    const maxDim = Math.max(width, height);\n    const maxRadius = maxDim * 0.7;\n\n    for (let i = 0; i < numIttr; i++) {\n        let tx = randomWholeBetween(x, x + width);\n        let ty = randomWholeBetween(y, y + height);\n        let size = randomWholeBetween(quarter, width);\n\n        context.strokeStyle = strokeColor;\n        context.lineWidth = lineWidth;\n        context.beginPath();\n\n        if (mode === 'circles') {\n            context.arc(tx, ty, size, 0, Math.PI * 2, false);\n        } else if (mode === 'circles2') {\n            tx = randomNormalWholeBetween(x, x + width);\n            ty = randomNormalWholeBetween(y, y + height);\n            size = randomWholeBetween(1, maxRadius);\n            context.arc(tx, ty, size, 0, Math.PI * 2, false);\n        } else if (mode === 'xhatch') {\n            const tx2 = tx + size * randomSign();\n            const ty2 = ty + size * randomSign();\n            context.moveTo(tx, ty);\n            context.lineTo(tx2, ty2);\n        }\n\n        context.stroke();\n    }\n    if (clipping) {\n        context.restore();\n    }\n};\n\nexport const spiralRect = (context) => (x, y, width, height, color = 'black', amount = 5, mult = 1) => {\n    if (amount <= 0) return;\n\n    const maxDim = Math.max(width, height);\n    const maxRadius = maxDim * 0.7;\n\n    const fillamount = mapRange(1, 10, 30, 150, amount) * mult;\n\n    const numIttr = fillamount; // maxDim * (amount * 0.8);\n    const radIncr = maxRadius / numIttr;\n\n    const thetaIncr = TAU / 50; // Math.floor(amount) * 0.05; // TAU / (Math.floor(amount) * 0.05);\n\n    if (clipping) {\n        context.save();\n        const region = new Path2D();\n        region.rect(x, y, width, height);\n        context.clip(region);\n    }\n\n    const strokeColor = tinycolor(color).toRgbString();\n    const lineWidth = 1;\n\n    context.strokeStyle = strokeColor;\n    context.lineWidth = lineWidth;\n\n    const spirals = intervals[Math.round(amount) - 1] * mapRange(1, 10, 1, 15, amount) * mult;\n    for (let s = 0; s < spirals; s++) {\n        const ox = randomNormalWholeBetween(x, x + width);\n        const oy = randomNormalWholeBetween(y, y + height);\n        let theta = randomNumberBetween(0, TAU);\n        let radius = 0;\n\n        context.beginPath();\n        context.moveTo(ox, oy);\n\n        for (let i = 0; i < numIttr; i++) {\n            radius += radIncr; // + Math.sin(i / 2);\n            theta += thetaIncr;\n            const px = ox + radius * Math.cos(theta);\n            const py = oy + radius * Math.sin(theta);\n            context.lineTo(px, py);\n        }\n\n        context.stroke();\n    }\n    if (clipping) {\n        context.restore();\n    }\n};\n\nexport const stippleRect = (context) => (x, y, width, height, color = 'black', amount = 5, theta) => {\n    if (amount <= 0) return;\n    // amount = Math.min(amount, 10);\n    if (clipping) {\n        context.save();\n        const region = new Path2D();\n        region.rect(x, y, width, height);\n        context.clip(region);\n    }\n\n    const strokeColor = tinycolor(color).toRgbString();\n    const size = 3;\n\n    const colStep = width / mapRange(1, 10, 3, width / 3, amount);\n    const rowStep = height / mapRange(1, 10, 3, height / 3, amount);\n\n    context.strokeStyle = strokeColor;\n    context.lineWidth = 2;\n    context.lineCap = 'round';\n\n    theta = theta === undefined ? Math.PI / 3 : theta;\n\n    for (let i = 0; i < width; i += colStep) {\n        for (let j = 0; j < height; j += rowStep) {\n            // about the middle of the cell\n            const tx = x + randomNormalWholeBetween(i, i + colStep);\n            const ty = y + randomNormalWholeBetween(j, j + rowStep);\n\n            const coords = getRotatedYCoords(tx, ty, size, theta);\n\n            const tx2 = coords.x2; // tx + size;\n            const ty2 = coords.y2; // ty + size * -1;\n            context.beginPath();\n            context.moveTo(tx, ty);\n            context.lineTo(tx2, ty2);\n            context.stroke();\n        }\n    }\n\n    if (clipping) {\n        context.restore();\n    }\n};\n\n// TODO needs to intersect \"nicely\" at the rect area boundaries\nexport const linesRect = (context) => (x, y, width, height, color = 'black', amount = 5, theta = 0, mult = 1) => {\n    if (amount <= 0) return;\n\n    if (clipping) {\n        context.save();\n        const region = new Path2D();\n        region.rect(x, y, width, height);\n        context.clip(region);\n    }\n\n    const points = [];\n\n    const strokeColor = tinycolor(color).toRgbString();\n    const lineWidth = 1;\n\n    const yDelta = width * Math.sin(theta); // height of angle line\n    const yIncrement = height / amount / 2;\n\n    let yincr = 0;\n    const loops = height / yIncrement;\n\n    // keep centered\n    const yOff = yIncrement / 2 - yDelta / 2;\n    let connectSide = 1;\n    let coords = { x1: x, y1: y, x2: x, y2: y };\n    let lastCoords = { x1: x, y1: Math.min(y, y + yOff), x2: x, y2: Math.min(y, y + yOff) };\n\n    // drawRectFilled(context)(x, y, width, height, '#ddd');\n\n    for (let i = 0; i < loops; i++) {\n        coords = getRotatedYCoords(x, yOff + y + yincr, width, theta);\n\n        // draw bar\n\n        if (yincr === 0) {\n            // line to the top\n            if (coords.y1 > y) {\n                points.push([coords.x1, y]);\n            }\n            points.push([coords.x1, coords.y1]);\n        }\n\n        if (connectSide === 1) {\n            // right\n            points.push([coords.x2, coords.y2]);\n            points.push([coords.x2, coords.y2 + yIncrement]);\n        } else {\n            // left\n            points.push([coords.x1, coords.y1]);\n            points.push([coords.x1, coords.y1 + yIncrement]);\n        }\n\n        yincr += yIncrement;\n        connectSide *= -1;\n        lastCoords = coords;\n    }\n\n    // line to the bottom\n    if (last(points)[1] < y + height) {\n        last(points)[1] = y + height;\n    }\n\n    plotLines(context)(points, strokeColor, lineWidth);\n\n    if (clipping) {\n        context.restore();\n    }\n};\n\n/*\nexport const linesRect = (context) => (x, y, width, height, color = 'black', amount = 5, theta = 0, mult = 1) => {\n    if (amount <= 0) return;\n\n    if (clipping) {\n        context.save();\n        const region = new Path2D();\n        region.rect(x, y, width, height);\n        context.clip(region);\n    }\n\n    // theta = 0.5;\n\n    const centerH = Math.round(width / 2);\n    const centerV = Math.round(height / 2);\n    const quarter = width / 4;\n    const strokeColor = tinycolor(color).toRgbString();\n    const lineWidth = 1;\n    // const numIttr = mapRange(1, 10, 1, height / 2, amount);\n    const numIttr = (intervals[Math.round(amount) - 1] * mapRange(1, 10, 1, 15, amount) * mult) / 1;\n\n    const yDelta = width * Math.sin(theta); // height of angle line\n    const steps = height / amount / 2;\n    // keep centered\n    const yOff = steps / 2 - yDelta / 2;\n    let connectSide = -1;\n    let coords = { x1: x, y1: y, x2: x, y2: y };\n    let lastCoords = { x1: x, y1: Math.min(y, y + yOff), x2: x, y2: Math.min(y, y + yOff) };\n\n    drawRectFilled(context)(x, y, width, height, '#ddd');\n\n    // const maxx = x + width;\n    // const maxy = y + height;\n\n    const points = [];\n\n    for (let i = 0; i < height; i += steps) {\n        coords = getRotatedYCoords(x, yOff + y + i, width, theta);\n\n        // if (coords.y1 < y) {\n        //     const a = coords.y1 - y;\n        //     const b = a / Math.atan(round2(theta));\n        //\n        //     context.beginPath();\n        //     context.strokeStyle = 'red';\n        //     // context.moveTo(x, y);\n        //     // context.lineTo(x, y + a);\n        //     context.moveTo(coords.x1, y);\n        //     context.lineTo(coords.x1 - b, y);\n        //     context.stroke();\n        // }\n        //\n        // if (coords.y2 > maxy) {\n        //     const a = coords.y2 - maxy;\n        //     const b = a / Math.atan(round2(theta));\n        //\n        //     context.beginPath();\n        //     context.strokeStyle = 'green';\n        //     // context.moveTo(maxx, maxy);\n        //     // context.lineTo(maxx, maxy + a);\n        //     context.moveTo(maxx, maxy);\n        //     context.lineTo(maxx - b, maxy);\n        //     context.stroke();\n        // }\n\n        // draw bar\n        context.beginPath();\n        context.strokeStyle = strokeColor;\n        context.lineWidth = lineWidth;\n        if(i === 0) {\n            context.moveTo(coords.x1, coords.y1);\n        } else {\n            context.moveTo(coords.x1, coords.y1);\n        }\n        context.moveTo(coords.x1, coords.y1);\n        context.lineTo(coords.x2, coords.y2);\n        points.push([coords.x1, coords.y1]);\n        points.push([coords.x2, coords.y2]);\n        context.stroke();\n\n        context.beginPath();\n        if (connectSide === -1) {\n            // left\n            context.moveTo(lastCoords.x1, lastCoords.y1);\n            context.lineTo(coords.x1, coords.y1);\n            points.push([lastCoords.x1, lastCoords.y1]);\n            points.push([coords.x1, coords.y1]);\n        } else {\n            // right\n            context.moveTo(lastCoords.x2, lastCoords.y2);\n            context.lineTo(coords.x2, coords.y2);\n            points.push([lastCoords.x2, lastCoords.y2]);\n            points.push([coords.x2, coords.y2]);\n        }\n        context.stroke();\n\n        connectSide *= -1;\n        lastCoords = coords;\n    }\n\n    context.beginPath();\n    if (connectSide === -1) {\n        // left\n        context.moveTo(lastCoords.x1, lastCoords.y1);\n        context.lineTo(x, y + height);\n        points.push([lastCoords.x1, lastCoords.y1]);\n        points.push([x, y + height]);\n    } else {\n        // right\n        context.moveTo(lastCoords.x2, lastCoords.y2);\n        context.lineTo(x + width, Math.max(coords.y2, y + height));\n        points.push([lastCoords.x2, lastCoords.y2]);\n        points.push([x + width, Math.max(coords.y2, y + height)]);\n    }\n    context.stroke();\n\n    // plotPoints(context)(points);\n\n    if (clipping) {\n        context.restore();\n    }\n};\n */\n\n/*\nconst theta = (Math.PI * angle) / 180.0;\nconst x2 = x1 + length * Math.cos(theta);\nconst y2 = y1 + length * Math.sin(theta);\n */\n","import tinycolor from 'tinycolor2';\nimport { Particle, createRandomParticleValues } from '../lib/systems/Particle';\nimport { background, pixel, resetStyles } from '../lib/canvas/canvas';\nimport { mapRange, oneOf, uvFromAngle } from '../lib/math/math';\nimport { ratio, scale } from '../lib/Sketch';\nimport { palettes, warmGreyDark, warmWhite, warmPink, paperWhite, bicPenBlue } from '../lib/color/palettes';\nimport { Box } from '../lib/canvas/Box';\nimport { simplexNoise3d } from '../lib/math/attractors';\nimport { Vector } from '../lib/math/Vector';\nimport { linesRect, stippleRect, texturizeRect } from '../lib/canvas/canvas-textures';\nimport { connectParticles, drawParticlePoint } from '../lib/canvas/canvas-particles';\nimport { createGridCellsXY } from '../lib/math/grids';\n\nexport const shadedBoxes = () => {\n    const config = {\n        name: 'shadedBoxes',\n        ratio: ratio.square,\n        scale: scale.standard,\n    };\n\n    const numParticles = 30;\n\n    let canvasCenterX;\n    let canvasCenterY;\n    let centerRadius;\n    let grid;\n    const boxes = [];\n    const palette = palettes.pop;\n    let time = 0;\n\n    const setup = ({ canvas, context }) => {\n        canvasCenterX = canvas.width / 2;\n        canvasCenterY = canvas.height / 2;\n        centerRadius = canvas.height / 4;\n\n        background(canvas, context)(paperWhite);\n\n        const boxwhite = paperWhite.clone().darken(10).saturate(10);\n        const boxbg = [boxwhite, bicPenBlue];\n        const boxfg = [bicPenBlue, boxwhite];\n\n        const gridMargin = Math.round(canvas.width / 10);\n        const gridGutter = Math.round(gridMargin / 4);\n\n        grid = createGridCellsXY(canvas.width, canvas.height, 1, 10, gridMargin, gridGutter);\n\n        grid.points.forEach((p, i) => {\n            boxes.push(\n                new Box({\n                    canvas,\n                    context,\n                    x: p[0],\n                    y: p[1],\n                    width: grid.columnWidth,\n                    height: grid.rowHeight,\n                })\n            );\n        });\n\n        let freq = 0.0001;\n\n        boxes.forEach((b, bidx) => {\n            const particles = [];\n            const clr = bidx % 2 === 0 ? 0 : 1;\n            b.backgroundColor = bicPenBlue.clone(); // boxbg[clr];\n            b.flowField = (x, y, t) => simplexNoise3d(x, y, t, freq);\n            freq += 0.0005;\n            for (let i = 0; i < numParticles; i++) {\n                const props = createRandomParticleValues(canvas);\n                const coords = b.translateInto(b.randomPointInside('normal'));\n                props.x = coords.x;\n                props.y = coords.y;\n                props.velocityX = 0;\n                props.velocityY = 0;\n                props.radius = 1;\n                props.color = bidx <= 4 ? bicPenBlue.clone() : paperWhite.clone(); // tinycolor(boxfg[clr]).clone().setAlpha(0.5);\n                particles.push(new Particle(props));\n            }\n            b.children = particles;\n\n            stippleRect(context)(b.x, b.y, b.width, b.height, b.backgroundColor, bidx + 1);\n        });\n\n        // boxes.forEach((b) => {\n        //     b.fill();\n        // });\n\n        return -1;\n    };\n\n    const draw = ({ canvas, context }) => {\n        boxes.forEach((box) => {\n            box.createClip();\n            box.children.forEach((particle) => {\n                const theta = box.flowField(particle.x, particle.y, time);\n                const force = uvFromAngle(theta);\n                particle.applyForce(force);\n                particle.velocity = particle.velocity.limit(1);\n                particle.updatePosWithVelocity();\n                particle.acceleration = new Vector(0, 0);\n                box.particleEdgeWrap(particle);\n                pixel(context)(particle.x, particle.y, particle.color, 'circle', 0.5);\n            });\n            box.removeClip();\n        });\n        time += 0.1;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import tinycolor from 'tinycolor2';\nimport { mapRange } from '../lib/math/math';\nimport { background, pixel } from '../lib/canvas/canvas';\nimport { ratio, scale, orientation } from '../lib/Sketch';\nimport { paperWhite } from '../lib/color/palettes';\nimport { Bitmap } from '../lib/canvas/Bitmap';\nimport sourcePng from '../../media/images/alexander-krivitskiy-2wOEPBkaH7o-unsplash.png';\n\n/*\nhttps://larrycarlson.com/collections/wavy-art-prints\n */\n\nexport const larrycarlson02 = () => {\n    const config = {\n        name: 'larrycarlson2',\n        ratio: ratio.square,\n        // ratio: ratio.poster,\n        // orientation: orientation.portrait,\n        scale: scale.standard,\n    };\n\n    let ctx;\n    let canvasWidth;\n    let canvasHeight;\n    let canvasCenterX;\n    let canvasCenterY;\n    let centerRadius;\n    let imageWidth;\n    let imageHeight;\n    let startX;\n    let maxX;\n    let startY;\n    let maxY;\n    const margin = 50;\n    const ribbonThickness = 10;\n\n    const backgroundColor = paperWhite.clone();\n    const image = new Bitmap(sourcePng);\n\n    const colorImageTop = tinycolor('#ffeb00');\n    const colorImageBottom = tinycolor('#01ff4f');\n\n    const colorLinesTop = tinycolor('#ff01d7');\n    const colorLinesBottom = tinycolor('#5600cc');\n\n    const setup = ({ canvas, context }) => {\n        image.init(canvas, context);\n\n        ctx = context;\n        canvasWidth = canvas.width;\n        canvasHeight = canvas.height;\n        canvasCenterX = canvas.width / 2;\n        canvasCenterY = canvas.height / 2;\n        centerRadius = canvas.height / 4;\n\n        imageWidth = canvas.width - margin * 2;\n        imageHeight = canvas.height - margin * 2;\n\n        startX = margin;\n        maxX = canvas.width - margin;\n        startY = margin;\n        maxY = canvas.height - margin;\n\n        background(canvas, context)(backgroundColor);\n    };\n\n    // const circleX = (theta, amp, freq) => Math.cos(theta / freq) * amp;\n    // const circleY = (theta, amp, freq) => Math.sin(theta / freq) * amp;\n\n    const renderImage = () => {\n        const resolution = ribbonThickness / 2;\n        const border = margin / -2;\n        // const freq = 30;\n        // const amp = 1;\n        // let theta = 0;\n        for (let x = startX + border; x < maxX - border; x += resolution) {\n            for (let y = startY + border; y < maxY - border; y += resolution) {\n                const pxcolor = image.pixelColorFromCanvas(x, y);\n                const pxbrightness = pxcolor.getBrightness();\n                const bright = mapRange(128, 255, 0, 50, pxbrightness);\n\n                const color = tinycolor.mix(colorImageTop, colorImageBottom, mapRange(startY, maxY, 0, 100, y));\n\n                const size = resolution;\n\n                if (pxbrightness > 128) color.brighten(bright);\n\n                if (pxbrightness >= 70 && pxbrightness <= 100) {\n                    color.spin(30);\n                }\n\n                if (pxbrightness >= 120 && pxbrightness <= 220) {\n                    // color.spin(-30);\n                }\n\n                // const ox = circleX(theta, amp, freq) + x;\n                // const oy = circleY(theta, amp, freq) + y;\n\n                pixel(ctx)(x, y, color, 'circle', size);\n\n                // theta += 0.25;\n            }\n        }\n    };\n\n    const drawRibbonPoint = (point, isOtherSide) => {\n        const x = point[0];\n        const y = point[1];\n\n        // -2 +1 to keep from overlapping other ribbons and give it a min thickness of 1\n        const size = image.sizeFromPixelBrightness(x, y, ribbonThickness - 2, 128, 255) + 0.75;\n        let jitterX = 0; // size;\n        // let jitterY = 0;\n\n        if (isOtherSide) {\n            jitterX = size * -1;\n            // jitterY = size * -0.25;\n        }\n\n        ctx.lineTo(x + jitterX, y);\n    };\n\n    const drawRibbon = (sideA, color, stroke = false) => {\n        const rColor = tinycolor(color).clone();\n        const gradient = ctx.createLinearGradient(0, startY, 0, maxY);\n        gradient.addColorStop(0, colorLinesTop.toRgbString());\n        gradient.addColorStop(1, colorLinesBottom.toRgbString());\n\n        ctx.beginPath();\n        ctx.moveTo(sideA[0], sideA[0]);\n        sideA.forEach((w) => {\n            drawRibbonPoint(w, false);\n        });\n        sideA.reverse().forEach((w) => {\n            drawRibbonPoint(w, true);\n        });\n        ctx.closePath();\n\n        if (stroke) {\n            ctx.strokeStyle = rColor.darken(70).toRgbString();\n            ctx.lineWidth = 0.75;\n            ctx.stroke();\n        }\n\n        ctx.fillStyle = gradient;\n        ctx.fill();\n    };\n\n    const renderPoints = (points) => {\n        points.forEach((line) => {\n            if (line.length) {\n                drawRibbon(line, 'red', false, 0);\n            }\n        });\n    };\n\n    /*\n    https://www.desmos.com/calculator/rzwar3xxpy\n    y-x = amp * Math.sin((y+x)/freq)\n     */\n    const getPointsDiagSinWave = (xoffset, yoffset) => {\n        const freq = 40; // 30\n        const amp = 15; // 5\n        let y = 0;\n        const a = Math.PI / 3; // angle of the wave, 1 is 45\n        const points = [];\n        for (let x = 0; x < canvasWidth; x++) {\n            const b = x; // Math.sin(x / Math.PI) * 2;\n            // y = amp * Math.sin((y + b) / freq) + x * a;\n            y = amp * Math.sin((y * a + b) / freq) + x * a;\n            const px = x + xoffset;\n            const py = y + yoffset;\n            if (px > startX && px < maxX && py > startY && py < maxY) {\n                points.push([px, py]);\n            }\n        }\n        return points;\n    };\n\n    const draw = ({ canvas, context }) => {\n        const points = [];\n\n        renderImage();\n\n        for (let x = (imageWidth + 100) * -1; x < imageWidth * 2; x += ribbonThickness) {\n            points.push(getPointsDiagSinWave(x, 0));\n        }\n\n        renderPoints(points);\n\n        return -1;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","// https://github.com/gdenisov/cardinal-spline-js\n// https://github.com/gdenisov/cardinal-spline-js/blob/master/src/curve_calc.js\n/*!\tCurve calc function for canvas 2.3.1\n *\tEpistemex (c) 2013-2014\n *\tLicense: MIT\n */\n\n/**\n * Calculates an array containing points representing a cardinal spline through given point array.\n * Points must be arranged as: [x1, y1, x2, y2, ..., xn, yn].\n *\n * The points for the cardinal spline are returned as a new array.\n *\n * @param {Array} points - point array\n * @param {Number} [tension=0.5] - tension. Typically between [0.0, 1.0] but can be exceeded\n * @param {Number} [numOfSeg=20] - number of segments between two points (line resolution)\n * @param {Boolean} [close=false] - Close the ends making the line continuous\n * @returns {Float32Array} New array with the calculated points that was added to the path\n */\nexport const getCurvePoints = (points, tension, numOfSeg, close) => {\n    // options or defaults\n    tension = typeof tension === 'number' ? tension : 0.5;\n    numOfSeg = numOfSeg || 25;\n\n    let pts; // for cloning point array\n    let i = 1;\n    let l = points.length;\n    let rPos = 0;\n    const rLen = (l - 2) * numOfSeg + 2 + (close ? 2 * numOfSeg : 0);\n\n    if (rLen < 0) {\n        return [];\n    }\n\n    const res = new Float32Array(rLen);\n    const cache = new Float32Array((numOfSeg + 2) * 4);\n    let cachePtr = 4;\n\n    pts = points.slice(0);\n\n    if (close) {\n        pts.unshift(points[l - 1]); // insert end point as first point\n        pts.unshift(points[l - 2]);\n        pts.push(points[0], points[1]); // first point as last point\n    } else {\n        pts.unshift(points[1]); // copy 1. point and insert at beginning\n        pts.unshift(points[0]);\n        pts.push(points[l - 2], points[l - 1]); // duplicate end-points\n    }\n\n    // cache inner-loop calculations as they are based on t alone\n    cache[0] = 1; // 1,0,0,0\n\n    for (; i < numOfSeg; i++) {\n        const st = i / numOfSeg;\n        const st2 = st * st;\n        const st3 = st2 * st;\n        const st23 = st3 * 2;\n        const st32 = st2 * 3;\n\n        cache[cachePtr++] = st23 - st32 + 1; // c1\n        cache[cachePtr++] = st32 - st23; // c2\n        cache[cachePtr++] = st3 - 2 * st2 + st; // c3\n        cache[cachePtr++] = st3 - st2; // c4\n    }\n\n    cache[++cachePtr] = 1; // 0,1,0,0\n\n    // calc. points\n    parse(pts, cache, l);\n\n    if (close) {\n        // l = points.length;\n        pts = [];\n        pts.push(points[l - 4], points[l - 3], points[l - 2], points[l - 1]); // second last and last\n        pts.push(points[0], points[1], points[2], points[3]); // first and second\n        parse(pts, cache, 4);\n    }\n\n    function parse(pts, cache, l) {\n        for (var i = 2, t; i < l; i += 2) {\n            const pt1 = pts[i];\n            const pt2 = pts[i + 1];\n            const pt3 = pts[i + 2];\n            const pt4 = pts[i + 3];\n\n            const t1x = (pt3 - pts[i - 2]) * tension;\n            const t1y = (pt4 - pts[i - 1]) * tension;\n            const t2x = (pts[i + 4] - pt1) * tension;\n            const t2y = (pts[i + 5] - pt2) * tension;\n\n            for (t = 0; t < numOfSeg; t++) {\n                const c = t << 2; // t * 4;\n                const c1 = cache[c];\n                const c2 = cache[c + 1];\n                const c3 = cache[c + 2];\n                const c4 = cache[c + 3];\n\n                res[rPos++] = c1 * pt1 + c2 * pt3 + c3 * t1x + c4 * t2x;\n                res[rPos++] = c1 * pt2 + c2 * pt4 + c3 * t1y + c4 * t2y;\n            }\n        }\n    }\n\n    // add last point\n    l = close ? 0 : points.length - 2;\n    res[rPos++] = points[l];\n    res[rPos] = points[l + 1];\n\n    return res;\n};\n","import { Vector } from './Vector';\nimport { pointDistance } from './math';\nimport { getCurvePoints } from '../community/curve-calc';\nimport { last } from '../utils';\n\n// https://stackoverflow.com/questions/41144224/calculate-curvature-for-3-points-x-y\n// possible alternate https://www.mathsisfun.com/geometry/herons-formula.html\nexport const triangleArea2 = (a, b, c) => (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x);\n\n// Menger curvature of a triple of points in n-dimensional Euclidean space Rn is the reciprocal of\n// the radius of the circle that passes through the three points\nexport const mCurvature = (p1, p2, p3) => {\n    const t4 = 2 * triangleArea2(p1, p2, p3);\n    const la = pointDistance(p1, p2);\n    const lb = pointDistance(p2, p3);\n    const lc = pointDistance(p3, p1);\n    return t4 / (la * lb * lc);\n};\n\nexport const lineSlope = (a, b) => (b.y - a.y) / (b.x - a.x);\n\n// https://stackoverflow.com/questions/9043805/test-if-two-lines-intersect-javascript-function\n// returns true iff the line from (a,b)->(c,d) intersects with (p,q)->(r,s)\nexport const linesIntersect = (a, b, c, d, p, q, r, s) => {\n    const det = (c - a) * (s - q) - (r - p) * (d - b);\n    if (det === 0) {\n        return false;\n    }\n    const lambda = ((s - q) * (r - a) + (p - r) * (s - b)) / det;\n    const gamma = ((b - d) * (r - a) + (c - a) * (s - b)) / det;\n    return lambda > 0 && lambda < 1 && gamma > 0 && gamma < 1;\n};\n\nexport const segmentsIntersect = (a, b) =>\n    linesIntersect(a.start.x, a.start.y, a.end.x, a.end.y, b.start.x, b.start.y, b.end.x, b.end.y);\n\nexport const segment = (x1, y1, x2, y2) => {\n    const start = new Vector(x1, y1);\n    const end = new Vector(x2, y2);\n    return { start, end };\n};\n\nexport const connectSegments = (segs) =>\n    segs.map((s, i) => {\n        if (i === segs.length - 1) {\n            return s;\n        }\n        const next = segs[i + 1];\n\n        const distance = pointDistance({ x: s.end.x, y: s.end.y }, { x: next.start.x, y: s.start.y });\n        if (distance > 1) {\n            s.end = new Vector(next.start.x, next.start.y);\n        }\n        return s;\n    });\n\nexport const trimSegments = (segs, skip = 2) =>\n    segs.reduce((acc, s, i) => {\n        if (i === 0 || i === segs.length - 1) {\n            acc.push(s);\n        } else if (i % skip === 0) {\n            acc.push(s);\n        }\n        return acc;\n    }, []);\n\n// For array of points from segments, take only the first start\nexport const startPointsOnly = (points) => {\n    const p = [];\n    for (let i = 0; i < points.length; i += 2) {\n        p.push(points[i]);\n    }\n    // last end point\n    p.push(last(points));\n    return p;\n};\n\n// For array of points from segments, return the mid point of the segment\nexport const getSegPointsMid = (points) => {\n    const p = [];\n    for (let i = 0; i < points.length; i += 2) {\n        const s = points[i];\n        const e = points[i + 1];\n        if (e) {\n            const midX = s[0] + (e[0] - s[0]) * 0.5;\n            const midY = s[1] + (e[1] - s[1]) * 0.5;\n            p.push([midX, midY]);\n        } else {\n            p.push(s);\n        }\n    }\n    // last end point\n    p.push(last(points));\n    return p;\n};\n\nexport const trimPoints = (points, skip = 2) =>\n    points.reduce((acc, s, i) => {\n        if (i === 0 || i === points.length - 1) {\n            acc.push(s);\n        } else if (i % skip === 0) {\n            acc.push(s);\n        }\n        return acc;\n    }, []);\n\nexport const pointsOrientation = (a, b) => Math.atan2(b.y - a.y, b.x - a.x);\nexport const segmentOrientation = ({ start, end }) => pointsOrientation(start, end);\n\nexport const segmentFromPoints = (points) => {\n    const seg = [];\n    for (let i = 0; i < points.length; i += 2) {\n        // if it's an uneven number, dupe the last point\n        const next = i + 1 === points.length ? i : i + 1;\n        seg.push(segment(points[i][0], points[i][1], points[next][0], points[next][1]));\n    }\n    return seg;\n};\n\nexport const pointsFromSegment = (seg) => {\n    const points = [];\n    for (let i = 0; i < seg.length; i++) {\n        points.push([seg[i].start.x, seg[i].start.y]);\n        points.push([seg[i].end.x, seg[i].end.y]);\n    }\n    return points;\n};\n\n// [x,y] => {x:x,y:y}\nexport const a2p = (a) => ({ x: a[0], y: a[1] });\n// [x,y] => Vector{x:x,y:y}\nexport const a2V = (a) => new Vector(a[0], a[1]);\nexport const v2a = (v) => [v.x, v.y];\n// [[x,y]] => [{x:x,y:y}]\nexport const a2pA = (arry) => arry.map((a) => a2p(a));\n// [[x,y]] => [Vector{x:x,y:y}]\nexport const pa2VA = (arry) => arry.map((a) => a2V(a));\nexport const va2pA = (arry) => arry.map((a) => v2a(a));\n\n// [[x,y]] => [x1, y1,  x2, y2, ... xn, yn]\nexport const flattenPointArray = (arry) =>\n    arry.reduce((acc, p) => {\n        if (p) {\n            acc.push(p[0]);\n            acc.push(p[1]);\n        }\n\n        return acc;\n    }, []);\n\n// [x1, y1,  x2, y2, ... xn, yn] => [[x,y]]\nexport const unflattenPointArray = (arry) => {\n    const points = [];\n    for (let i = 0; i < arry.length; i += 2) {\n        points.push([arry[i], arry[i + 1]]);\n    }\n    return points;\n};\n\n// Using https://github.com/gdenisov/cardinal-spline-js\nexport const createSplinePoints = (points) => {\n    const fpoints = flattenPointArray(points);\n    const curve = getCurvePoints(fpoints);\n    return unflattenPointArray(curve);\n};\n\n// https://www.xarg.org/2010/02/reduce-the-length-of-a-line-segment-by-a-certain-amount/\nexport const reduceLineFromStart = (p1, p2, r) => {\n    const dx = p2.x - p1.x;\n    const dy = p2.y - p1.y;\n    const mag = Math.sqrt(dx * dx + dy * dy);\n    return {\n        x: p1.x + (r * dx) / mag,\n        y: p1.y + (r * dy) / mag,\n    };\n};\n\nexport const reduceLineFromEnd = (p1, p2, r) => {\n    const dx = p2.x - p1.x;\n    const dy = p2.y - p1.y;\n    const mag = Math.sqrt(dx * dx + dy * dy);\n    return {\n        x: p2.x - (r * dx) / mag,\n        y: p2.y - (r * dy) / mag,\n    };\n};\n\nexport const reduceLineEqually = (p1, p2, r) => {\n    const r2 = r / 2;\n    const dx = p2.x - p1.x;\n    const dy = p2.y - p1.y;\n    const mag = Math.sqrt(dx * dx + dy * dy);\n    return [\n        {\n            x: p1.x + (r2 * dx) / mag,\n            y: p1.y + (r2 * dy) / mag,\n        },\n        {\n            x: p2.x - (r2 * dx) / mag,\n            y: p2.y - (r2 * dy) / mag,\n        },\n    ];\n};\n// line intercept math by Paul Bourke http://paulbourke.net/geometry/pointlineplane/\n// Determine the intersection point of two line segments\n// Return FALSE if the lines don't intersect\nexport const intersect = (x1, y1, x2, y2, x3, y3, x4, y4) => {\n    // Check if none of the lines are of length 0\n    if ((x1 === x2 && y1 === y2) || (x3 === x4 && y3 === y4)) {\n        return false;\n    }\n\n    const denominator = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n\n    // Lines are parallel\n    if (denominator === 0) {\n        return false;\n    }\n\n    const ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator;\n    const ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denominator;\n\n    // is the intersection along the segments\n    if (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n        return false;\n    }\n\n    // Return a object with the x and y coordinates of the intersection\n    const x = x1 + ua * (x2 - x1);\n    const y = y1 + ua * (y2 - y1);\n\n    return { x, y };\n};\n","import { linesIntersect, mCurvature, pa2VA, trimPoints, va2pA } from '../math/lineSegments';\nimport { defaultValue, getArrayValuesFromEnd, getArrayValuesFromStart } from '../utils';\nimport { chaikin, degreesToRadians, lerp, mapRange, percentage, pointDistance, uvFromAngle } from '../math/math';\nimport { Vector } from '../math/Vector';\n\n/*\nBased on Meander by Robert Hodgin\nhttp://roberthodgin.com/project/meander\n\nAnd Eric's recreations\nhttps://www.reddit.com/r/generative/comments/lfsl8t/pop_art_meandering_river/\n */\n\n/*\nThe settings for the effect are very particular.  Too many points tends to result in \"mushrooming\" of the flow and\non the extreme, oxbows everywhere. But this can be very interesting! Too too few will cause the flow to flatten.\n\n    - Curve measure larger will create larger bubbles\n    - Curve size, even larger bubbles\n    - Seg curve multiplier should be <1\n    - If point remove prox is too low line will create mushrooms. Should be curve size or a few decimal points under\n    - If insertion factor is > 1, then the line will just be straight\n    - Mix mag should be incr in small sizes\n*/\n\n/*\nSettings for a nice medium high turbulence river\n\n// Convenience settings object\nconst cs = {\n    mixTangentRatio: 0.45,\n    mixMagnitude: 1.75,\n    curvemeasure: 4,\n    curvesize: 5,\n    pointremove: 5,\n    oxbowProx: 2.5,\n};\n\nconst mediumRiver = new MeanderingRiver(points, {\n    maxHistory,\n    storeHistoryEvery: historyStep,\n    fixedEndPoints: 3,\n    influenceLimit: 0,\n\n    mixTangentRatio: cs.mixTangentRatio,\n    mixMagnitude: cs.mixMagnitude,\n    oxbowProx: cs.oxbowProx,\n    oxbowPointIndexProx: cs.curvemeasure,\n    measureCurveAdjacent: cs.curvemeasure,\n    curveSize: cs.curvesize,\n    pointRemoveProx: cs.pointremove,\n\n    pushFlowVectorFn: flowRightToMiddle(0.5, canvasMidY),\n\n    noiseFn: noise,\n    noiseMode: 'mix',\n    noiseStrengthAffect: 0,\n    mixNoiseRatio: 0.3,\n});\n\n// history\n// rivers.forEach((r, i) => {\n//     for (let h = r.history.length - 1; h >= 0; h--) {\n//         // const a = mapRange(0, maxHistory, 0.35, 0.1, h);\n//         const b = mapRange(0, maxHistory, 5, 20, h);\n//         const hcolor = tinycolor.mix(riverColor, backgroundColor, mapRange(0, maxHistory, 0, 100, h)).darken(b);\n//         // const hcolor = riverColor.clone().darken(b);\n//         const hpoints = r.history[h].channel; // smoothPoints(r.history[h].channel, 8, 3);\n//         drawConnectedPoints(ctx)(hpoints, hcolor, riverWeight[i] * 2);\n//     }\n// });\n\n */\n\nexport class MeanderingRiver {\n    constructor(initPoints, props) {\n        this.startingPoints = initPoints;\n        this.pointVectors = pa2VA(initPoints);\n        this.oxbows = [];\n\n        // Toggle oxbow checking\n        this.handleOxbows = defaultValue(props, 'handleOxbows', true);\n\n        // Wrap around end points circles/closed shapes\n        this.wrapEnd = defaultValue(props, 'wrapEnd', false);\n\n        // %age of line length to fix at each end. Must be >= 1\n        // Setting to 1 will be fixing the first 1 point only, not percentage\n        this.fixedEndPoints = defaultValue(props, 'fixedEndPoints', 1);\n        // how many adjacent points to use to measure the average curvature\n        this.measureCurveAdjacent = defaultValue(props, 'measureCurveAdjacent', 30);\n        // Ineffective multiply the measured curvature vector magnitude to enhance effect\n        this.segCurveMultiplier = defaultValue(props, 'segCurveMultiplier', 1);\n\n        // How much to blend tangent and bitangent, 0 = tangent, 1 = bitangent\n        this.mixTangentRatio = defaultValue(props, 'mixTangentRatio', 0.5);\n        // Magnitude of the mixed vector, increase the effect, < slower\n        this.mixMagnitude = defaultValue(props, 'mixMagnitude', 0);\n        // Limit the influence vector,  less than 1, slower. > 1 no affect\n        this.influenceLimit = defaultValue(props, 'influenceLimit', 0.25);\n\n        // Additional vector to push the flow in a direction\n        this.pushFlowVectorFn = defaultValue(props, 'pushFlowVectorFn', undefined);\n\n        // Add new points if the distance between is larger\n        this.curveSize = defaultValue(props, 'curveSize', 2);\n        // Multiplier for the amount of new points to add\n        this.insertionFactor = defaultValue(props, 'insertionFactor', 1);\n        // Remove points closer than this\n        this.pointRemoveProx = defaultValue(props, 'pointRemoveProx', this.curveSize * 0.8);\n\n        // Point proximity to create a new oxbow and ...\n        this.oxbowProx = defaultValue(props, 'oxbowProx', this.curveSize);\n        // If points are not this close than create oxbow\n        this.oxbowPointIndexProx = Math.ceil(this.measureCurveAdjacent * 1.5);\n\n        // this.oxbowShrinkRate = defaultValue(props, 'oxbowShrinkRate', 25);\n\n        // Additional flow influence. mix, only, scaleMag\n        this.noiseMode = defaultValue(props, 'noiseMode', 'mix'); // mix or only (mix and exclude less than strength)\n        // Passed x,y returns a small -/+ value\n        this.noiseFn = defaultValue(props, 'noiseFn', undefined);\n        // Values returned from noise fn less than this will be ignored\n        this.noiseStrengthAffect = defaultValue(props, 'noiseStrengthAffect', 3); // only noise theta > will cause drift\n        // Ratio to mix in noise with the calculated influence vector. Best kept less than .3\n        this.mixNoiseRatio = defaultValue(props, 'mixNoiseRatio', 0.1);\n\n        // Store history of the past flows\n        this.steps = 0;\n        this.maxHistory = defaultValue(props, 'maxHistory', 10);\n        this.storeHistoryEvery = defaultValue(props, 'storeHistoryEvery', 2);\n        this.history = [];\n        this.running = true;\n    }\n\n    get points() {\n        return va2pA(this.pointVectors);\n    }\n\n    addToHistory(ox, channel) {\n        if (this.steps % this.storeHistoryEvery === 0) {\n            this.history.unshift({ oxbows: ox, channel });\n            if (this.history.length > this.maxHistory) {\n                this.history = this.history.slice(0, this.maxHistory);\n            }\n        }\n    }\n\n    // Average Menger curvature of the segments\n    averageMCurvature(points) {\n        const sum = points.reduce((diffs, point, i) => {\n            const prev = i - 1;\n            const next = i + 1;\n            if (prev >= 0 && next < points.length) {\n                diffs += mCurvature(points[prev], point, points[next]);\n            }\n            return diffs;\n        }, 0);\n        return degreesToRadians(sum / points.length);\n    }\n\n    // get x# of points on either side of the given point\n    getPointsToMeasure(i, points) {\n        const len = this.measureCurveAdjacent;\n        let min = 0;\n        let max = points.length;\n        // if (this.wrapEnd) {\n        //     // Circular - resulting in poor curve values\n        //     const start = getArrayValuesFromStart(points, i, len);\n        //     const end = getArrayValuesFromEnd(points, i, len);\n        //     return start.concat(end);\n        // }\n        min = i < len ? 0 : i - len;\n        max = i > points.length - len ? points.length : i + len;\n        return points.slice(min, max);\n    }\n\n    // The main part of the effect - most important parts\n    // 1. The curvature of a portion of the points is measured and averaged\n    // 2. The angle/tangent of the current and next points is measured\n    // 3. A perpendicular bitangent is calculated and it's magnitude set to the curvature\n    // 4. A mix vector is created from a blend of the tangent and bitangent\n    curvatureInfluence(point, i, allPoints) {\n        const curvature = this.averageMCurvature(this.getPointsToMeasure(i, allPoints)) * this.segCurveMultiplier;\n        const curveDirection = curvature < 0 ? 1 : -1;\n\n        let nextPoint = allPoints[i + 1];\n\n        if (!nextPoint && this.wrapEnd) {\n            // If wrapped, the next point at the end is the start\n            nextPoint = allPoints[0];\n        }\n\n        const tangent = nextPoint.sub(point);\n        const biangle = tangent.angle() + 1.5708 * curveDirection;\n        const bitangent = uvFromAngle(biangle).setMag(Math.abs(curvature));\n\n        const a = tangent.normalize();\n        const b = bitangent.normalize();\n        let mVector = a.mix(b, this.mixTangentRatio);\n\n        // Noise to add interesting extra flows\n        if (this.noiseFn) {\n            const t = this.noiseFn(point.x, point.y);\n\n            if (this.noiseMode === 'mix' && Math.abs(t) > this.noiseStrengthAffect) {\n                // Mix the strength of the noise\n                const n = uvFromAngle(t);\n                mVector = mVector.mix(n, this.mixNoiseRatio);\n            } else if (this.noiseMode === 'flowInTo') {\n                // \"Flow\" into lower areas, zero out high areas\n                if (t < 0) {\n                    const n = uvFromAngle(t);\n                    mVector = mVector.mix(n, this.mixNoiseRatio);\n                } else {\n                    mVector = new Vector(0, 0);\n                }\n            } else if (this.noiseMode === 'scaleMag') {\n                const nscale = mapRange(0, this.noiseStrengthAffect, 5, 1, 3, Math.abs(t));\n                mVector = mVector.setMag(nscale);\n            }\n        }\n\n        // Increase the strength\n        if (this.mixMagnitude) {\n            mVector = mVector.setMag(this.mixMagnitude);\n        }\n\n        // Limit the length\n        if (this.influenceLimit > 0) {\n            mVector = mVector.limit(this.influenceLimit);\n        }\n\n        return mVector;\n    }\n\n    // Move the points\n    meanderLinear(points) {\n        // Slice the array in to points to affect (mid) and to not (start and end)\n        const pct = this.fixedEndPoints === 1 ? 1 : Math.max(percentage(points.length, this.fixedEndPoints), 1);\n        const fixedPointsPct = pct;\n\n        const startIndex = fixedPointsPct;\n        const startIndexPoints = points.slice(0, startIndex);\n        const endIndex = points.length - fixedPointsPct;\n        const endIndexPoints = points.slice(endIndex, points.length);\n\n        const middlePoints = points.slice(startIndex, endIndex);\n        const influencedPoints = middlePoints.map((point, i) => {\n            const mixVector = this.curvatureInfluence(point, i + startIndex, points);\n            let infPoint = point.add(mixVector);\n            // Additional motion to the point vectors to push around the screen, sim flows in directions, keep towards\n            // the center of the screen, etc.\n            if (this.pushFlowVectorFn) {\n                const pushVector = this.pushFlowVectorFn(point, mixVector);\n                infPoint = infPoint.add(pushVector);\n            }\n            return infPoint;\n        });\n\n        return startIndexPoints.concat(influencedPoints).concat(endIndexPoints);\n    }\n\n    meanderWrapped(points) {\n        let influencedPoints = [];\n\n        if (points.length > 3) {\n            influencedPoints = points.map((point, i) => {\n                const mixVector = this.curvatureInfluence(point, i, points);\n                let infPoint = point.add(mixVector);\n                // Additional motion to the point vectors to push around the screen, sim flows in directions, keep towards\n                // the center of the screen, etc.\n                if (this.pushFlowVectorFn) {\n                    const pushVector = this.pushFlowVectorFn(point, mixVector);\n                    infPoint = infPoint.add(pushVector);\n                }\n                return infPoint;\n            });\n        } else {\n            // Lines crossed and there were cut off/oxbowed\n            this.running = false;\n            console.log('Meander crossed, stopping');\n        }\n\n        return influencedPoints;\n    }\n\n    canRemovePoint(i, points) {\n        if (this.wrapEnd) {\n            // TODO Should be able to remove the first and last?\n        }\n        const fixed = this.fixedEndPoints || 1;\n        return i > fixed && i < points.length - fixed;\n    }\n\n    // If points are too far apart, add extra points to allow for expansion\n    // If they're too close, remove them to remove uneccessary information\n    // Too many points too close together will trash performance and cause many many oxbows to form w/ short segments\n    adjustPointsSpacing(points) {\n        return points.reduce((acc, point, i) => {\n            if (i === 0 || (i === points.length - 1 && !this.wrapEnd)) {\n                acc.push(point);\n                return acc;\n            }\n\n            let next = points[i + 1];\n\n            if (this.wrapEnd && !next) next = points[0];\n\n            const distance = pointDistance(point, next);\n\n            if (distance > this.curveSize) {\n                // Add points\n                const numInsertPoints = Math.round((distance / this.curveSize) * this.insertionFactor) + 1;\n                for (let k = 0; k < numInsertPoints; k++) {\n                    const ratio = (1 / numInsertPoints) * k;\n                    const nx = lerp(point.x, next.x, ratio);\n                    const ny = lerp(point.y, next.y, ratio);\n                    acc.push(new Vector(nx, ny));\n                }\n            } else if (this.canRemovePoint(i, points) && distance < this.pointRemoveProx) {\n                // Remove points\n            } else {\n                acc.push(point);\n            }\n            return acc;\n        }, []);\n    }\n\n    checkForOxbows(points) {\n        const newPoints = [];\n        for (let i = 0; i < points.length; i++) {\n            const point = points[i];\n            newPoints.push(point);\n            for (let j = i; j < points.length; j++) {\n                // exclude first and last if it's wrapping\n                if ((this.wrapEnd && i === 0) || j === 0 || i === points.length - 1 || j === points.length - 1)\n                    continue;\n\n                const next = points[j];\n                const dist = pointDistance(point, next);\n\n                // Check the proximity of the points on the screen and their proximity in the points array\n                if (dist < this.oxbowProx && Math.abs(i - j) > this.oxbowPointIndexProx) {\n                    newPoints.push(next);\n                    let oxpoints = va2pA(points.slice(i, j));\n                    oxpoints = chaikin(trimPoints(oxpoints, 3), 3);\n                    this.oxbows.push({ points: oxpoints, startLength: oxpoints.length });\n                    // Skip i ahead to j since these points were removed\n                    i = j;\n                }\n            }\n        }\n        return newPoints;\n    }\n\n    // Shrink the oxbows so the \"evaporate\"\n    // TODO - shrink distance between points not just cut off of the end\n    shrinkOxbows(oxbowArr) {\n        return oxbowArr.reduce((oxacc, oxbow) => {\n            const oxpoints = oxbow.points;\n            if (oxpoints.length > 1) {\n                const shrinkPct = 1; // Math.ceil(this.oxbowShrinkRate / oxpoints.length);\n                oxbow.points = oxpoints.reduce((ptacc, point, i) => {\n                    // Check check each channel segment for intersection with an oxbow segment\n                    // If it intersects, remove it\n                    const intersect = this.pointVectors.reduce((acc, cp, k) => {\n                        if (!acc) {\n                            const np = this.pointVectors[k + 1];\n                            const nop = oxpoints[i + 1];\n                            if (np && nop) {\n                                acc = linesIntersect(cp.x, cp.y, np.x, np.y, point[0], point[1], nop[0], nop[1]);\n                            }\n                        }\n                        return acc;\n                    }, false);\n\n                    if (!intersect) {\n                        // remove the first and last point\n                        if (i > shrinkPct && i < oxbow.points.length - shrinkPct) {\n                            ptacc.push(point);\n                        }\n                    }\n\n                    return ptacc;\n                }, []);\n                oxacc.push(oxbow);\n            }\n            return oxacc;\n        }, []);\n    }\n\n    // Execute one step\n    step() {\n        // Running stops if the line crosses it self at the ends and the whole segment is cut ad becomes an oxbow\n        if (this.running) {\n            // influence segments to sim flow and process points\n            let newPoints = this.wrapEnd\n                ? this.meanderWrapped(this.pointVectors)\n                : this.meanderLinear(this.pointVectors);\n            newPoints = this.adjustPointsSpacing(newPoints);\n            if (this.handleOxbows) newPoints = this.checkForOxbows(newPoints);\n\n            this.pointVectors = newPoints;\n\n            if (this.handleOxbows) this.oxbows = this.shrinkOxbows(this.oxbows);\n\n            // Record history\n            this.addToHistory(this.oxbows, va2pA(this.pointVectors));\n            this.steps++;\n        } else if (this.handleOxbows) this.oxbows = this.shrinkOxbows(this.oxbows);\n    }\n}\n\n// Push the flow right\nexport const flowRight = (p, m) => new Vector(1, 0);\n\n// Push right and towards the middle\nexport const flowRightToMiddle = (f, mid) => (p, m) => {\n    const dist = Math.abs(mid - p.y);\n    let y = mapRange(0, mid / 2, 0, f, dist);\n    if (p.y > mid) {\n        y *= -1;\n    }\n    return new Vector(1, y);\n};\n","import tinycolor from 'tinycolor2';\nimport { randomNormalWholeBetween, chaikin, mapRange } from '../lib/math/math';\nimport { background } from '../lib/canvas/canvas';\nimport { ratio, scale } from '../lib/Sketch';\nimport { bicPenBlue, warmWhite } from '../lib/color/palettes';\nimport { MeanderingRiver, flowRightToMiddle } from '../lib/systems/MeanderingRiver';\nimport { createSplinePoints, trimPoints } from '../lib/math/lineSegments';\nimport { simplexNoise2d, simplexNoise3d, cliffordAttractor, jongAttractor } from '../lib/math/attractors';\nimport { drawConnectedPoints, variableCircleAtPoint } from '../lib/canvas/canvas-linespoints';\nimport { createCirclePoints } from '../lib/math/grids';\nimport { renderField } from '../lib/canvas/rendernoise';\n\n/*\nMeandering River class at ../lib/MeanderingRiver\n */\n\nconst createHorizontalPath = ({ width, height }, startX, startY, steps = 20) => {\n    const coords = [];\n    const incr = Math.round(width / steps);\n    const midx = width / 2;\n    for (let i = startX; i < width; i += incr) {\n        // greater variation in the middle\n        const midDist = Math.round(midx - Math.abs(i - midx));\n        const y = randomNormalWholeBetween(startY - midDist, startY + midDist);\n\n        coords.push([i, y]);\n    }\n    coords.push([width, startY]);\n    return coords;\n};\n\nconst createVerticalPath = ({ width, height }, startX, startY, steps = 20) => {\n    const coords = [];\n    const incr = Math.round(height / steps);\n    const midy = height / 2;\n    for (let i = startY; i < height; i += incr) {\n        // greater variation in the middle\n        const midDist = Math.round(midy - Math.abs(i - midy));\n        const x = randomNormalWholeBetween(startX - midDist, startX + midDist);\n\n        coords.push([x, i]);\n    }\n    coords.push([startX, height]);\n    return coords;\n};\n\nexport const meanderingRiver02 = () => {\n    const config = {\n        name: 'meandering-river-02',\n        ratio: ratio.square,\n        scale: scale.standard,\n    };\n\n    let ctx;\n    let canvasMidX;\n    let canvasMidY;\n    const rivers = [];\n    let time = 0;\n\n    // colors sampled from http://roberthodgin.com/project/meander\n    // const agedWarmWhite = tinycolor('hsl(42, 43%, 76%)');\n    // const tintingColor = tinycolor('hsl(38, 38%, 64%)');\n    // const palette = [\n    //     tinycolor('hsl(97, 9%, 73%)'),\n    //     tinycolor('hsl(51, 7%, 38%)'),\n    //     tinycolor('hsl(19, 39%, 47%)'),\n    //     tinycolor('hsl(166, 39%, 59%)'),\n    // ];\n\n    const backgroundColor = warmWhite;\n\n    // const simplex2d = (x, y) => simplexNoise2d(x, y, 0.002);\n    // const simplex3d = (x, y) => simplexNoise3d(x, y, time, 0.0005);\n    // const clifford = (x, y) => cliffordAttractor(canvas.width, canvas.height, x, y);\n    // const jong = (x, y) => jongAttractor(canvas.width, canvas.height, x, y);\n\n    const noise = (x, y) => simplexNoise2d(x, y, 0.002);\n    const maxHistory = 10;\n    const historyStep = 25;\n\n    const wrapped = false;\n\n    const setup = ({ canvas, context }) => {\n        ctx = context;\n        canvasMidX = canvas.width / 2;\n        canvasMidY = canvas.height / 2;\n        background(canvas, context)(backgroundColor);\n        const horizontal = createSplinePoints(createHorizontalPath(canvas, 0, canvasMidY, 40));\n        const vertical = createSplinePoints(createVerticalPath(canvas, canvasMidX, 0, 40));\n        const circle = createCirclePoints(canvasMidX, canvasMidY, canvasMidX / 2, Math.PI * 4, true);\n\n        const cs = {\n            mixTangentRatio: 0.45,\n            mixMagnitude: 1.25, // 1.75\n            curvemeasure: 4,\n            curvesize: 5,\n            pointremove: 5,\n            oxbowProx: 2.5,\n        };\n\n        const r0 = new MeanderingRiver(circle, {\n            maxHistory,\n            storeHistoryEvery: historyStep,\n            fixedEndPoints: 1,\n            influenceLimit: 0,\n            wrapEnd: true,\n            handleOxbows: true,\n\n            mixTangentRatio: cs.mixTangentRatio,\n            mixMagnitude: cs.mixMagnitude,\n            oxbowProx: cs.oxbowProx,\n            oxbowPointIndexProx: cs.curvemeasure,\n            measureCurveAdjacent: cs.curvemeasure,\n            curveSize: cs.curvesize,\n            pointRemoveProx: cs.pointremove,\n\n            // pushFlowVectorFn: flowRightToMiddle(0.5, canvasMidY),\n\n            noiseFn: noise,\n            noiseMode: 'mix',\n            noiseStrengthAffect: 0,\n            mixNoiseRatio: 0.3,\n        });\n\n        const r1 = new MeanderingRiver(vertical, {\n            maxHistory,\n            storeHistoryEvery: historyStep,\n            fixedEndPoints: 1,\n            influenceLimit: 0,\n            wrapEnd: wrapped,\n            handleOxbows: true,\n\n            mixTangentRatio: cs.mixTangentRatio,\n            mixMagnitude: cs.mixMagnitude,\n            oxbowProx: cs.oxbowProx,\n            oxbowPointIndexProx: cs.curvemeasure,\n            measureCurveAdjacent: cs.curvemeasure,\n            curveSize: cs.curvesize,\n            pointRemoveProx: cs.pointremove,\n\n            // pushFlowVectorFn: flowRightToMiddle(0.5, canvasMidY),\n\n            noiseFn: noise,\n            noiseMode: 'mix',\n            noiseStrengthAffect: 0,\n            mixNoiseRatio: 0.3,\n        });\n\n        const r2 = new MeanderingRiver(horizontal, {\n            maxHistory,\n            storeHistoryEvery: historyStep,\n            fixedEndPoints: 1,\n            influenceLimit: 0,\n            wrapEnd: wrapped,\n            handleOxbows: true,\n\n            mixTangentRatio: cs.mixTangentRatio,\n            mixMagnitude: cs.mixMagnitude,\n            oxbowProx: cs.oxbowProx,\n            oxbowPointIndexProx: cs.curvemeasure,\n            measureCurveAdjacent: cs.curvemeasure,\n            curveSize: cs.curvesize,\n            pointRemoveProx: cs.pointremove,\n\n            // pushFlowVectorFn: flowRightToMiddle(0.5, canvasMidY),\n\n            noiseFn: noise,\n            noiseMode: 'mix',\n            noiseStrengthAffect: 0,\n            mixNoiseRatio: 0.3,\n        });\n\n        rivers.push(r0, r2);\n    };\n\n    const draw = ({ canvas, context }) => {\n        // background(canvas, context)(backgroundColor.clone().setAlpha(0.005));\n        // renderField(canvas, context, noise, 'rgba(0,0,0,.5)', 30, 15);\n\n        // https://colorhunt.co/palette/264684\n        const riverColor = [bicPenBlue, tinycolor('#fed049')];\n        const closed = [true, false];\n\n        // step\n        rivers.forEach((r) => {\n            r.step();\n        });\n\n        // main\n        rivers.forEach((r, i) => {\n            const c = riverColor[i].clone().setAlpha(0.15); // tinycolor(`hsl(${time},70,50)`);\n\n            // r.oxbows.forEach((o) => {\n            //     // const w = Math.abs(mapRange(0, o.startLength, riverWeight[i] / 2, riverWeight[i], o.points.length));\n            //     drawConnectedPoints(ctx)(o.points, c, 1);\n            // });\n\n            const points = chaikin(r.points, 8);\n            if (points.length) drawConnectedPoints(ctx)(points, c, 2, closed[i]);\n        });\n\n        // if (++time > 1000) {\n        // return -1;\n        // }\n\n        time += 0.25;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import tinycolor from 'tinycolor2';\nimport { randomNormalWholeBetween, chaikin, mapRange } from '../lib/math/math';\nimport { background } from '../lib/canvas/canvas';\nimport { ratio, scale } from '../lib/Sketch';\nimport { bicPenBlue, warmWhite } from '../lib/color/palettes';\nimport { MeanderingRiver, flowRightToMiddle } from '../lib/systems/MeanderingRiver';\nimport { createSplinePoints, trimPoints } from '../lib/math/lineSegments';\nimport { simplexNoise2d } from '../lib/math/attractors';\nimport { drawConnectedPoints, drawPoints, variableCircleAtPoint } from '../lib/canvas/canvas-linespoints';\nimport { createCirclePoints } from '../lib/math/grids';\nimport { renderField, renderFieldColor, renderFieldContour } from '../lib/canvas/rendernoise';\n\n/*\nMeandering River class at ../lib/MeanderingRiver\n */\n\nconst createHorizontalPath = ({ width, height }, startX, startY, steps = 20) => {\n    const coords = [];\n    const incr = Math.round(width / steps);\n    const midx = width / 2;\n    for (let i = startX; i < width; i += incr) {\n        // greater variation in the middle\n        const midDist = Math.round(midx - Math.abs(i - midx));\n        const y = randomNormalWholeBetween(startY - midDist, startY + midDist);\n\n        coords.push([i, y]);\n    }\n    coords.push([width, startY]);\n    return coords;\n};\n\nexport const meanderingRiver01 = () => {\n    const config = {\n        name: 'meandering-river-01',\n        ratio: ratio.poster,\n        scale: scale.standard,\n        // drawLimit: 100,\n    };\n\n    let ctx;\n    let canvasMidX;\n    let canvasMidY;\n    const rivers = [];\n    let time = 0;\n\n    const backgroundColor = warmWhite;\n\n    const riverColor = warmWhite.clone().brighten(20);\n    const riverWeight = [15, 10];\n    const oxbowColor = riverColor.clone();\n    const outlineColor = bicPenBlue.setAlpha(0.25);\n\n    const tintingColor = tinycolor('hsl(38, 38%, 64%)');\n    const palette = [\n        tinycolor('hsl(97, 9%, 73%)'),\n        tinycolor('hsl(51, 7%, 38%)'),\n        tinycolor('hsl(19, 39%, 47%)'),\n        tinycolor('hsl(166, 39%, 59%)'),\n        tinycolor.mix('hsl(97, 9%, 73%)', tintingColor, 25),\n        tinycolor.mix('hsl(51, 7%, 38%)', tintingColor, 25),\n        tinycolor.mix('hsl(19, 39%, 47%)', tintingColor, 25),\n        tinycolor.mix('hsl(166, 39%, 59%)', tintingColor, 25),\n        tinycolor.mix('hsl(97, 9%, 73%)', tintingColor, 55),\n        tinycolor.mix('hsl(51, 7%, 38%)', tintingColor, 55),\n        tinycolor.mix('hsl(19, 39%, 47%)', tintingColor, 55),\n        tinycolor.mix('hsl(166, 39%, 59%)', tintingColor, 55),\n        tinycolor.mix('hsl(97, 9%, 73%)', tintingColor, 75),\n        tinycolor.mix('hsl(51, 7%, 38%)', tintingColor, 75),\n        tinycolor.mix('hsl(19, 39%, 47%)', tintingColor, 75),\n        tinycolor.mix('hsl(166, 39%, 59%)', tintingColor, 75),\n    ].reverse();\n\n    const flatColor = backgroundColor.clone().darken(10);\n\n    const noise = (x, y) => simplexNoise2d(x, y, 0.001);\n    const maxHistory = 15;\n    const historyStep = 15;\n\n    const setup = ({ canvas, context }) => {\n        ctx = context;\n        canvasMidX = canvas.width / 2;\n        canvasMidY = canvas.height / 2;\n\n        const horizpoints = createSplinePoints(createHorizontalPath(canvas, 0, canvasMidY, 15));\n        const circlepoints = createCirclePoints(canvasMidX, canvasMidY, canvasMidX / 2, Math.PI * 4, true);\n\n        const cs = {\n            mixTangentRatio: 0.6,\n            mixMagnitude: 1.25,\n            curvemeasure: 4,\n            curvesize: 3,\n            pointremove: 4,\n            oxbowProx: 3,\n        };\n\n        const horizontal = new MeanderingRiver(horizpoints, {\n            maxHistory,\n            storeHistoryEvery: historyStep,\n            fixedEndPoints: 2,\n            influenceLimit: 0,\n\n            mixTangentRatio: 0.6,\n            mixMagnitude: 1.5,\n            oxbowProx: 3,\n            oxbowPointIndexProx: 4,\n            measureCurveAdjacent: 6,\n            curveSize: 4,\n            pointRemoveProx: 4,\n\n            pushFlowVectorFn: flowRightToMiddle(0.5, canvasMidY),\n\n            noiseFn: noise,\n            noiseMode: 'flowInTo',\n            noiseStrengthAffect: 3,\n            mixNoiseRatio: 0.3,\n        });\n\n        const circular = new MeanderingRiver(circlepoints, {\n            maxHistory,\n            storeHistoryEvery: historyStep,\n            fixedEndPoints: 1,\n            influenceLimit: 0,\n            wrapEnd: true,\n\n            mixTangentRatio: 0.45,\n            mixMagnitude: 1,\n            oxbowProx: 2,\n            oxbowPointIndexProx: 2,\n            measureCurveAdjacent: 10,\n            curveSize: 5,\n            pointRemoveProx: 3,\n\n            // pushFlowVectorFn: flowRightToMiddle(0.5, canvasMidY),\n\n            noiseFn: noise,\n            noiseMode: 'flowInTo',\n            noiseStrengthAffect: 0,\n            mixNoiseRatio: 0.4,\n        });\n\n        rivers.push(horizontal);\n        // rivers.push(circular);\n\n        // Run some steps before render to smooth lines\n        for (let i = 0; i < 30; i++) {\n            rivers.forEach((r) => {\n                r.step();\n            });\n        }\n\n        background(canvas, context)(backgroundColor);\n        renderFieldColor(canvas, context, noise, 100, flatColor, backgroundColor, 4);\n        renderFieldContour(\n            canvas,\n            context,\n            noise,\n            -8,\n            8,\n            15,\n            flatColor.clone().darken(5),\n            backgroundColor.clone().brighten(1)\n        );\n    };\n\n    const draw = ({ canvas, context }) => {\n        // step\n        rivers.forEach((r) => {\n            r.step();\n        });\n\n        const oColor = palette[Math.round(time * 0.01) % palette.length]; // .clone().setAlpha(0.75);\n        const oSize = 4;\n\n        // outline\n        rivers.forEach((r, i) => {\n            r.oxbows.forEach((o) => {\n                const w = Math.abs(mapRange(0, o.startLength, 1, riverWeight[i] * 1.5, o.points.length));\n                drawConnectedPoints(ctx)(o.points, oColor, w + oSize / 2);\n            });\n            const points = chaikin(r.points, 5);\n            drawConnectedPoints(ctx)(points, oColor, riverWeight[i] + oSize);\n        });\n\n        // main\n        rivers.forEach((r, i) => {\n            r.oxbows.forEach((o) => {\n                const w = Math.abs(mapRange(0, o.startLength, riverWeight[i] / 2, riverWeight[i], o.points.length));\n                drawConnectedPoints(ctx)(o.points, oxbowColor, w);\n            });\n            const points = chaikin(r.points, 5);\n            drawConnectedPoints(ctx)(points, riverColor, riverWeight[i], false, false);\n            // drawPoints(ctx)(r.points, 'red', 1);\n        });\n\n        time++;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import { variation1 } from './released/variation1';\nimport { variation2 } from './released/variation2';\nimport { domokun } from './released/domokun';\nimport { variation4 } from './released/variation4';\nimport { variation5 } from './released/variation5';\nimport { variation6 } from './released/variation6';\nimport { rainbowRakeOrbit } from './released/rainbow-rake-orbit-mouse';\nimport { threeAttractors } from './released/threeAttractors';\nimport { hiImage01 } from './released/hiImage01';\nimport { windLines } from './released/windLines';\nimport { waves01 } from './released/waves01';\nimport { lissajous01 } from './released/lissajous01';\nimport { flowFieldParticles } from './released/flow-field-particles';\nimport { flowFieldArcs } from './released/flow-field-arcs';\nimport { flowFieldImage } from './released/flow-field-image';\nimport { radialNoise } from './released/radial-noise';\nimport { flowFieldRibbons } from './released/flow-field-ribbons';\nimport { flowFieldRibbons2 } from './released/flow-field-ribbons-2';\nimport { shadedBoxes } from './released/shaded-boxes';\nimport { larrycarlson02 } from './released/larrycarlson02';\nimport { meanderingRiver02 } from './released/meandering-river-02';\nimport { meanderingRiver01 } from './released/meandering-river-01';\n\nexport const variationsIndex = {\n    1: {\n        note: 'Particles are attracted to the pointer. Press to repel.',\n        sketch: variation1,\n    },\n    2: {\n        note: 'Press to increase speed.',\n        sketch: variation2,\n    },\n    3: {\n        note: 'Particles are repelled from the pointer. Press to attract.',\n        sketch: domokun,\n    },\n    4: {\n        note: 'Particles are repelled from the pointer. Press to attract.',\n        sketch: variation4,\n    },\n    5: {\n        note: 'Sit back and watch.',\n        sketch: variation5,\n    },\n    6: {\n        note: 'Move the mouse',\n        sketch: variation6,\n    },\n    7: {\n        note: 'Rakes orbit center and the mouse. Click to repel.',\n        sketch: rainbowRakeOrbit,\n    },\n    8: {\n        note: 'One attractor in the center, two on the sides.',\n        sketch: threeAttractors,\n    },\n    9: {\n        note: 'Say Hi',\n        sketch: hiImage01,\n    },\n    10: {\n        note: 'In the breeze',\n        sketch: windLines,\n    },\n    11: {\n        note: 'Inspired by Churn, Kenny Vaden https://www.reddit.com/r/generative/comments/lq8r11/churn_r_code/',\n        sketch: waves01,\n    },\n    12: {\n        note: 'Experimenting with rose shapes. Refresh for new randomized set.',\n        sketch: lissajous01,\n    },\n    13: {\n        note: 'Particles and fibers flowing with 3d simplex noise.',\n        sketch: flowFieldParticles,\n    },\n    14: {\n        note: 'Arcs flowing with 3d simplex noise.',\n        sketch: flowFieldArcs,\n    },\n    15: {\n        note: 'Rendering an image with flow fields. Photo by Francesca Zama https://unsplash.com/photos/OFjnQOf1pPA',\n        sketch: flowFieldImage,\n    },\n    16: {\n        note: 'Simplex noise going around ...',\n        sketch: radialNoise,\n    },\n    17: {\n        note: 'Ribbons attracted to an attractor',\n        sketch: flowFieldRibbons,\n    },\n    18: {\n        note: 'Ribbons attracted to an attractor',\n        sketch: flowFieldRibbons2,\n    },\n    19: {\n        note: 'Shaded boxes with flow field particles.',\n        sketch: shadedBoxes,\n    },\n    20: {\n        note: 'Render an image in the wavy art style of Larry Carlson',\n        sketch: larrycarlson02,\n    },\n    21: {\n        note: 'Based on \"Meander\" by Robert Hodgin and an implementation by Eric on Reddit',\n        sketch: meanderingRiver02,\n    },\n    22: {\n        note: 'Meandering river over landscape. Refresh for new terrain. Based on \"Meander\" by Robert Hodgin.',\n        sketch: meanderingRiver01,\n    },\n};\n","import tinycolor from 'tinycolor2';\nimport { background, drawCircleFilled, pixel } from '../lib/canvas/canvas';\nimport { ratio, scale, orientation } from '../lib/Sketch';\nimport { bicPenBlue, paperWhite } from '../lib/color/palettes';\n\nimport { simplexNoise2d } from '../lib/math/attractors';\nimport { renderFieldColor, renderFieldContour } from '../lib/canvas/rendernoise';\nimport { mapRange } from '../lib/math/math';\n\n// https://www.youtube.com/watch?v=0ZONMNUKTfU&t=2s\n\nexport const marchingSquares = () => {\n    const config = {\n        name: 'marchingSquares',\n        ratio: ratio.square,\n        scale: scale.standard,\n    };\n\n    let ctx;\n    let canvasWidth;\n    let canvasHeight;\n    let canvasCenterX;\n    let canvasCenterY;\n    let centerRadius;\n    let imageWidth;\n    let imageHeight;\n    let startX;\n    let maxX;\n    let startY;\n    let maxY;\n    const margin = 50;\n\n    const backgroundColor = paperWhite.clone();\n    const foreColor = bicPenBlue.clone();\n\n    const noise = (x, y) => simplexNoise2d(x, y, 0.004);\n\n    const setup = ({ canvas, context }) => {\n        ctx = context;\n\n        canvasWidth = canvas.width;\n        canvasHeight = canvas.height;\n        canvasCenterX = canvas.width / 2;\n        canvasCenterY = canvas.height / 2;\n        centerRadius = canvas.height / 4;\n\n        imageWidth = canvas.width - margin * 2;\n        imageHeight = canvas.height - margin * 2;\n\n        startX = margin;\n        maxX = canvas.width - margin;\n        startY = margin;\n        maxY = canvas.height - margin;\n\n        background(canvas, context)(backgroundColor);\n    };\n\n    const getTile = (num) => {};\n\n    const draw = ({ canvas, context }) => {\n        const { width, height } = canvas;\n        const resolution = 10;\n        const lowColor = backgroundColor.clone().darken(25);\n        const highColor = backgroundColor.clone().brighten(25);\n        const noiseMax = 8;\n        const xStep = Math.round(width / resolution) + 1;\n        const yStep = Math.round(height / resolution) + 1;\n\n        const field = [];\n\n        for (let x = 0; x <= width; x += xStep) {\n            for (let y = 0; y <= height; y += yStep) {\n                const theta = noise(x, y);\n                const normalized = mapRange(-5, 5, 0, 1, theta);\n                field.push({ x, y, val: normalized });\n                const fillColor = tinycolor.mix(lowColor, highColor, normalized * 100);\n                context.fillStyle = tinycolor(fillColor).toRgbString();\n                context.fillRect(x, y, x + xStep, y + yStep);\n                drawCircleFilled(context)(x, y, 3, 'red');\n            }\n        }\n\n        // console.log(field);\n\n        return -1;\n    };\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","/*\nExplorations with generative code\n*/\n\nimport normalize from 'normalize.css';\nimport { sketch } from './lib/sketch';\nimport { variationsIndex } from './variationsIndex';\nimport { meanderingRiver01 } from './released/meandering-river-01';\nimport { marchingSquares } from './experiments/marching-squares';\n\nconst experimentalVariation = undefined;\n// const experimentalVariation = marchingSquares;\nconst s = sketch();\n\nconst saveCanvasCapture = (_) => {\n    console.log('Saving capture');\n    const imageURI = s.canvas().toDataURL('image/png');\n    document.getElementById('download').setAttribute('download', `${s.variationName()}.png`);\n    document.getElementById('download').href = imageURI;\n};\n\ndocument.getElementById('download').addEventListener('click', saveCanvasCapture);\nwindow.addEventListener('keydown', (e) => {\n    if (e.key === 's') {\n        document.getElementById('download').click();\n    }\n});\n\nconst setNote = (note) => (document.getElementById('note').innerText = note);\n\nconst getQueryVariable = (variable) => {\n    const query = window.location.search.substring(1);\n    const vars = query.split('&');\n    for (let i = 0; i < vars.length; i++) {\n        const pair = vars[i].split('=');\n        if (pair[0] === variable) {\n            return pair[1];\n        }\n    }\n    return false;\n};\n\nlet variationKey = getQueryVariable('variation');\nconst variationKeys = Object.keys(variationsIndex);\nvariationKey = variationKey || variationKeys[variationKeys.length - 1];\n\nif (getQueryVariable('variation') && variationsIndex.hasOwnProperty(variationKey)) {\n    const vToRun = variationsIndex[variationKey];\n    setNote(vToRun.note);\n    s.run(vToRun.sketch);\n} else if (experimentalVariation !== undefined) {\n    s.run(experimentalVariation);\n    setNote('Current experiment ...');\n} else {\n    const vToRun = variationsIndex[variationKeys.length];\n    setNote(vToRun.note);\n    s.run(vToRun.sketch);\n}\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] âœ¨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] ðŸš¨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">ðŸš¨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}