{"version":3,"sources":["node_modules/tinycolor2/tinycolor.js","scripts/lib/vector.js","scripts/lib/particle.js","scripts/lib/math.js","scripts/lib/canvas.js","scripts/lib/sketch.js","scripts/forcesDev.js","scripts/forcesDevGravity.js","scripts/test-grid.js","scripts/variation1.js","scripts/variation2.js","scripts/variation3.js","scripts/variation4.js","scripts/variation5.js","scripts/variation6.js","scripts/rainbow-rake-orbit-mouse.js","scripts/threeAttractors.js","scripts/index.js"],"names":["Vector","x","y","z","prototype","negative","add","v","sub","mult","div","equals","dot","cross","length","Math","sqrt","mag","magSq","m","setMag","c","r","normalize","unit","divide","min","max","limit","cm","toAngles","theta","atan2","phi","asin","angleTo","a","acos","toArray","n","slice","clone","init","b","subtract","multiply","fromAngles","cos","sin","randomDirection","random","PI","lerp","fraction","fromArray","angleBetween","MAX_COORD_HISTORY","limitArrayLen","arr","arrLength","splice","Particle","values","initValues","index","velocityX","velocityY","accelerationX","accelerationY","radius","mass","color","rotation","alpha","lifetime","drawFn","updateFn","colorFn","rest","props","_x","_y","xHistory","yHistory","oX","oY","_color","g","draw","value","toRgbString","unshift","pixel","psCanvasRandom","canvas","width","height","createRandomParticleValues","vel","coords","updatePosWithVelocity","particle","vVector","applyForce","fVect","fV","aV","aVector","pV","friction","mu","normal","vfriction","drag","coefficent","velUnit","speed","vdrag","attract","mode","affectDist","dir","distanceSq","strength","force","edgeBounce","edgeWrap","gravityPoint","f","distance","dx","forceDirectionX","forceDirectionY","tempX","tempY","avoidPoint","point","attractPoint","pointPush","dy","randomNumberBetween","randomNumberBetweenMid","randomSign","round","createRandomNumberArray","len","i","push","pointOnCircle","d","val","normalizeInverse","clamp","invlerp","lerpRange","x1","y1","x2","y2","pointDistance","pointA","pointB","pointRotateCoord","angle","pointAngleFromVelocity","radiansToDegrees","rad","scalePointToCanvas","cwidth","cheight","zoomFactor","createCirclePoints","centerX","centerY","diameter","steps","sx","sy","points","createGridPoints","xMargin","yMargin","columns","rows","gridPoints","colStep","rowStep","col","row","resizeCanvas","clearCanvas","context","_","clearRect","fillCanvas","opacity","fillStyle","fillRect","background","resetStyles","strokeStyle","lineWidth","setLineDash","lineCap","drawRotatedParticle","ctx","pSaveX","pSaveY","save","translate","rotate","heading","args","restore","drawPoint","beginPath","arc","fill","drawTestPoint","stroke","drawLine","drawRake","spacing","drawRect","w","h","drawSquare","drawTriangle","half","moveTo","lineTo","strokeWidth","drawThickLine","drawCircle","drawParticleVectors","vmult","acc","drawSpikeCircle","spikes","spikeLength","s","connectParticles","pArray","proximity","useAlpha","pA","pB","pColor","setAlpha","toHslString","drawPointTrail","trailLen","aFade","sFade","startX","startY","drawMouse","undefined","drawAttractor","sketch","mouse","isDown","fps","document","getElementById","getContext","window","innerWidth","innerHeight","getCanvas","mouseDown","evt","mouseMove","canvasFrame","getBoundingClientRect","mouseUp","mouseOut","windowResize","addEventListener","run","variation","hasOwnProperty","config","console","log","removeEventListener","rendering","lastAnimationFrameTime","targetFpsInterval","startSketch","setup","Date","now","requestAnimationFrame","renderAtFps","elapsed","render","forcesDev","particlesArray","gravity","wind","weight","forcesDevGravity","canvasCenterX","canvasCenterY","attractor","testGrid","numParticles","attractorDist","leftattractor","midattractor","rightattractor","l","variation1","centerRadius","variation2","decay","tweenDamp","margin","intensity","newValues","newCoords","variation3","png","Image","src","domokun","drawImage","data","getImageData","imageZoomFactor","pX","pY","variation4","circles","variation5","variation6","hue","rainbowRakeOrbit","threeAttractors","DEBUG","saveCanvasCapture","imageURI","toDataURL","href","e","key","click","setNote","note","innerText","getQueryVariable","variable","query","vars","location","search","substring","split","pair","variationKey","variations","vToRun"],"mappings":"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AAA,SACA,WAAA,SACA,UAAA,SACA,MAAA,SACA,eAAA,SACA,SAAA,SACA,QAAA,SACA,KAAA,MACA,SAAA,SACA,SAAA,SACA,cAAA,SACA,SAAA,SACA,UAAA,SACA,SAAA,SACA,UAAA,SACA,YAAA,SACA,eAAA,SACA,WAAA,SACA,WAAA,SACA,QAAA,SACA,WAAA,SACA,aAAA,SACA,cAAA,SACA,cAAA,SACA,cAAA,SACA,cAAA,SACA,WAAA,SACA,SAAA,SACA,YAAA,SACA,QAAA,SACA,QAAA,SACA,WAAA,SACA,UAAA,SACA,YAAA,SACA,YAAA,SACA,QAAA,MACA,UAAA,SACA,WAAA,SACA,KAAA,SACA,UAAA,SACA,KAAA,SACA,MAAA,SACA,YAAA,SACA,KAAA,SACA,SAAA,SACA,QAAA,SACA,UAAA,SACA,OAAA,SACA,MAAA,SACA,MAAA,SACA,SAAA,SACA,cAAA,SACA,UAAA,SACA,aAAA,SACA,UAAA,SACA,WAAA,SACA,UAAA,SACA,qBAAA,SACA,UAAA,SACA,WAAA,SACA,UAAA,SACA,UAAA,SACA,YAAA,SACA,cAAA,SACA,aAAA,SACA,eAAA,MACA,eAAA,MACA,eAAA,SACA,YAAA,SACA,KAAA,MACA,UAAA,SACA,MAAA,SACA,QAAA,MACA,OAAA,SACA,iBAAA,SACA,WAAA,SACA,aAAA,SACA,aAAA,SACA,eAAA,SACA,gBAAA,SACA,kBAAA,SACA,gBAAA,SACA,gBAAA,SACA,aAAA,SACA,UAAA,SACA,UAAA,SACA,SAAA,SACA,YAAA,SACA,KAAA,SACA,QAAA,SACA,MAAA,SACA,UAAA,SACA,OAAA,SACA,UAAA,SACA,OAAA,SACA,cAAA,SACA,UAAA,SACA,cAAA,SACA,cAAA,SACA,WAAA,SACA,UAAA,SACA,KAAA,SACA,KAAA,SACA,KAAA,SACA,WAAA,SACA,OAAA,SACA,cAAA,SACA,IAAA,MACA,UAAA,SACA,UAAA,SACA,YAAA,SACA,OAAA,SACA,WAAA,SACA,SAAA,SACA,SAAA,SACA,OAAA,SACA,OAAA,SACA,QAAA,SACA,UAAA,SACA,UAAA,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","file":"scripts.83c48cf3.js","sourceRoot":"..","sourcesContent":["// TinyColor v1.4.2\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (typeof define === 'function' && define.amd) {\n    define(function () {return tinycolor;});\n}\n// Browser: Expose to window\nelse {\n    window.tinycolor = tinycolor;\n}\n\n})(Math);\n","// Vector class originally from https://evanw.github.io/lightgl.js/docs/vector.html\n// Edited and expanded to match p5's vectors\n// ref - p5 vector https://p5js.org/reference/#/p5.Vector\n// https://www.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math\n\nexport function Vector(x, y, z) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n}\nVector.prototype = {\n    negative() {\n        return new Vector(-this.x, -this.y, -this.z);\n    },\n    add(v) {\n        if (v instanceof Vector) return new Vector(this.x + v.x, this.y + v.y, this.z + v.z);\n        return new Vector(this.x + v, this.y + v, this.z + v);\n    },\n    sub(v) {\n        if (v instanceof Vector) return new Vector(this.x - v.x, this.y - v.y, this.z - v.z);\n        return new Vector(this.x - v, this.y - v, this.z - v);\n    },\n    mult(v) {\n        if (v instanceof Vector) return new Vector(this.x * v.x, this.y * v.y, this.z * v.z);\n        return new Vector(this.x * v, this.y * v, this.z * v);\n    },\n    div(v) {\n        if (v instanceof Vector) return new Vector(this.x / v.x, this.y / v.y, this.z / v.z);\n        return new Vector(this.x / v, this.y / v, this.z / v);\n    },\n    equals(v) {\n        return this.x === v.x && this.y === v.y && this.z === v.z;\n    },\n    dot(v) {\n        return this.x * v.x + this.y * v.y + this.z * v.z;\n    },\n    cross(v) {\n        return new Vector(this.y * v.z - this.z * v.y, this.z * v.x - this.x * v.z, this.x * v.y - this.y * v.x);\n    },\n    length() {\n        return Math.sqrt(this.dot(this));\n    },\n    mag() {\n        return this.length();\n    },\n    magSq() {\n        const m = this.length();\n        return m * m;\n    },\n    setMag(m) {\n        const c = this.mag();\n        const r = m / c;\n        return this.mult(r);\n    },\n    normalize() {\n        let mag = this.mag();\n        mag = mag || 1;\n        return this.div(mag);\n    },\n    unit() {\n        return this.divide(this.length());\n    },\n    min() {\n        return Math.min(Math.min(this.x, this.y), this.z);\n    },\n    max() {\n        return Math.max(Math.max(this.x, this.y), this.z);\n    },\n    limit(v) {\n        const cm = this.mag();\n        if (cm > v) {\n            return this.setMag(v);\n        }\n        return this;\n    },\n    // clamp(min, max) {\n    //     // export const clamp = (min = 0, max = 1, a) => Math.min(max, Math.max(min, a));\n    // },\n    toAngles() {\n        return {\n            theta: Math.atan2(this.z, this.x),\n            phi: Math.asin(this.y / this.length()),\n        };\n    },\n    angleTo(a) {\n        return Math.acos(this.dot(a) / (this.length() * a.length()));\n    },\n    toArray(n) {\n        return [this.x, this.y, this.z].slice(0, n || 3);\n    },\n    clone() {\n        return new Vector(this.x, this.y, this.z);\n    },\n    init(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        return this;\n    },\n};\nVector.negative = function (a, b) {\n    b.x = -a.x;\n    b.y = -a.y;\n    b.z = -a.z;\n    return b;\n};\nVector.add = function (a, b, c) {\n    if (b instanceof Vector) {\n        c.x = a.x + b.x;\n        c.y = a.y + b.y;\n        c.z = a.z + b.z;\n    } else {\n        c.x = a.x + b;\n        c.y = a.y + b;\n        c.z = a.z + b;\n    }\n    return c;\n};\nVector.subtract = function (a, b, c) {\n    if (b instanceof Vector) {\n        c.x = a.x - b.x;\n        c.y = a.y - b.y;\n        c.z = a.z - b.z;\n    } else {\n        c.x = a.x - b;\n        c.y = a.y - b;\n        c.z = a.z - b;\n    }\n    return c;\n};\nVector.multiply = function (a, b, c) {\n    if (b instanceof Vector) {\n        c.x = a.x * b.x;\n        c.y = a.y * b.y;\n        c.z = a.z * b.z;\n    } else {\n        c.x = a.x * b;\n        c.y = a.y * b;\n        c.z = a.z * b;\n    }\n    return c;\n};\nVector.divide = function (a, b, c) {\n    if (b instanceof Vector) {\n        c.x = a.x / b.x;\n        c.y = a.y / b.y;\n        c.z = a.z / b.z;\n    } else {\n        c.x = a.x / b;\n        c.y = a.y / b;\n        c.z = a.z / b;\n    }\n    return c;\n};\nVector.cross = function (a, b, c) {\n    c.x = a.y * b.z - a.z * b.y;\n    c.y = a.z * b.x - a.x * b.z;\n    c.z = a.x * b.y - a.y * b.x;\n    return c;\n};\nVector.unit = function (a, b) {\n    const length = a.length();\n    b.x = a.x / length;\n    b.y = a.y / length;\n    b.z = a.z / length;\n    return b;\n};\nVector.fromAngles = function (theta, phi) {\n    return new Vector(Math.cos(theta) * Math.cos(phi), Math.sin(phi), Math.sin(theta) * Math.cos(phi));\n};\nVector.randomDirection = function () {\n    return Vector.fromAngles(Math.random() * Math.PI * 2, Math.asin(Math.random() * 2 - 1));\n};\nVector.min = function (a, b) {\n    return new Vector(Math.min(a.x, b.x), Math.min(a.y, b.y), Math.min(a.z, b.z));\n};\nVector.max = function (a, b) {\n    return new Vector(Math.max(a.x, b.x), Math.max(a.y, b.y), Math.max(a.z, b.z));\n};\nVector.lerp = function (a, b, fraction) {\n    return b.subtract(a).multiply(fraction).add(a);\n};\nVector.fromArray = function (a) {\n    return new Vector(a[0], a[1], a[2]);\n};\nVector.angleBetween = function (a, b) {\n    return a.angleTo(b);\n};\n","import tinycolor from 'tinycolor2';\nimport { pointDistance, normalizeInverse, randomNumberBetween, lerp, pointAngleFromVelocity, clamp } from './math';\nimport { Vector } from './vector';\n\nconst MAX_COORD_HISTORY = 30;\n\nconst limitArrayLen = (arr) => {\n    const arrLength = arr.length;\n    if (arrLength > MAX_COORD_HISTORY) {\n        arr.splice(0, arrLength - MAX_COORD_HISTORY);\n    }\n    return arr;\n};\n\nexport class Particle {\n    constructor(values) {\n        this.initValues(values);\n    }\n\n    initValues({\n        index,\n        x,\n        y,\n        velocityX,\n        velocityY,\n        accelerationX,\n        accelerationY,\n        radius,\n        mass,\n        color,\n        alpha,\n        rotation,\n        lifetime,\n        drawFn,\n        updateFn,\n        colorFn,\n        ...rest\n    }) {\n        this.props = rest;\n        this.index = index || 0;\n        this._x = x || 0;\n        this._y = y || 0;\n        this.xHistory = [x];\n        this.yHistory = [y];\n        this.oX = x || this.oX;\n        this.oY = y || this.oY;\n        this.velocityX = velocityX || 0;\n        this.velocityY = velocityY || 0;\n        this.accelerationX = accelerationX || 0;\n        this.accelerationY = accelerationY || 0;\n        // this.oVelocityX = velocityX || 0;\n        // this.oVelocityY = velocityY || 0;\n        this.mass = mass || 1;\n        this.radius = radius || 1;\n        this._color = color ? tinycolor(color) : tinycolor({ r: 255, g: 255, b: 255 });\n        this.rotation = rotation || 0;\n        this.lifetime = lifetime || 1;\n        this.drawFn = drawFn;\n        this.updateFn = updateFn;\n        // always return a string\n        this.colorFn = colorFn;\n    }\n\n    get color() {\n        if (this.colorFn) {\n            return tinycolor(this.colorFn(this));\n        }\n        return this._color;\n    }\n\n    set color(value) {\n        this._color = tinycolor(value);\n    }\n\n    get colorStr() {\n        if (this.colorFn) {\n            return this.colorFn(this);\n        }\n        return this._color.toRgbString();\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(value) {\n        this._x = value;\n        this.xHistory.unshift(value);\n        if (this.xHistory.length > MAX_COORD_HISTORY) {\n            this.xHistory = this.xHistory.slice(0, MAX_COORD_HISTORY);\n        }\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(value) {\n        this._y = value;\n        this.yHistory.unshift(value);\n        if (this.yHistory.length > MAX_COORD_HISTORY) {\n            this.yHistory = this.yHistory.slice(0, MAX_COORD_HISTORY);\n        }\n    }\n\n    get vVector() {\n        return new Vector(this.velocityX, this.velocityY, 0);\n    }\n\n    set vVector({ x, y }) {\n        this.velocityX = x;\n        this.velocityY = y;\n    }\n\n    get aVector() {\n        return new Vector(this.accelerationX, this.accelerationY, 0);\n    }\n\n    set aVector({ x, y }) {\n        this.accelerationX = x;\n        this.accelerationY = y;\n    }\n\n    // Rotation angle to point in direction of velocity\n    get heading() {\n        return pointAngleFromVelocity(this);\n    }\n\n    draw() {\n        this.drawFn(this);\n    }\n\n    update() {\n        this.updateFn(this);\n        this.draw(this);\n    }\n}\n\nexport const pixel = (x, y, color, radius) => new Particle({ x, y, color, radius });\n\nexport const psCanvasRandom = (canvas) => ({\n    x: randomNumberBetween(0, canvas.width),\n    y: randomNumberBetween(0, canvas.height),\n});\n\nexport const createRandomParticleValues = (canvas) => {\n    const vel = 2;\n    const radius = randomNumberBetween(5, 10);\n    const coords = psCanvasRandom(canvas);\n    return {\n        radius,\n        x: coords.x,\n        y: coords.y,\n        mass: randomNumberBetween(1, 10),\n        velocityX: randomNumberBetween(-vel, vel),\n        velocityY: randomNumberBetween(-vel, vel),\n        accelerationX: 0,\n        accelerationY: 0,\n        rotation: randomNumberBetween(-180, 180),\n        // color: { r: randomNumberBetween(100, 255), g: randomNumberBetween(100, 255), b: randomNumberBetween(100, 255) },\n        color: {\n            r: lerp(0, 255, coords.x / canvas.width),\n            g: randomNumberBetween(100, 255),\n            b: lerp(0, 255, coords.y / canvas.height),\n        },\n    };\n};\n\nexport const updatePosWithVelocity = (particle) => {\n    particle.x += particle.vVector.x;\n    particle.y += particle.vVector.y;\n};\n\n// https://www.youtube.com/watch?v=L7CECWLdTmo\nexport const applyForce = (fVect, particle) => {\n    const fV = fVect.div(particle.mass);\n    const aV = particle.aVector.add(fV);\n    const pV = particle.vVector.add(aV);\n    particle.aVector = aV;\n    particle.vVector = pV;\n};\n\n// https://www.youtube.com/watch?v=WBdhAuWS6X8\nexport const friction = (particle, mu = 0.1) => {\n    const normal = particle.mass;\n    const vfriction = particle.vVector\n        .normalize()\n        .mult(-1)\n        .setMag(mu * normal);\n    applyForce(vfriction, particle);\n};\n\n// https://www.youtube.com/watch?v=DxFDgOYEoy8\nexport const drag = (particle, coefficent = 0.1) => {\n    const area = 1; // particle.radius;\n    const velUnit = particle.vVector.normalize().mult(-1);\n    const speed = particle.vVector.magSq() * area * coefficent;\n    const vdrag = velUnit.setMag(speed);\n    applyForce(vdrag, particle);\n};\n\n// https://www.youtube.com/watch?v=EpgB3cNhKPM\n// mode 1 is attract, -1 is repel\n// const attractor = { x: canvas.width / 2, y: canvas.height / 2, mass: 50, g: 1 };\nexport const attract = ({ x, y, mass, g }, particle, mode = 1, affectDist = 1000) => {\n    if (pointDistance({ x, y }, { x: particle.x, y: particle.y }) < affectDist) {\n        g = g || 1;\n        const dir = new Vector(x, y).sub(new Vector(particle.x, particle.y));\n        const distanceSq = clamp(50, 5000, dir.magSq());\n        const strength = (mode * (g * (mass * particle.mass))) / distanceSq;\n        const force = dir.setMag(strength);\n        applyForce(force, particle);\n    }\n};\n\nexport const edgeBounce = ({ width, height }, particle) => {\n    // if (particle.x + particle.radius > width || particle.x - particle.radius < 0) {\n    //     particle.velocityX *= -1;\n    // }\n    // if (particle.y + particle.radius > height || particle.y - particle.radius < 0) {\n    //     particle.velocityY *= -1;\n    // }\n    if (particle.x + particle.radius > width) {\n        particle.velocityX *= -1;\n        particle.x = width - particle.radius;\n    }\n    if (particle.x - particle.radius < 0) {\n        particle.velocityX *= -1;\n        particle.x = particle.radius;\n    }\n    if (particle.y + particle.radius > height) {\n        particle.velocityY *= -1;\n        particle.y = height - particle.radius;\n    }\n    if (particle.y - particle.radius < 0) {\n        particle.velocityY *= -1;\n        particle.y = particle.radius;\n    }\n};\n\nexport const edgeWrap = ({ width, height }, particle) => {\n    if (particle.x + particle.radius > width) {\n        particle.x = 0 + particle.radius;\n    } else if (particle.x - particle.radius < 0) {\n        particle.x = width - particle.radius;\n    }\n    if (particle.y + particle.radius > height) {\n        particle.y = 0 + particle.radius;\n    } else if (particle.y - particle.radius < 0) {\n        particle.y = height - particle.radius;\n    }\n};\n\nexport const gravityPoint = (mult = 0.2, f = 1) => (x, y, radius, particle) => {\n    const distance = pointDistance({ x, y }, particle);\n    if (distance < radius) {\n        const dx = x - particle.x;\n        const dy = y - particle.y;\n        const forceDirectionX = dx / distance;\n        const forceDirectionY = dy / distance;\n        const force = normalizeInverse(0, radius, distance) * f * mult;\n        const tempX = forceDirectionX * force * particle.radius * 2;\n        const tempY = forceDirectionY * force * particle.radius * 2;\n        particle.x += tempX;\n        particle.y += tempY;\n    }\n};\n\n// for moving points, push away/around from point\nexport const avoidPoint = (point, particle, f = 1) => {\n    gravityPoint(1, (f *= -1))(point.x, point.y, point.radius, particle);\n};\n\n// for moving points, pull towards point\nexport const attractPoint = (point, particle, f = 1) => {\n    gravityPoint(1, f)(point.x, point.y, point.radius, particle);\n};\n\n// for moving static, push away/outward from point\nexport const pointPush = (point, particle, f = 1) => {\n    const dx = point.x - particle.x;\n    const dy = point.y - particle.y;\n    const distance = pointDistance(point, particle);\n    const forceDirectionX = dx / distance;\n    const forceDirectionY = dy / distance;\n    const force = normalizeInverse(0, point.radius, distance) * f;\n    particle.velocityX = forceDirectionX * force * particle.mass * 0.8;\n    particle.velocityY = forceDirectionY * force * particle.mass * 0.8;\n\n    if (distance < point.radius) {\n        particle.x -= particle.velocityX;\n        particle.y -= particle.velocityY;\n    } else {\n        // TODO if < 1 then snap to 0\n        if (particle.x !== particle.oX) {\n            particle.x -= (particle.x - particle.oX) * 0.1;\n        }\n        if (particle.y !== particle.oY) {\n            particle.y -= (particle.y - particle.oY) * 0.1;\n        }\n    }\n};\n","/*\n  // Math aliases\n  var π = Math.PI\n  var random = Math.random\n  var round = Math.round\n  var floor = Math.floor\n  var abs = Math.abs\n  var sin = Math.sin\n  var cos = Math.cos\n  var tan = Math.tan\n\n  Math Snippets\n  https://github.com/terkelg/math\n*/\n\nimport { createRandomParticleValues, Particle } from './particle';\nimport { fillCanvas } from './canvas';\n\nexport const randomNumberBetween = (min, max) => Math.random() * (max - min) + min;\nexport const randomNumberBetweenMid = (min, max) => randomNumberBetween(min, max) - max / 2;\n\nexport const randomSign = () => (Math.round(Math.random()) == 1 ? 1 : -1);\n\nexport const createRandomNumberArray = (len, min, max) => {\n    const arr = [];\n    for (let i = 0; i < len; i++) {\n        arr.push(randomNumberBetween(min, max));\n    }\n    return arr;\n};\n\nexport const pointOnCircle = (x, y, r, d) => ({ x: r * Math.sin(d) + x, y: r * Math.cos(d) + y });\n\n// returns value between 0-1, 250,500,0 => .5\nexport const normalize = (min, max, val) => (val - min) / (max - min);\nexport const normalizeInverse = (min, max, val) => 1 - normalize(min, max, val);\n\n// https://twitter.com/mattdesl/status/1031305279227478016\n// https://www.trysmudford.com/blog/linear-interpolation-functions/\n// lerp(20, 80, 0.5) // 40\nexport const lerp = (x, y, a) => x * (1 - a) + y * a;\nexport const clamp = (min = 0, max = 1, a) => Math.min(max, Math.max(min, a));\n// invlerp(50, 100, 75)  // 0.5\nexport const invlerp = (x, y, a) => clamp(0, 1, (a - x) / (y - x));\n// a is point in 1 and converts to point in 2\n// range(10, 100, 2000, 20000, 50) // 10000\nexport const lerpRange = (x1, y1, x2, y2, a) => lerp(x2, y2, invlerp(x1, y1, a));\n\nexport const pointDistance = (pointA, pointB) => {\n    const dx = pointA.x - pointB.x;\n    const dy = pointA.y - pointB.y;\n    return Math.sqrt(dx * dx + dy * dy);\n};\n\n// https://stackoverflow.com/questions/13043945/how-do-i-calculate-the-position-of-a-point-in-html5-canvas-after-rotation\nexport const pointRotateCoord = (point, angle) => ({\n    x: point.x * cos(angle) - point.y * sin(angle),\n    y: point.y * cos(angle) + point.x * sin(angle),\n});\n\n// https://www.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement\nexport const pointAngleFromVelocity = ({ velocityX, velocityY }) => Math.atan2(velocityY, velocityX);\n\nexport const radiansToDegrees = (rad) => (rad * 180) / Math.PI;\n\n// Scale up point grid and center in the canvas\nexport const scalePointToCanvas = (cwidth, cheight, width, height, zoomFactor, x, y) => {\n    const particleXOffset = cwidth / 2 - (width * zoomFactor) / 2;\n    const particleYOffset = cheight / 2 - (height * zoomFactor) / 2;\n    return {\n        x: x * zoomFactor + particleXOffset,\n        y: y * zoomFactor + particleYOffset,\n    };\n};\n\n// [[x,y], ...]\nexport const createCirclePoints = (centerX, centerY, diameter, steps, sx = 1, sy = 1) => {\n    const points = [];\n    for (let theta = 0; theta < 360; theta += steps) {\n        const radius = theta * (Math.PI / 180);\n        const x = Math.cos(radius) * diameter + sx + centerX;\n        const y = Math.sin(radius) * diameter + sy + centerY;\n        points.push([x, y]);\n    }\n    return points;\n};\n\nexport const createGridPoints = (width, height, xMargin, yMargin, columns, rows) => {\n    const gridPoints = [];\n\n    const colStep = (width - xMargin * 2) / (columns - 1);\n    const rowStep = (height - yMargin * 2) / (rows - 1);\n\n    for (let col = 0; col < columns; col++) {\n        const x = xMargin + col * colStep;\n        for (let row = 0; row < rows; row++) {\n            const y = yMargin + row * rowStep;\n            gridPoints.push([x, y]);\n        }\n    }\n\n    return gridPoints;\n};\n","import tinycolor from 'tinycolor2';\n\nimport { radiansToDegrees, pointAngleFromVelocity, pointDistance, normalizeInverse, pointOnCircle } from './math';\n\nexport const resizeCanvas = (canvas, width, height) => {\n    canvas.width = width;\n    canvas.height = height;\n};\n\nexport const clearCanvas = (canvas, context) => (_) => context.clearRect(0, 0, canvas.width, canvas.height);\n\nexport const fillCanvas = (canvas, context) => (opacity = 1, color = '0,0,0') => {\n    context.fillStyle = `rgba(${color},${opacity})`;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n};\n\nexport const background = (canvas, context) => (color = 'black') => {\n    context.fillStyle = tinycolor(color).toRgbString();\n    context.fillRect(0, 0, canvas.width, canvas.height);\n};\n\n// context.save() and context.restore() may be slow, just reset what i'm using\nexport const resetStyles = (context) => {\n    context.strokeStyle = '#000';\n    context.fillStyle = '#fff';\n    context.lineWidth = 1;\n    context.setLineDash([]);\n    context.lineCap = 'butt';\n};\n\nexport const drawRotatedParticle = (ctx, drawFn, particle, ...args) => {\n    const pSaveX = particle.x;\n    const pSaveY = particle.y;\n    particle.x = 0;\n    particle.y = 0;\n    ctx.save();\n    ctx.translate(pSaveX, pSaveY);\n    ctx.rotate(particle.heading);\n    drawFn(ctx)(particle, args);\n    ctx.restore();\n    particle.x = pSaveX;\n    particle.y = pSaveY;\n};\n\nexport const drawPoint = (context) => ({ x, y, radius, color }) => {\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2, false);\n    context.fillStyle = color.toRgbString();\n    context.fill();\n};\n\nexport const drawTestPoint = (context) => ({ x, y, radius, color }) => {\n    context.strokeStyle = color.toRgbString();\n    context.lineWidth = 1;\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2, false);\n    context.fillStyle = 'rgba(255,255,255,.1)';\n    context.fill();\n    context.stroke();\n    drawLine(context)(1, x, y, x + radius, y);\n};\n\n// TODO center it\nexport const drawRake = (context) => ({ x, y, radius, color }, spacing) => {\n    const points = 5;\n    spacing |= radius * 3;\n    for (let i = 0; i < points; i++) {\n        drawPoint(context)({ x: x + spacing * i, y, radius, color });\n    }\n};\n\nexport const drawRect = (context) => (x, y, w, h, color = 'white') => {\n    context.fillStyle = tinycolor(color).toRgbString();\n    context.fillRect(x, y, x + w, y + h);\n};\n\nexport const drawSquare = (context) => ({ x, y, radius, color }) => {\n    drawRect(context)(x, y, radius, radius, color);\n};\n\nexport const drawTriangle = (context) => ({ x, y, radius, color }) => {\n    const half = radius / 2;\n    context.beginPath();\n    context.moveTo(x - half, y - half);\n    context.lineTo(x + half, y);\n    context.lineTo(x - half, y + half);\n    context.fillStyle = color.toRgbString();\n    context.fill();\n\n    // context.beginPath();\n    // context.arc(x+half, y, 3, 0, Math.PI * 2, false);\n    // context.fillStyle = 'rgb(255,0,0)';\n    // context.fill();\n};\n\nexport const drawLine = (context) => (strokeWidth, x1, y1, x2, y2) => {\n    context.lineWidth = strokeWidth;\n    context.beginPath();\n    context.moveTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.stroke();\n};\n\nexport const drawThickLine = (context) => (strokeWidth, x1, y1, x2, y2) => {\n    context.lineWidth = strokeWidth;\n    context.lineCap = 'round';\n    context.beginPath();\n    context.moveTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.stroke();\n};\n\nexport const drawCircle = (context) => (strokeWidth, x, y, radius) => {\n    // context.strokeStyle = 'rgba(255,255,255,.25)';\n    context.lineWidth = strokeWidth;\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2, false);\n    // context.fillStyle = 'rgba(255,255,255,.1)';\n    // context.fill();\n    context.stroke();\n};\n\nexport const drawParticleVectors = (context) => (particle) => {\n    const vmult = 5;\n    const amult = 100;\n    const vel = 'green';\n    const acc = 'yellow';\n    const { vVector } = particle;\n    const { aVector } = particle;\n\n    context.strokeStyle = tinycolor(vel).toRgbString();\n    drawLine(context)(1, particle.x, particle.y, particle.x + vVector.x * vmult, particle.y + vVector.y * vmult);\n\n    context.strokeStyle = tinycolor(acc).toRgbString();\n    drawLine(context)(1, particle.x, particle.y, particle.x + aVector.x * amult, particle.y + aVector.y * amult);\n};\n\n// Spikes is an array of angles\nexport const drawSpikeCircle = (context) => ({ x, y, radius, color }, spikes, spikeLength = 5) => {\n    const circleStroke = 1;\n    const spikeStroke = 2;\n    context.strokeStyle = color.toRgbString();\n    context.lineWidth = circleStroke;\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2, false);\n    // context.fillStyle = 'rgba(255,255,255,.1)';\n    // context.fill();\n    context.stroke();\n    for (let s = 0; s < spikes.length; s++) {\n        const pointA = pointOnCircle(x, y, radius, spikes[s]);\n        const pointB = pointOnCircle(x, y, radius + spikeLength, spikes[s]);\n        context.strokeStyle = color.toRgbString();\n        drawLine(context)(spikeStroke, pointA.x, pointA.y, pointB.x, pointB.y);\n    }\n};\n\nexport const connectParticles = (context) => (pArray, proximity, useAlpha = true) => {\n    const len = pArray.length;\n    for (let a = 0; a < len; a++) {\n        // all consecutive particles\n        for (let b = a; b < len; b++) {\n            const pA = pArray[a];\n            const pB = pArray[b];\n            const distance = pointDistance(pA, pB);\n            if (distance < proximity) {\n                const pColor = pA.color;\n                if (useAlpha) {\n                    pColor.setAlpha(normalizeInverse(0, proximity, distance));\n                }\n                context.strokeStyle = pColor.toHslString();\n                drawLine(context)(0.5, pA.x, pA.y, pB.x, pB.y);\n            }\n        }\n    }\n    resetStyles(context);\n};\n\nexport const drawPointTrail = (context) => (particle) => {\n    const trailLen = particle.xHistory.length;\n    context.lineWidth = particle.radius;\n    const pColor = particle.color;\n    const aFade = (100 / trailLen) * 0.01;\n    let alpha = 1;\n    const sFade = (particle.radius * 2) / trailLen;\n    let stroke = particle.radius * 2;\n    for (let i = 0; i < trailLen; i++) {\n        const startX = i === 0 ? particle.x : particle.xHistory[i - 1];\n        const startY = i === 0 ? particle.y : particle.yHistory[i - 1];\n        drawLine(context)(stroke, startX, startY, particle.xHistory[i], particle.yHistory[i]);\n        pColor.setAlpha(alpha);\n        context.strokeStyle = pColor.toRgbString();\n        alpha -= aFade;\n        stroke -= sFade;\n    }\n    //\n};\n\nexport const drawMouse = (context) => ({ x, y, radius }) => {\n    if (x === undefined || y === undefined) return;\n    context.strokeStyle = 'rgba(255,255,255,.25)';\n    context.lineWidth = 1;\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2, false);\n    context.fillStyle = 'rgba(255,255,255,.1)';\n    context.fill();\n    context.stroke();\n};\n\nexport const drawAttractor = (context) => ({ x, y, mass, g }, mode, radius) => {\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2, false);\n    context.fillStyle = 'rgba(0,0,0,.1)';\n    context.fill();\n\n    context.beginPath();\n    context.arc(x, y, Math.sqrt(mass) * g, 0, Math.PI * 2, false);\n    context.fillStyle = mode === 1 ? 'rgba(0,255,0,.25)' : 'rgba(255,0,0,.25)';\n    context.fill();\n};\n","/*\nConvenience canvas sketch runner. Based on p5js\n\n\nconst variation = () => {\n    const config = {};\n\n    const setup = (canvas, context) => {\n        // create initial state\n    };\n\n    // will run every frame\n    const draw = (canvas, context, mouse) => {\n        // draw on every frame\n        return 1; // -1 to exit animation loop\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n*/\n\nimport { fillCanvas, resizeCanvas } from './canvas';\n\nexport const sketch = () => {\n    const mouse = {\n        x: undefined,\n        y: undefined,\n        isDown: false,\n        radius: 100,\n    };\n\n    let fps = 0;\n\n    let currentVariation;\n\n    const canvasSizeFraction = 0.85;\n    const canvas = document.getElementById('canvas');\n    const context = canvas.getContext('2d');\n    canvas.width = window.innerWidth * canvasSizeFraction;\n    canvas.height = window.innerHeight * canvasSizeFraction;\n\n    const getCanvas = (_) => canvas;\n    const getContext = (_) => context;\n    const getMouse = (_) => mouse;\n\n    const mouseDown = (evt) => {\n        mouse.isDown = true;\n    };\n\n    const mouseMove = (evt) => {\n        const canvasFrame = canvas.getBoundingClientRect();\n        mouse.x = evt.x - canvasFrame.x;\n        mouse.y = evt.y - canvasFrame.y;\n    };\n\n    const mouseUp = (evt) => {\n        mouse.isDown = false;\n    };\n\n    const mouseOut = (evt) => {\n        mouse.x = undefined;\n        mouse.y = undefined;\n        mouse.isDown = false;\n    };\n\n    const windowResize = (evt) =>\n        resizeCanvas(canvas, window.innerWidth * canvasSizeFraction, window.innerHeight * canvasSizeFraction);\n\n    window.addEventListener('mousedown', mouseDown);\n    window.addEventListener('touchstart', mouseDown);\n\n    window.addEventListener('mousemove', mouseMove);\n    window.addEventListener('touchmove', mouseMove);\n\n    window.addEventListener('mouseup', mouseUp);\n    window.addEventListener('touchend', mouseUp);\n\n    window.addEventListener('mouseout', mouseOut);\n    window.addEventListener('touchcancel', mouseOut);\n\n    window.addEventListener('resize', windowResize);\n\n    const run = (variation) => {\n        currentVariation = variation;\n\n        let backgroundColor = '0,0,0';\n\n        if (variation.hasOwnProperty('config')) {\n            const { config } = variation;\n            console.log('Sketch config:', variation.config);\n            if (config.width && config.height) {\n                window.removeEventListener('resize', windowResize);\n                resizeCanvas(canvas, config.width, config.height);\n            }\n            if (config.background) {\n                backgroundColor = config.background;\n            }\n            if (config.fps) {\n                fps = config.fps;\n            }\n        }\n\n        let rendering = true;\n        const targetFpsInterval = 1000 / fps;\n        let lastAnimationFrameTime;\n\n        const startSketch = () => {\n            window.removeEventListener('load', startSketch);\n            variation.setup(canvas, context);\n\n            // fillCanvas(canvas, context)(1,backgroundColor);\n\n            const render = () => {\n                const result = variation.draw(canvas, context, mouse);\n                if (result !== -1) {\n                    requestAnimationFrame(render);\n                }\n            };\n\n            // https://stackoverflow.com/questions/19764018/controlling-fps-with-requestanimationframe\n            const renderAtFps = () => {\n                if (rendering) {\n                    requestAnimationFrame(renderAtFps);\n                }\n\n                const now = Date.now();\n                const elapsed = now - lastAnimationFrameTime;\n\n                if (elapsed > targetFpsInterval) {\n                    lastAnimationFrameTime = now - (elapsed % targetFpsInterval);\n                    const result = variation.draw(canvas, context, mouse);\n                    if (result === -1) {\n                        rendering = false;\n                    }\n                }\n            };\n\n            if (!fps) {\n                requestAnimationFrame(render);\n            } else {\n                lastAnimationFrameTime = Date.now();\n                requestAnimationFrame(renderAtFps);\n            }\n        };\n\n        window.addEventListener('load', startSketch);\n    };\n\n    return {\n        canvas: getCanvas,\n        context: getContext,\n        mouse: getMouse,\n        run,\n    };\n};\n","import {\n    attractPoint,\n    avoidPoint,\n    edgeBounce,\n    Particle,\n    updatePosWithVelocity,\n    createRandomParticleValues,\n    edgeWrap,\n    applyForce,\n    friction,\n    drag,\n} from './lib/particle';\nimport {\n    clearCanvas,\n    connectParticles,\n    drawMouse,\n    drawPoint,\n    drawPointTrail,\n    drawRotatedParticle,\n    drawTestPoint,\n    drawTriangle,\n    background,\n    drawRake,\n    drawParticleVectors,\n    drawRect,\n} from './lib/canvas';\nimport { clamp } from './lib/math';\nimport { Vector } from './lib/vector';\n\nexport const forcesDev = () => {\n    const config = {\n        width: 700,\n        height: 700,\n        // fps: 30,\n    };\n\n    const numParticles = 10;\n    const particlesArray = [];\n\n    let canvasCenterX;\n    let canvasCenterY;\n    let centerRadius;\n\n    const setup = (canvas, context) => {\n        canvasCenterX = canvas.width / 2;\n        canvasCenterY = canvas.height / 2;\n        centerRadius = canvas.height / 4;\n\n        for (let i = 0; i < numParticles; i++) {\n            const props = createRandomParticleValues(canvas);\n\n            // props.color = 'white';\n            // props.mass = 1;\n            props.radius = Math.sqrt(props.mass) * 10;\n            props.y = 0;\n            props.velocityX = 0;\n            props.velocityY = 0;\n            particlesArray.push(new Particle(props));\n        }\n    };\n\n    const draw = (canvas, context, mouse) => {\n        background(canvas, context)({ r: 0, g: 0, b: 50, a: 0.5 });\n        drawRect(context)(0, canvas.height / 2, canvas.width, canvas.height / 2, 'rgba(255,255,255,.1');\n        for (let i = 0; i < numParticles; i++) {\n            const gravity = new Vector(0, 0.25);\n            const wind = new Vector(1, 0);\n\n            const weight = gravity.mult(particlesArray[i].mass);\n\n            if (mouse.isDown) {\n                applyForce(wind, particlesArray[i]);\n            }\n\n            applyForce(weight, particlesArray[i]);\n\n            if (particlesArray[i].y + particlesArray[i].radius >= canvas.height) {\n                friction(particlesArray[i]);\n            }\n\n            if (particlesArray[i].y + particlesArray[i].radius >= canvas.height / 2) {\n                drag(particlesArray[i]);\n            }\n\n            updatePosWithVelocity(particlesArray[i]);\n            edgeBounce(canvas, particlesArray[i]);\n            drawRotatedParticle(context, drawTestPoint, particlesArray[i]);\n            drawParticleVectors(context)(particlesArray[i]);\n            particlesArray[i].aVector = { x: 0, y: 0 };\n        }\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import {\n    attractPoint,\n    avoidPoint,\n    edgeBounce,\n    Particle,\n    updatePosWithVelocity,\n    createRandomParticleValues,\n    edgeWrap,\n    applyForce,\n    friction,\n    drag,\n    attract,\n} from './lib/particle';\nimport {\n    clearCanvas,\n    connectParticles,\n    drawMouse,\n    drawPoint,\n    drawPointTrail,\n    drawRotatedParticle,\n    drawTestPoint,\n    drawTriangle,\n    background,\n    drawRake,\n    drawParticleVectors,\n    drawRect,\n} from './lib/canvas';\n\nexport const forcesDevGravity = () => {\n    const config = {\n        // width: 700,\n        // height: 700,\n        // fps: 30,\n    };\n\n    const numParticles = 50;\n    const particlesArray = [];\n\n    const attractor = { x: canvas.width / 2, y: canvas.height / 2, mass: 100, g: 20 };\n\n    let canvasCenterX;\n    let canvasCenterY;\n    let centerRadius;\n\n    const setup = (canvas, context) => {\n        canvasCenterX = canvas.width / 2;\n        canvasCenterY = canvas.height / 2;\n        centerRadius = canvas.height / 4;\n\n        for (let i = 0; i < numParticles; i++) {\n            const props = createRandomParticleValues(canvas);\n            props.radius = Math.sqrt(props.mass);\n            particlesArray.push(new Particle(props));\n        }\n    };\n\n    // const targetX = mouse.x ? mouse.x : canvas.width / 2;\n    // const targetY = mouse.y ? mouse.y : canvas.height / 2;\n    // accelerateToPoint(targetX, targetY, particlesArray[i]);\n    // https://www.youtube.com/watch?v=T84AWnntxZA\n    // const accelerateToPoint = (targetX, targetY, particle) => {\n    //     const magnitude = 0.001;\n    //     const vLimit = 5;\n    //     const accX = ((targetX - particle.x) * magnitude) / particle.mass;\n    //     const accY = ((targetY - particle.y) * magnitude) / particle.mass;\n    //     particle.velocityX += accX;\n    //     particle.velocityY += accY;\n    //     particle.velocityX = clamp(-vLimit, vLimit, particle.velocityX);\n    //     particle.velocityY = clamp(-vLimit, vLimit, particle.velocityY);\n    // };\n\n    const draw = (canvas, context, mouse) => {\n        background(canvas, context)({ r: 0, g: 0, b: 50, a: 0.01 });\n\n        let mode = 1;\n\n        attractor.x = mouse.x ? mouse.x : canvasCenterX;\n        attractor.y = mouse.y ? mouse.y : canvasCenterY;\n\n        for (let i = 0; i < numParticles; i++) {\n            if (mouse.isDown) {\n                mode = -1;\n            } else {\n                mode = 1;\n            }\n            attract(attractor, particlesArray[i], mode, 2000);\n            particlesArray[i].vVector = particlesArray[i].vVector.limit(20);\n            updatePosWithVelocity(particlesArray[i]);\n            edgeBounce(canvas, particlesArray[i]);\n            drawRotatedParticle(context, drawRake, particlesArray[i]);\n            particlesArray[i].aVector = { x: 0, y: 0 };\n        }\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import { createRandomNumberArray, pointOnCircle, randomNumberBetween, createGridPoints, lerpRange } from './lib/math';\nimport {\n    attractPoint,\n    avoidPoint,\n    edgeBounce,\n    Particle,\n    updatePosWithVelocity,\n    createRandomParticleValues,\n    edgeWrap,\n    attract,\n} from './lib/particle';\nimport {\n    background,\n    clearCanvas,\n    connectParticles,\n    drawMouse,\n    drawLine,\n    drawPoint,\n    drawPointTrail,\n    fillCanvas,\n    drawSpikeCircle,\n    drawAttractor,\n} from './lib/canvas';\n\nexport const testGrid = () => {\n    const config = {\n        // width: 500,\n        // height: 500,\n        // fps: 24,\n    };\n\n    let numParticles;\n    const particlesArray = [];\n    let gridPoints = [];\n    const hue = 0;\n\n    let attractorDist;\n\n    let leftattractor;\n    let midattractor;\n    let rightattractor;\n\n    let canvasCenterX;\n    let canvasCenterY;\n    let centerRadius;\n\n    const setup = (canvas, context) => {\n        canvasCenterX = canvas.width / 2;\n        canvasCenterY = canvas.height / 2;\n        centerRadius = canvas.height / 4;\n\n        attractorDist = canvas.width / 0.7;\n\n        leftattractor = { x: 0, y: canvas.height / 2, mass: 10, g: 3 };\n        midattractor = { x: canvas.width / 2, y: canvas.height / 2, mass: 50, g: 10 };\n        rightattractor = { x: canvas.width, y: canvas.height / 2, mass: 10, g: 3 };\n\n        gridPoints = createGridPoints(canvas.width, canvas.height, 100, 100, canvas.width / 50, canvas.height / 50);\n        numParticles = gridPoints.length;\n\n        for (let i = 0; i < numParticles; i++) {\n            const props = createRandomParticleValues(canvas);\n            props.x = gridPoints[i][0];\n            props.y = gridPoints[i][1];\n            props.velocityX = 0;\n            props.velocityY = 0;\n            props.mass = 1;\n            props.radius = 1; // randomNumberBetween(10, 30);\n            props.spikes = createRandomNumberArray(20, 0, 360);\n\n            const h = lerpRange(0, canvas.width, 0, 90, props.x);\n            const s = 100; // lerpRange(0,10,0,100,prop.radius);\n            const l = 50; // lerpRange(0,10,25,75,prop.radius);\n            props.color = `hsla(${h},${s}%,${l}%,0.1)`;\n\n            // props.color = { r: 0, g: 0, b: 0, a: 0.1 };\n\n            particlesArray.push(new Particle(props));\n        }\n\n        background(canvas, context)('white');\n    };\n\n    const draw = (canvas, context, mouse) => {\n        // background(canvas, context)({ r: 255, g: 255, b: 255, a: 0.001 });\n\n        // let mode = 1;\n\n        // attractor.x = mouse.x ? mouse.x : canvasCenterX;\n        // attractor.y = mouse.y ? mouse.y : canvasCenterY;\n\n        for (let i = 0; i < numParticles; i++) {\n            // if (mouse.isDown) {\n            //     mode = -1;\n            // } else {\n            //     mode = 1;\n            // }\n            attract(leftattractor, particlesArray[i], -1, attractorDist);\n            attract(midattractor, particlesArray[i], 1, attractorDist);\n            attract(rightattractor, particlesArray[i], -1, attractorDist);\n\n            particlesArray[i].vVector = particlesArray[i].vVector.limit(10);\n\n            updatePosWithVelocity(particlesArray[i]);\n            // edgeBounce(canvas, particlesArray[i]);\n            // edgeWrap(canvas, particlesArray[i]);\n            drawPoint(context)(particlesArray[i]);\n\n            // drawSpikeCircle(context)(particlesArray[i], particlesArray[i].props.spikes);\n        }\n        connectParticles(context)(particlesArray, 50, false);\n        // drawAttractor(context)(leftattractor, -1, attractorDist);\n        // drawAttractor(context)(midattractor, 1, attractorDist);\n        // drawAttractor(context)(rightattractor, -1, attractorDist);\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import {\n    attractPoint,\n    avoidPoint,\n    edgeBounce,\n    Particle,\n    updatePosWithVelocity,\n    createRandomParticleValues,\n} from './lib/particle';\nimport {clearCanvas, connectParticles, drawMouse, drawPoint, drawPointTrail, fillCanvas} from './lib/canvas';\n\n// Based on https://www.youtube.com/watch?v=d620nV6bp0A\nexport const variation1 = () => {\n    const numParticles= 100;\n    const particlesArray = [];\n\n    let canvasCenterX;\n    let canvasCenterY;\n    let centerRadius;\n\n    const setup = (canvas, context) => {\n        canvasCenterX = canvas.width/2;\n        canvasCenterY = canvas.height/2;\n        centerRadius = canvas.height/4;\n\n        for (let i = 0; i < numParticles; i++) {\n            const props = createRandomParticleValues(canvas);\n            props.radius = 5;\n            particlesArray.push(new Particle(props));\n        }\n    };\n\n    const draw = (canvas, context, mouse) => {\n        fillCanvas(canvas, context)();\n\n        for (let i = 0; i < numParticles; i++) {\n            updatePosWithVelocity(particlesArray[i]);\n            edgeBounce(canvas, particlesArray[i]);\n            avoidPoint({ radius: centerRadius, x:canvasCenterX, y:canvasCenterY }, particlesArray[i], 4);\n            attractPoint(mouse, particlesArray[i], mouse.isDown ? -1 : 1);\n            drawPoint(context)(particlesArray[i]);\n            drawPointTrail(context)(particlesArray[i]);\n        }\n        connectParticles(context)(particlesArray, 200);\n        drawMouse(context)(mouse);\n    };\n\n    return {\n        setup,\n        draw,\n    };\n};\n","import { avoidPoint, Particle, createRandomParticleValues } from './lib/particle';\nimport { clearCanvas, connectParticles, drawMouse, drawPoint } from './lib/canvas';\nimport { randomNumberBetween } from './lib/math';\n\n// Based on https://www.youtube.com/watch?v=j_BgnpMPxzM\nexport const variation2 = () => {\n    const config = {\n        friction: 0.8,\n        gravity: 1,\n        decay: 0.05,\n        tweenDamp: 0.1,\n        margin: 50,\n        intensity: 0,\n        numParticles: 200,\n    };\n\n    const particlesArray = [];\n\n    const setup = (canvas, context) => {\n        for (let i = 0; i < config.numParticles; i++) {\n            particlesArray.push(new Particle(createRandomParticleValues(canvas)));\n        }\n    };\n\n    const draw = (canvas, context, mouse) => {\n        clearCanvas(canvas, context)();\n\n        for (let i = 0; i < config.numParticles; i++) {\n            particlesArray[i].radius -= config.decay;\n            if (particlesArray[i].radius <= 0) {\n                const newValues = createRandomParticleValues(canvas);\n                const newCoords = mouse;\n                newValues.x = newCoords.x + randomNumberBetween(-10, 10);\n                newValues.y = newCoords.y + randomNumberBetween(-10, 10);\n                particlesArray[i].initValues(newValues);\n            }\n            particlesArray[i].y += particlesArray[i].mass * (mouse.isDown ? 1 : 0.2);\n            particlesArray[i].mass += 0.2 * config.gravity;\n            if (\n                particlesArray[i].y + particlesArray[i].radius > canvas.height ||\n                particlesArray[i].y - particlesArray[i].radius < 0\n            ) {\n                particlesArray[i].mass *= -1;\n            }\n\n            avoidPoint(mouse, particlesArray[i]);\n            // attractPoint(psMouseCoords(), particlesArray[i]);\n            drawPoint(context)(particlesArray[i]);\n            // drawPointTrail(context)(particlesArray[i]);\n        }\n        connectParticles(context)(particlesArray, 100);\n        drawMouse(context)(mouse);\n\n        return 1;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import domokun from '../domokun.png';\nimport { clearCanvas, drawMouse, drawSquare, fillCanvas } from './lib/canvas';\nimport { randomNumberBetween, scalePointToCanvas } from './lib/math';\nimport { Particle, pointPush } from './lib/particle';\n\n// Based on https://www.youtube.com/watch?v=afdHgwn1XCY\nexport const variation3 = (_) => {\n    const config = {\n        friction: 0.8,\n        gravity: 1,\n        decay: 0.05,\n        tweenDamp: 0.1,\n        margin: 50,\n        intensity: 0,\n        numParticles: 200,\n    };\n\n    const png = new Image();\n    png.src = domokun;\n    const particlesArray = [];\n\n    const setup = (canvas, context) => {\n        context.drawImage(png, 0, 0);\n        const data = context.getImageData(0, 0, png.width, png.width);\n        clearCanvas(canvas, context)();\n\n        const imageZoomFactor = 7;\n\n        for (let y = 0, y2 = data.height; y < y2; y++) {\n            for (let x = 0, x2 = data.width; x < x2; x++) {\n                // BUG drawing transparent px\n                if (data.data[y * 4 * data.width + x * 4 + 3] > 128) {\n                    const points = scalePointToCanvas(\n                        canvas.width,\n                        canvas.height,\n                        data.width,\n                        data.height,\n                        imageZoomFactor,\n                        x,\n                        y\n                    );\n                    const pX = points.x;\n                    const pY = points.y;\n                    const mass = randomNumberBetween(2, 12);\n                    const r = data.data[y * 4 * data.width + x * 4];\n                    const g = data.data[y * 4 * data.width + x * 4 + 1];\n                    const b = data.data[y * 4 * data.width + x * 4 + 2];\n                    const color = { r, g, b };\n                    const radius = imageZoomFactor;\n                    particlesArray.push(new Particle({ x: pX, y: pY, mass, color, radius }));\n                }\n            }\n        }\n\n        config.numParticles = particlesArray.length;\n    };\n\n    const draw = (canvas, context, mouse) => {\n        fillCanvas(canvas, context)(0.5);\n\n        for (let i = 0; i < config.numParticles; i++) {\n            pointPush(mouse, particlesArray[i], mouse.isDown ? -1 : 1);\n            drawSquare(context)(particlesArray[i]);\n        }\n        drawMouse(context)(mouse);\n\n        return 1;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import {createRandomParticleValues, Particle, pointPush} from \"./lib/particle\";\nimport {connectParticles, drawPoint, fillCanvas} from \"./lib/canvas\";\n\nexport const variation4 = () => {\n    const config = {\n        numParticles:0\n    };\n\n    const particlesArray = [];\n    const circles = [];\n\n    const setup = (canvas, context) => {\n        const centerX = canvas.width/2;\n        const centerY = canvas.height/2;\n        const diameter = canvas.height/4;\n        const steps = 10;\n\n        for(let theta = 0; theta < 360; theta += steps) {\n            const rad = theta*(Math.PI/180);\n            const x = (Math.cos(rad)*diameter)+centerX;\n            const y = (Math.sin(rad)*diameter)+centerY;\n            circles.push([x, y]);\n            const props = createRandomParticleValues(canvas);\n            props.x = x;\n            props.y = y;\n            props.radius=1;\n            props.color = {r:0,g:0,b:0}\n            props.index = circles.length-1;\n            particlesArray.push(new Particle(props));\n        }\n        config.numParticles = particlesArray.length;\n        fillCanvas(canvas, context)(1,'255,255,255');\n    };\n\n    // will run every frame\n    const draw = (canvas, context, mouse) => {\n        fillCanvas(canvas, context)(0.005,'255,255,255');\n        for (let i = 0; i < config.numParticles; i++) {\n            pointPush(mouse, particlesArray[i], mouse.isDown ? -1 : 5);\n            drawPoint(context)(particlesArray[i]);\n            // let index = particlesArray[i].index + 1;\n            // if(index === circles.length) {\n            //     index = 0;\n            // }\n            // particlesArray[i].x = circles[index][0];\n            // particlesArray[i].y = circles[index][1];\n            // particlesArray.index = index;\n        }\n        connectParticles(context)(particlesArray, 200);\n        return 1; // -1 to exit animation loop\n\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};","import {\n    attractPoint,\n    avoidPoint,\n    edgeBounce,\n    Particle,\n    updatePosWithVelocity,\n    createRandomParticleValues,\n} from './lib/particle';\nimport {clearCanvas, connectParticles, drawMouse, drawPoint, drawPointTrail, fillCanvas} from './lib/canvas';\nimport {randomNumberBetween} from \"./lib/math\";\n\n\nexport const variation5 = () => {\n    const config = {\n        numParticles: 50,\n    };\n\n    const particlesArray = [];\n    const circles = [];\n\n    const setup = (canvas, context) => {\n        for (let i = 0; i < config.numParticles; i++) {\n            const props = createRandomParticleValues(canvas);\n            props.x = canvas.width / 2;\n            props.y = canvas.height / 2;\n            props.color = {r:0,g:0,b:0}\n            props.radius = .5;\n            particlesArray.push(new Particle(props));\n        }\n        const centerX = canvas.width/2;\n        const centerY = canvas.height/2;\n        const diameter = canvas.height/4;\n        const steps = 30;\n        for(let theta = 0; theta < 360; theta += steps) {\n            const rad = theta*(Math.PI/180);\n            const x = (Math.cos(rad)*diameter)+centerX;\n            const y = (Math.sin(rad)*diameter)+centerY;\n            circles.push([x, y, randomNumberBetween(20,100)]);\n        }\n        fillCanvas(canvas, context)(1,'255,255,255');\n    };\n\n    const draw = (canvas, context, mouse) => {\n        // fillCanvas(canvas, context)(.005,'255,255,255');\n        for (let i = 0; i < config.numParticles; i++) {\n            updatePosWithVelocity(particlesArray[i]);\n            edgeBounce(canvas, particlesArray[i]);\n            for(let c=0;c<circles.length; c++) {\n                avoidPoint({ radius: circles[c][2],  x:circles[c][0],y:circles[c][1]}, particlesArray[i], 4);\n            }\n            drawPoint(context)(particlesArray[i]);\n        }\n        connectParticles(context)(particlesArray, 50);\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import {avoidPoint, Particle, createRandomParticleValues, updatePosWithVelocity, edgeBounce, gravityPoint} from './lib/particle';\nimport { fillCanvas, connectParticles, drawMouse, drawPoint } from './lib/canvas';\nimport {lerpRange, randomNumberBetween} from './lib/math';\n\n// Based on https://www.youtube.com/watch?v=j_BgnpMPxzM\nexport const variation6 = () => {\n\n    const numParticles = 200;\n    const particlesArray = [];\n    let hue=0;\n\n    const setup = (canvas, context) => {\n        for (let i = 0; i < numParticles; i++) {\n            const initValues = createRandomParticleValues(canvas);\n            initValues.color = {r:255,g:255,b:255};\n            particlesArray.push(new Particle(initValues));\n        }\n    };\n\n    const draw = (canvas, context, mouse) => {\n        fillCanvas(canvas, context)(.08);\n        if(hue++ > 361) hue = 0;\n        for (let i = 0; i < numParticles; i++) {\n            particlesArray[i].radius -= 0.05;\n            if (particlesArray[i].radius <= 0) {\n                const initValues = createRandomParticleValues(canvas);\n                initValues.x = mouse.x ? mouse.x : canvas.width/2;\n                initValues.y = mouse.y ? mouse.y : canvas.height/2;\n                // let h = lerpRange(0,canvas.width,100,200,initValues.x);\n                let s = lerpRange(0,10,0,100,initValues.radius);\n                let l = lerpRange(0,10,25,75,initValues.radius);\n                initValues.color = `hsl(${hue},${s}%,${l}%)`\n                particlesArray[i].initValues(initValues);\n            }\n            updatePosWithVelocity(particlesArray[i]);\n            edgeBounce(canvas, particlesArray[i]);\n\n            gravityPoint()(canvas.width/2, canvas.height, 2000, particlesArray[i]);\n            // gravityPoint({x:canvas.width/2, y:canvas.height}, particlesArray[i])\n            drawPoint(context)(particlesArray[i]);\n        }\n        // connectParticles(context)(particlesArray, 100);\n        return 1;\n    };\n\n    return {\n        setup,\n        draw,\n    };\n};\n","import { edgeBounce, Particle, updatePosWithVelocity, createRandomParticleValues, attract } from './lib/particle';\nimport { drawRotatedParticle, background, drawRake } from './lib/canvas';\n\nexport const rainbowRakeOrbit = () => {\n    const config = {\n        // width: 700,\n        // height: 700,\n        // fps: 30,\n    };\n\n    const numParticles = 50;\n    const particlesArray = [];\n\n    const attractor = { x: canvas.width / 2, y: canvas.height / 2, mass: 100, g: 20 };\n\n    let canvasCenterX;\n    let canvasCenterY;\n    let centerRadius;\n\n    const setup = (canvas, context) => {\n        canvasCenterX = canvas.width / 2;\n        canvasCenterY = canvas.height / 2;\n        centerRadius = canvas.height / 4;\n\n        for (let i = 0; i < numParticles; i++) {\n            const props = createRandomParticleValues(canvas);\n            props.radius = 1; // Math.sqrt(props.mass);\n            particlesArray.push(new Particle(props));\n        }\n    };\n\n    // const targetX = mouse.x ? mouse.x : canvas.width / 2;\n    // const targetY = mouse.y ? mouse.y : canvas.height / 2;\n    // accelerateToPoint(targetX, targetY, particlesArray[i]);\n    // https://www.youtube.com/watch?v=T84AWnntxZA\n    // const accelerateToPoint = (targetX, targetY, particle) => {\n    //     const magnitude = 0.001;\n    //     const vLimit = 5;\n    //     const accX = ((targetX - particle.x) * magnitude) / particle.mass;\n    //     const accY = ((targetY - particle.y) * magnitude) / particle.mass;\n    //     particle.velocityX += accX;\n    //     particle.velocityY += accY;\n    //     particle.velocityX = clamp(-vLimit, vLimit, particle.velocityX);\n    //     particle.velocityY = clamp(-vLimit, vLimit, particle.velocityY);\n    // };\n\n    const draw = (canvas, context, mouse) => {\n        background(canvas, context)({ r: 0, g: 0, b: 50, a: 0.01 });\n\n        let mode = 1;\n\n        attractor.x = mouse.x ? mouse.x : canvasCenterX;\n        attractor.y = mouse.y ? mouse.y : canvasCenterY;\n\n        for (let i = 0; i < numParticles; i++) {\n            if (mouse.isDown) {\n                mode = -1;\n            } else {\n                mode = 1;\n            }\n            attract(attractor, particlesArray[i], mode, 2000);\n            particlesArray[i].vVector = particlesArray[i].vVector.limit(20);\n            updatePosWithVelocity(particlesArray[i]);\n            edgeBounce(canvas, particlesArray[i]);\n            drawRotatedParticle(context, drawRake, particlesArray[i]);\n            particlesArray[i].aVector = { x: 0, y: 0 };\n        }\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import { createRandomNumberArray, pointOnCircle, randomNumberBetween, createGridPoints, lerpRange } from './lib/math';\nimport {\n    attractPoint,\n    avoidPoint,\n    edgeBounce,\n    Particle,\n    updatePosWithVelocity,\n    createRandomParticleValues,\n    edgeWrap,\n    attract,\n} from './lib/particle';\nimport {\n    background,\n    clearCanvas,\n    connectParticles,\n    drawMouse,\n    drawLine,\n    drawPoint,\n    drawPointTrail,\n    fillCanvas,\n    drawSpikeCircle,\n    drawAttractor,\n} from './lib/canvas';\n\nexport const threeAttractors = () => {\n    const config = {\n        // width: 500,\n        // height: 500,\n        // fps: 24,\n    };\n\n    let numParticles;\n    const particlesArray = [];\n    let gridPoints = [];\n    const hue = 0;\n\n    let attractorDist;\n\n    let leftattractor;\n    let midattractor;\n    let rightattractor;\n\n    let canvasCenterX;\n    let canvasCenterY;\n    let centerRadius;\n\n    const setup = (canvas, context) => {\n        canvasCenterX = canvas.width / 2;\n        canvasCenterY = canvas.height / 2;\n        centerRadius = canvas.height / 4;\n\n        attractorDist = canvas.width / 0.7;\n\n        leftattractor = { x: 0, y: canvas.height / 2, mass: 10, g: 3 };\n        midattractor = { x: canvas.width / 2, y: canvas.height / 2, mass: 50, g: 10 };\n        rightattractor = { x: canvas.width, y: canvas.height / 2, mass: 10, g: 3 };\n\n        gridPoints = createGridPoints(canvas.width, canvas.height, 100, 100, canvas.width / 50, canvas.height / 50);\n        numParticles = gridPoints.length;\n\n        for (let i = 0; i < numParticles; i++) {\n            const props = createRandomParticleValues(canvas);\n            props.x = gridPoints[i][0];\n            props.y = gridPoints[i][1];\n            props.velocityX = 0;\n            props.velocityY = 0;\n            props.mass = 1;\n            props.radius = 1; // randomNumberBetween(10, 30);\n            props.spikes = createRandomNumberArray(20, 0, 360);\n\n            const h = lerpRange(0, canvas.width, 0, 90, props.x);\n            const s = 100; // lerpRange(0,10,0,100,prop.radius);\n            const l = 50; // lerpRange(0,10,25,75,prop.radius);\n            props.color = `hsla(${h},${s}%,${l}%,0.1)`;\n\n            // props.color = { r: 0, g: 0, b: 0, a: 0.1 };\n\n            particlesArray.push(new Particle(props));\n        }\n\n        background(canvas, context)('white');\n    };\n\n    const draw = (canvas, context, mouse) => {\n        // background(canvas, context)({ r: 255, g: 255, b: 255, a: 0.001 });\n        for (let i = 0; i < numParticles; i++) {\n            attract(leftattractor, particlesArray[i], -1, attractorDist);\n            attract(midattractor, particlesArray[i], 1, attractorDist);\n            attract(rightattractor, particlesArray[i], -1, attractorDist);\n\n            particlesArray[i].vVector = particlesArray[i].vVector.limit(10);\n\n            updatePosWithVelocity(particlesArray[i]);\n            // edgeBounce(canvas, particlesArray[i]);\n            drawPoint(context)(particlesArray[i]);\n        }\n        connectParticles(context)(particlesArray, 50, false);\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","/*\nExplorations with generative code\n*/\n\nimport normliaze from 'normalize.css';\n\nimport { sketch } from './lib/sketch';\nimport { forcesDev } from './forcesDev';\nimport { forcesDevGravity } from './forcesDevGravity';\nimport { testGrid } from './test-grid';\nimport { variation1 } from './variation1';\nimport { variation2 } from './variation2';\nimport { variation3 } from './variation3';\nimport { variation4 } from './variation4';\nimport { variation5 } from './variation5';\nimport { variation6 } from './variation6';\nimport { rainbowRakeOrbit } from './rainbow-rake-orbit-mouse';\nimport { threeAttractors } from './threeAttractors';\n\nconst s = sketch();\n\nconst DEBUG = false;\n\nconst saveCanvasCapture = (_) => {\n    console.log('Saving capture');\n    const imageURI = s.canvas().toDataURL('image/png');\n    document.getElementById('download').href = imageURI;\n};\n\ndocument.getElementById('download').addEventListener('click', saveCanvasCapture);\nwindow.addEventListener('keydown', (e) => {\n    if (e.key === 's') {\n        document.getElementById('download').click();\n    }\n});\n\nconst setNote = (note) => (document.getElementById('note').innerText = note);\n\nconst getQueryVariable = (variable) => {\n    const query = window.location.search.substring(1);\n    const vars = query.split('&');\n    for (let i = 0; i < vars.length; i++) {\n        const pair = vars[i].split('=');\n        if (pair[0] === variable) {\n            return pair[1];\n        }\n    }\n    return false;\n};\n\nlet variationKey = getQueryVariable('variation');\nvariationKey = variationKey || '1';\n\nconst variations = {\n    1: {\n        note: 'Particles are attracted to the pointer. Press to repel.',\n        sketch: variation1,\n    },\n    2: {\n        note: 'Press to increase speed.',\n        sketch: variation2,\n    },\n    3: {\n        note: 'Particles are repelled from the pointer. Press to attract.',\n        sketch: variation3,\n    },\n    4: {\n        note: 'Particles are repelled from the pointer. Press to attract.',\n        sketch: variation4,\n    },\n    5: {\n        note: 'Sit back and watch.',\n        sketch: variation5,\n    },\n    6: {\n        note: 'Move the mouse',\n        sketch: variation6,\n    },\n    7: {\n        note: 'Rakes orbit center and the mouse. Click to repel.',\n        sketch: rainbowRakeOrbit,\n    },\n    8: {\n        note: 'One attractor in the center, two on the sides.',\n        sketch: threeAttractors,\n    },\n};\n\nif (variations.hasOwnProperty(variationKey) & !DEBUG) {\n    const vToRun = variations[variationKey];\n    setNote(vToRun.note);\n    s.run(vToRun.sketch());\n} else {\n    setNote('Not a valid variation!');\n}\n\nif (DEBUG) {\n    // s.run(forcesDev());\n    s.run(testGrid());\n}\n"]}