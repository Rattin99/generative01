{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-490ef66e7c50082a85cf14b36f7e0666.js","scripts/index.js","scripts/variationsIndex.js","scripts/released/variation5.js","scripts/rndrgen/systems/Particle.js","node_modules/tinycolor2/tinycolor.js","scripts/rndrgen/math/math.js","scripts/rndrgen/math/Vector.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","scripts/rndrgen/math/random.js","node_modules/canvas-sketch-util/random.js","node_modules/seed-random/index.js","node_modules/simplex-noise/simplex-noise.js","node_modules/defined/index.js","scripts/rndrgen/math/points.js","scripts/rndrgen/math/curve-calc.js","scripts/rndrgen/canvas/canvas.js","scripts/rndrgen/canvas/particles.js","scripts/rndrgen/canvas/primatives.js","scripts/released/threeAttractors.js","scripts/released/hiImage01.js","node_modules/@parcel/runtime-js/lib/runtime-d9f2857bf01f4b66493f35c1a22e9be3.js","node_modules/@parcel/runtime-js/lib/bundle-url.js","scripts/released/waves01b.js","scripts/rndrgen/canvas/ribbon.js","scripts/rndrgen/utils.js","scripts/scratch/shapes.js","scripts/rndrgen/math/attractors.js","scripts/rndrgen/color/palettes.js","node_modules/nice-color-palettes/100.json","scripts/rndrgen/sketch.js","node_modules/stats.js/build/stats.min.js","scripts/rndrgen/canvas/CanvasRecorder.js","scripts/released/lissajous01.js","scripts/rndrgen/canvas/text.js","scripts/rndrgen/math/grids.js","scripts/released/flow-field-particles.js","scripts/released/flow-field-arcs.js","scripts/released/flow-field-image.js","scripts/rndrgen/canvas/Bitmap.js","scripts/rndrgen/canvas/EdgeDetect.js","scripts/rndrgen/canvas/Cabbage.js","node_modules/@parcel/runtime-js/lib/runtime-7c685ae04a4d33aac535c76b8ce82919.js","scripts/rndrgen/canvas/fields.js","scripts/released/radial-noise.js","scripts/released/flow-field-ribbons.js","scripts/released/flow-field-ribbons-2.js","scripts/released/shaded-boxes.js","scripts/rndrgen/systems/Box.js","scripts/rndrgen/canvas/textures.js","scripts/released/larrycarlson02.js","node_modules/@parcel/runtime-js/lib/runtime-a95443865d0e36592aa49e47ff06054b.js","scripts/released/meandering-river-02.js","scripts/rndrgen/systems/MeanderingRiver.js","scripts/rndrgen/math/segments.js","scripts/released/meandering-river-01.js","scripts/rndrgen/systems/marchingSquares.js","scripts/rndrgen/math/Rectangle.js","scripts/released/truchet-tiles.js","scripts/rndrgen/systems/truchetTiles.js","scripts/rndrgen/math/QuadTree.js","scripts/released/truchet-tiles-02.js","scripts/released/meandering-river-03.js","scripts/rndrgen/rndrgen.js","scripts/rndrgen/animation/Timeline.js","scripts/experiments/brush-shape.js","scripts/experiments/circles.js","scripts/rndrgen/math/Circle.js","scripts/experiments/circles-packing.js","scripts/rndrgen/systems/CirclePackingRandom.js","scripts/experiments/circles-packing-2.js","scripts/experiments/bitmap-test-01.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d751713988987e9331980363e24189ce\";module.bundle.HMR_BUNDLE_ID = \"a3e28b36bb0fefbe344f5a88824b0574\";// @flow\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\n\nvar OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function(fn) {\n      this._acceptCallbacks.push(fn || function() {});\n    },\n    dispose: function(fn) {\n      this._disposeCallbacks.push(fn);\n    },\n  };\n  module.bundle.hotData = undefined;\n}\nmodule.bundle.Module = Module;\n\nvar checkedAssets /*: {|[string]: boolean|} */,\n  acceptedAssets /*: {|[string]: boolean|} */,\n  assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return (\n    HMR_HOST ||\n    (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost')\n  );\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol =\n    HMR_SECURE ||\n    (location.protocol == 'https:' &&\n      !/localhost|127.0.0.1|0.0.0.0/.test(hostname))\n      ? 'wss'\n      : 'ws';\n  var ws = new WebSocket(\n    protocol + '://' + hostname + (port ? ':' + port : '') + '/',\n  );\n  // $FlowFixMe\n  ws.onmessage = function(event /*: {data: string, ...} */) {\n    checkedAssets = ({} /*: {|[string]: boolean|} */);\n    acceptedAssets = ({} /*: {|[string]: boolean|} */);\n    assetsToAccept = [];\n\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      removeErrorOverlay();\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      var handled = false;\n      assets.forEach(asset => {\n        var didAccept =\n          asset.type === 'css' ||\n          (asset.type === 'js' &&\n            hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle));\n        if (didAccept) {\n          handled = true;\n        }\n      });\n\n      if (handled) {\n        console.clear();\n\n        assets.forEach(function(asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe\n          ? ansiDiagnostic.codeframe\n          : ansiDiagnostic.stack;\n\n        console.error(\n          '🚨 [parcel]: ' +\n            ansiDiagnostic.message +\n            '\\n' +\n            stack +\n            '\\n\\n' +\n            ansiDiagnostic.hints.join('\\n'),\n        );\n      }\n\n      // Render the fancy html overlay\n      removeErrorOverlay();\n      var overlay = createErrorOverlay(data.diagnostics.html);\n      // $FlowFixMe\n      document.body.appendChild(overlay);\n    }\n  };\n  ws.onerror = function(e) {\n    console.error(e.message);\n  };\n  ws.onclose = function(e) {\n    if (process.env.PARCEL_BUILD_ENV !== 'test') {\n      console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  let errorHTML =\n    '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>\n          ${stack}\n        </pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>' + hint + '</div>').join('')}\n        </div>\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n\n  overlay.innerHTML = errorHTML;\n\n  return overlay;\n}\n\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function() {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute(\n    'href',\n    // $FlowFixMe\n    link.getAttribute('href').split('?')[0] + '?' + Date.now(),\n  );\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function() {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer =\n        hostname === 'localhost'\n          ? new RegExp(\n              '^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort(),\n            ).test(href)\n          : href.indexOf(hostname + ':' + getPort());\n      var absolute =\n        /^https?:\\/\\//i.test(href) &&\n        href.indexOf(window.location.origin) !== 0 &&\n        !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n    return;\n  }\n\n  let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n  if (deps) {\n    var fn = new Function('require', 'module', 'exports', asset.output);\n    modules[asset.id] = [fn, deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(\n  bundle /*: ParcelRequire */,\n  id /*: string */,\n  depsByBundle /*: ?{ [string]: { [string]: string } }*/,\n) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(module.bundle.root, id).some(function(v) {\n    return hmrAcceptCheck(v[0], v[1], null);\n  });\n}\n\nfunction hmrAcceptRun(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function(cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function(cb) {\n      var assetsToAlsoAccept = cb(function() {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n  acceptedAssets[id] = true;\n}\n","/*\nExplorations with generative code\n*/\n\nimport normalize from 'normalize.css';\nimport { variationsIndex } from './variationsIndex';\n\nimport * as rndrgen from './rndrgen/rndrgen';\nimport { brushShape } from './experiments/brush-shape';\nimport { circles01 } from './experiments/circles';\nimport { circlePacking01 } from './experiments/circles-packing';\nimport { circlePacking02 } from './experiments/circles-packing-2';\nimport { bitmapTest01 } from './experiments/bitmap-test-01';\n\nconst debug = true;\n\nconst s = rndrgen.sketch('canvas', 0, debug);\n\n// const experimentalVariation = undefined;\nconst experimentalVariation = bitmapTest01;\n\nconst setNote = (note) => (document.getElementById('note').innerText = note);\n\nconst runVariation = (v) => {\n    setNote(v.note);\n    s.run(v.sketch, s);\n};\n\nconst variationMapKeys = Object.keys(variationsIndex);\nconst urlKey = rndrgen.utils.getQueryVariable('variation') || variationMapKeys[variationMapKeys.length - 1];\n\nif (experimentalVariation !== undefined) {\n    runVariation({ sketch: experimentalVariation, note: 'Current experiment ...' });\n} else if (urlKey && variationsIndex.hasOwnProperty(urlKey)) {\n    console.log(urlKey, variationsIndex.hasOwnProperty(urlKey));\n    runVariation(variationsIndex[urlKey]);\n} else {\n    runVariation(variationsIndex[variationMapKeys[variationMapKeys.length - 1]]);\n}\n\ndocument.getElementById('download').addEventListener('click', s.saveCanvasCapture);\ndocument.getElementById('record').addEventListener('click', s.saveCanvasRecording);\n","import { variation5 } from './released/variation5';\nimport { threeAttractors } from './released/threeAttractors';\nimport { hiImage01 } from './released/hiImage01';\nimport { waves01b } from './released/waves01b';\nimport { lissajous01 } from './released/lissajous01';\nimport { flowFieldParticles } from './released/flow-field-particles';\nimport { flowFieldArcs } from './released/flow-field-arcs';\nimport { flowFieldImage } from './released/flow-field-image';\nimport { radialNoise } from './released/radial-noise';\nimport { flowFieldRibbons } from './released/flow-field-ribbons';\nimport { flowFieldRibbons2 } from './released/flow-field-ribbons-2';\nimport { shadedBoxes } from './released/shaded-boxes';\nimport { larrycarlson02 } from './released/larrycarlson02';\nimport { meanderingRiver02 } from './released/meandering-river-02';\nimport { meanderingRiver01 } from './released/meandering-river-01';\nimport { truchetTiles } from './released/truchet-tiles';\nimport { truchetTiles02 } from './released/truchet-tiles-02';\nimport { meanderingRiver03 } from './released/meandering-river-03';\n\nexport const variationsIndex = {\n    5: {\n        note: 'Like spider webs',\n        sketch: variation5,\n    },\n    8: {\n        note: 'One attractor in the center, two on the sides.',\n        sketch: threeAttractors,\n    },\n    9: {\n        note: 'Say Hi',\n        sketch: hiImage01,\n    },\n    11: {\n        note: 'Inspired by Churn, Kenny Vaden https://www.reddit.com/r/generative/comments/lq8r11/churn_r_code/',\n        sketch: waves01b,\n    },\n    12: {\n        note: 'Experimenting with rose shapes. Refresh for new randomized set.',\n        sketch: lissajous01,\n    },\n    13: {\n        note: 'Particles and fibers flowing with 3d simplex noise.',\n        sketch: flowFieldParticles,\n    },\n    14: {\n        note: 'Arcs flowing with 3d simplex noise.',\n        sketch: flowFieldArcs,\n    },\n    15: {\n        note: 'Rendering an image with flow fields. Photo by Francesca Zama https://unsplash.com/photos/OFjnQOf1pPA',\n        sketch: flowFieldImage,\n    },\n    16: {\n        note: 'Simplex noise going around ...',\n        sketch: radialNoise,\n    },\n    17: {\n        note: 'Ribbons attracted to an attractor',\n        sketch: flowFieldRibbons,\n    },\n    18: {\n        note: 'Ribbons attracted to an attractor',\n        sketch: flowFieldRibbons2,\n    },\n    19: {\n        note: 'Shaded boxes with flow field particles.',\n        sketch: shadedBoxes,\n    },\n    20: {\n        note: 'Render an image in the wavy art style of Larry Carlson',\n        sketch: larrycarlson02,\n    },\n    21: {\n        note: 'Based on \"Meander\" by Robert Hodgin and an implementation by Eric on Reddit',\n        sketch: meanderingRiver02,\n    },\n    22: {\n        note: 'Meandering river over landscape. Refresh for new terrain. Based on \"Meander\" by Robert Hodgin.',\n        sketch: meanderingRiver01,\n    },\n    23: {\n        note: 'Multiscale Truchet Tiles',\n        sketch: truchetTiles,\n    },\n    24: {\n        note: 'Interlaced Truchet Tiles',\n        sketch: truchetTiles02,\n    },\n    25: {\n        note: 'Chaotic meander',\n        sketch: meanderingRiver03,\n    },\n};\n","import { edgeBounce, Particle, createRandomParticleValues } from '../rndrgen/systems/Particle';\nimport { background } from '../rndrgen/canvas/canvas';\nimport { normalizeInverse } from '../rndrgen/math/math';\nimport { connectParticles, particlePoint } from '../rndrgen/canvas/particles';\nimport { randomNumberBetween } from '../rndrgen/math/random';\nimport { pointDistance } from '../rndrgen/math/points';\n\nconst gravityPoint = (mult = 0.2, f = 1) => (x, y, radius, particle) => {\n    const distance = pointDistance({ x, y }, particle);\n    if (distance < radius) {\n        const dx = x - particle.x;\n        const dy = y - particle.y;\n        const forceDirectionX = dx / distance;\n        const forceDirectionY = dy / distance;\n        const force = normalizeInverse(0, radius, distance) * f * mult;\n        const tempX = forceDirectionX * force * particle.radius * 2;\n        const tempY = forceDirectionY * force * particle.radius * 2;\n        particle.x += tempX;\n        particle.y += tempY;\n    }\n};\n\n// for moving points, push away/around from point\nconst avoidPoint = (point, particle, f = 1) => {\n    gravityPoint(1, (f *= -1))(point.x, point.y, point.radius, particle);\n};\n\nexport const variation5 = () => {\n    const config = {\n        numParticles: 50,\n    };\n\n    const particlesArray = [];\n    const circles = [];\n\n    const setup = ({ canvas, context }) => {\n        for (let i = 0; i < config.numParticles; i++) {\n            const props = createRandomParticleValues(canvas);\n            props.x = canvas.width / 2;\n            props.y = canvas.height / 2;\n            props.color = { r: 0, g: 0, b: 0 };\n            props.radius = 0.5;\n            particlesArray.push(new Particle(props));\n        }\n        const centerX = canvas.width / 2;\n        const centerY = canvas.height / 2;\n        const diameter = canvas.height / 4;\n        const steps = 30;\n        for (let theta = 0; theta < 360; theta += steps) {\n            const rad = theta * (Math.PI / 180);\n            const x = Math.cos(rad) * diameter + centerX;\n            const y = Math.sin(rad) * diameter + centerY;\n            circles.push([x, y, randomNumberBetween(20, 100)]);\n        }\n        background(canvas, context)('white');\n    };\n\n    const draw = ({ canvas, context, mouse }) => {\n        for (let i = 0; i < config.numParticles; i++) {\n            particlesArray[i].updatePosWithVelocity();\n            edgeBounce(canvas, particlesArray[i]);\n            for (let c = 0; c < circles.length; c++) {\n                avoidPoint({ radius: circles[c][2], x: circles[c][0], y: circles[c][1] }, particlesArray[i], 4);\n            }\n            particlePoint(context)(particlesArray[i]);\n        }\n        connectParticles(context)(particlesArray, 50);\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import tinycolor from 'tinycolor2';\nimport { clamp } from '../math/math';\nimport { Vector } from '../math/Vector';\nimport { randomNumberBetween, randomWholeBetween } from '../math/random';\nimport { pointAngleFromVelocity, pointDistance } from '../math/points';\n\n/*\nThis class is a mess 😅\n */\n\nconst maxParticleHistory = 30;\n\nexport class Particle {\n    #x;\n\n    #y;\n\n    #color;\n\n    constructor({\n        index,\n        x,\n        y,\n        velocityX,\n        velocityY,\n        accelerationX,\n        accelerationY,\n        radius,\n        mass,\n        color,\n        alpha,\n        rotation,\n        drawFn,\n        updateFn,\n        colorFn,\n        ...rest\n    }) {\n        this.props = rest;\n        this.index = index || 0;\n\n        // TODO remove separate x/y and just use a vector\n        this.#x = x || 0;\n        this.#y = y || 0;\n        this.xHistory = [x];\n        this.yHistory = [y];\n        this.oX = x || this.oX;\n        this.oY = y || this.oY;\n        this.velocityX = velocityX || 0;\n        this.velocityY = velocityY || 0;\n        this.accelerationX = accelerationX || 0;\n        this.accelerationY = accelerationY || 0;\n\n        this.mass = mass || 1;\n        this.radius = radius || 1;\n        this.#color = color ? tinycolor(color) : tinycolor({ r: 255, g: 255, b: 255 });\n        this.rotation = rotation || 0;\n        this.colorFn = colorFn;\n    }\n\n    get color() {\n        if (this.colorFn) {\n            // TODO type check to enforce string?\n            return tinycolor(this.colorFn(this));\n        }\n        return this.#color;\n    }\n\n    set color(value) {\n        this.#color = tinycolor(value);\n    }\n\n    get colorStr() {\n        if (this.colorFn) {\n            const res = this.colorFn(this);\n            if (typeof res !== 'string') {\n                console.warn('Particle color fn must return a string!');\n                return '#ff0000';\n            }\n            return res;\n        }\n        return this.#color.toRgbString();\n    }\n\n    get x() {\n        return this.#x;\n    }\n\n    set x(value) {\n        this.#x = value;\n        this.xHistory.unshift(value);\n        if (this.xHistory.length > maxParticleHistory) {\n            this.xHistory = this.xHistory.slice(0, maxParticleHistory);\n        }\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    set y(value) {\n        this.#y = value;\n        this.yHistory.unshift(value);\n        if (this.yHistory.length > maxParticleHistory) {\n            this.yHistory = this.yHistory.slice(0, maxParticleHistory);\n        }\n    }\n\n    get velocity() {\n        return new Vector(this.velocityX, this.velocityY, 0);\n    }\n\n    set velocity({ x, y }) {\n        this.velocityX = x;\n        this.velocityY = y;\n    }\n\n    get acceleration() {\n        return new Vector(this.accelerationX, this.accelerationY, 0);\n    }\n\n    set acceleration({ x, y }) {\n        this.accelerationX = x;\n        this.accelerationY = y;\n    }\n\n    // Rotation angle to point in direction of velocity\n    get heading() {\n        return pointAngleFromVelocity(this);\n    }\n\n    reverseVelocityX() {\n        this.velocityX *= -1;\n    }\n\n    reverseVelocityY() {\n        this.velocityY *= -1;\n    }\n\n    updatePosWithVelocity() {\n        this.x += this.velocity.x;\n        this.y += this.velocity.y;\n    }\n\n    applyForce(fVect) {\n        const fV = fVect.div(this.mass);\n        const aV = this.acceleration.add(fV);\n        const pV = this.velocity.add(aV);\n        this.acceleration = aV;\n        this.velocity = pV;\n    }\n\n    // https://www.youtube.com/watch?v=WBdhAuWS6X8\n    friction(mu = 0.1) {\n        const normal = this.mass;\n        const vfriction = this.velocity\n            .normalize()\n            .mult(-1)\n            .setMag(mu * normal);\n        this.applyForce(vfriction);\n    }\n\n    // https://www.youtube.com/watch?v=DxFDgOYEoy8\n    drag(coefficent = 0.1) {\n        const area = 1; // this.radius;\n        const velUnit = this.velocity.normalize().mult(-1);\n        const speed = this.velocity.magSq() * area * coefficent;\n        const vdrag = velUnit.setMag(speed);\n        this.applyForce(vdrag);\n    }\n\n    // https://www.youtube.com/watch?v=EpgB3cNhKPM\n    // mode 1 is attract, -1 is repel\n    // const attractor = { x: canvas.width / 2, y: canvas.height / 2, mass: 50, g: 1 };\n    attract({ x, y, mass, g }, mode = 1, affectDist = 1000) {\n        if (pointDistance({ x, y }, { x: this.x, y: this.y }) < affectDist) {\n            g = g || 1;\n            const dir = new Vector(x, y).sub(new Vector(this.x, this.y));\n            const distanceSq = clamp(50, 5000, dir.magSq());\n            const strength = (mode * (g * (mass * this.mass))) / distanceSq;\n            const force = dir.setMag(strength);\n            this.applyForce(force);\n        }\n    }\n}\n\n//----------------------------------------------------------------------------------------------------------------------\n//----------------------------------------------------------------------------------------------------------------------\n\nexport const createRandomParticleValues = ({ width, height }) => {\n    const vel = 2;\n    const radius = randomNumberBetween(5, 10);\n    return {\n        radius,\n        x: randomNumberBetween(0, width),\n        y: randomNumberBetween(0, height),\n        mass: randomNumberBetween(1, 10),\n        velocityX: randomNumberBetween(-vel, vel),\n        velocityY: randomNumberBetween(-vel, vel),\n        accelerationX: 0,\n        accelerationY: 0,\n        rotation: randomNumberBetween(-180, 180),\n        color: { r: randomNumberBetween(100, 255), g: randomNumberBetween(100, 255), b: randomNumberBetween(100, 255) },\n    };\n};\n\nexport const createRandomStaticParticle = ({ width, height }) => {\n    const props = createRandomParticleValues({ width, height });\n    props.x = randomWholeBetween(0, width);\n    props.y = randomWholeBetween(0, height);\n    props.velocityX = 0;\n    props.velocityY = 0;\n    return new Particle(props);\n};\n\n//----------------------------------------------------------------------------------------------------------------------\n//----------------------------------------------------------------------------------------------------------------------\n\nexport const edgeBounce = ({ width, height }, particle) => {\n    if (particle.x + particle.radius > width) {\n        particle.reverseVelocityX();\n        particle.x = width - particle.radius;\n    }\n    if (particle.x - particle.radius < 0) {\n        particle.reverseVelocityX();\n        particle.x = particle.radius;\n    }\n    if (particle.y + particle.radius > height) {\n        particle.reverseVelocityY();\n        particle.y = height - particle.radius;\n    }\n    if (particle.y - particle.radius < 0) {\n        particle.reverseVelocityY();\n        particle.y = particle.radius;\n    }\n};\n\nexport const edgeWrap = ({ width, height }, particle) => {\n    if (particle.x + particle.radius > width) {\n        particle.x = 0 + particle.radius;\n    } else if (particle.x - particle.radius < 0) {\n        particle.x = width - particle.radius;\n    }\n    if (particle.y + particle.radius > height) {\n        particle.y = 0 + particle.radius;\n    } else if (particle.y - particle.radius < 0) {\n        particle.y = height - particle.radius;\n    }\n};\n","// TinyColor v1.4.2\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (typeof define === 'function' && define.amd) {\n    define(function () {return tinycolor;});\n}\n// Browser: Expose to window\nelse {\n    window.tinycolor = tinycolor;\n}\n\n})(Math);\n","/*\n  Math Snippets\n  https://github.com/terkelg/math\n*/\n\nimport { Vector } from './Vector';\n\n// Math aliases\nexport const π = Math.PI;\nexport const { PI } = Math;\nexport const TAU = Math.PI * 2;\nexport const { abs } = Math;\nexport const { sin } = Math;\nexport const { cos } = Math;\nexport const { tan } = Math;\nexport const { pow } = Math;\nexport const { round } = Math;\nexport const { floor } = Math;\n\n// φ phi\nexport const golden = 1.6180339887498948482;\n// g angles: 222.5, 137.5\n\nexport const fibonacci = [\n    0,\n    1,\n    1,\n    2,\n    3,\n    5,\n    8,\n    13,\n    21,\n    34,\n    55,\n    89,\n    144,\n    233,\n    377,\n    610,\n    987,\n    1597,\n    2584,\n    4181,\n    6765,\n    10946,\n    17711,\n    28657,\n    46368,\n    75025,\n    121393,\n    196418,\n    317811,\n];\n\nexport const checkBoundsLeft = (b, v) => (v < b ? b : v);\nexport const checkBoundsRight = (b, v) => (v > b ? b : v);\n\nexport const clamp = (min = 0, max = 1, a) => Math.min(max, Math.max(min, a));\n\nexport const snapNumber = (snap, n) => Math.floor(n / snap) * snap;\n\nexport const percentage = (total, num) => Math.round(num * (total / 100));\nexport const percentageFloor = (total, num) => Math.floor(num * (total / 100));\n\n// Hough transform\n// https://stackoverflow.com/questions/24372921/how-to-calculate-quantized-angle\nexport const houghQuantize = (numAngles, theta) => Math.floor((numAngles * theta) / TAU + 0.5);\n\n// https://stackoverflow.com/questions/47047691/how-to-quantize-directions-in-canny-edge-detector-in-python\nexport const quantize = (numAngles, theta) => (Math.round(theta * (numAngles / Math.PI)) + numAngles) % numAngles;\n\nexport const round2 = (num) => Math.round((num + Number.EPSILON) * 100) / 100;\n\nexport const roundToNearest = (near, num) => Math.round(num / near) * near;\n\n// -> -1 ... 1\nexport const loopingValue = (t, m = 0.5) => Math.sin(t * m);\n\n// t is 0-1, -> -1 ... 1\nexport const pingPontValue = (t) => Math.sin(t * Math.PI);\n\n// x,y offsets for the current circleOld position\nexport const pointOnCircle = (x, y, r, a) => ({ x: r * Math.sin(a) + x, y: r * Math.cos(a) + y });\n\n// returns value between 0-1, 250,500,0 => .5\nexport const normalize = (min, max, val) => (val - min) / (max - min);\nexport const normalizeInverse = (min, max, val) => 1 - normalize(min, max, val);\n\n// https://twitter.com/mattdesl/status/1031305279227478016\n// https://www.trysmudford.com/blog/linear-interpolation-functions/\n// lerp(20, 80, 0.5) -> 40\nexport const lerp = (x, y, a) => x * (1 - a) + y * a;\n\n// invlerp(50, 100, 75)  -> 0.5\nexport const invlerp = (x, y, a) => clamp(0, 1, (a - x) / (y - x));\n\n// range(10, 100, 2000, 20000, 50) -> 10000\nexport const mapRange = (x1, y1, x2, y2, a) => lerp(x2, y2, invlerp(x1, y1, a));\n\nexport const isValueInRange = (testVal, val, range) =>\n    val === testVal || (val - range < testVal && val + range > testVal);\n\nexport const mapToTau = (start, end, value) => mapRange(start, end, 0, TAU, value);\n\n// https://stackoverflow.com/questions/38457053/find-n-logarithmic-intervals-between-two-end-points\nexport const logInterval = (total_intervals, start, end) => {\n    const startInterVal = 1;\n    const endInterval = total_intervals;\n    const minLog = Math.log(start);\n    const maxLog = Math.log(end);\n    const scale = (maxLog - minLog) / (endInterval - startInterVal);\n    const result = [];\n    for (let i = 1; i < total_intervals; i++) {\n        result.push(Math.exp(minLog + scale * (i - startInterVal)));\n    }\n    result.push(end);\n    return result;\n};\n\nexport const angleFromVector = ({ x, y }) => Math.atan2(y, x);\nexport const uvFromAngle = (a) => new Vector(Math.cos(a), Math.sin(a));\n\n// Accepts a value 0-1 and returns a value 0-1 in a sin wave\nexport const toSinValue = (value) => Math.abs(Math.sin(value * TAU));\n\nexport const radiansToDegrees = (rad) => (rad * 180) / Math.PI;\nexport const degreesToRadians = (deg) => (deg * Math.PI) / 180;\n\nexport const circleX = (theta, amp, freq) => Math.cos(theta / freq) * amp;\nexport const circleY = (theta, amp, freq) => Math.sin(theta / freq) * amp;\n","// Vector class originally from https://evanw.github.io/lightgl.js/docs/vector.html\n// Edited and expanded to match p5's vectors\n// ref - p5 vector https://p5js.org/reference/#/p5.Vector\n// https://www.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/more-vector-math\n\nconst fromAngles = (theta, phi) =>\n    new Vector(Math.cos(theta) * Math.cos(phi), Math.sin(phi), Math.sin(theta) * Math.cos(phi));\nconst randomDirection = () => fromAngles(Math.random() * Math.PI * 2, Math.asin(Math.random() * 2 - 1));\nconst min = (a, b) => new Vector(Math.min(a.x, b.x), Math.min(a.y, b.y), Math.min(a.z, b.z));\nconst max = (a, b) => new Vector(Math.max(a.x, b.x), Math.max(a.y, b.y), Math.max(a.z, b.z));\nconst lerp = (a, b, fraction) => b.sub(a).mult(fraction).add(a);\nconst fromArray = (a) => new Vector(a[0], a[1], a[2]);\nconst angleBetween = (a, b) => a.angleTo(b);\n\nexport class Vector {\n    constructor(x, y, z) {\n        this.x = x || 0;\n        this.y = y || 0;\n        this.z = z || 0;\n    }\n\n    toString() {\n        return `${this.x}, ${this.y}`;\n    }\n\n    negative() {\n        return new Vector(-this.x, -this.y, -this.z);\n    }\n\n    add(v) {\n        if (v instanceof Vector) return new Vector(this.x + v.x, this.y + v.y, this.z + v.z);\n        return new Vector(this.x + v, this.y + v, this.z + v);\n    }\n\n    sub(v) {\n        if (v instanceof Vector) return new Vector(this.x - v.x, this.y - v.y, this.z - v.z);\n        return new Vector(this.x - v, this.y - v, this.z - v);\n    }\n\n    mult(v) {\n        if (v instanceof Vector) return new Vector(this.x * v.x, this.y * v.y, this.z * v.z);\n        return new Vector(this.x * v, this.y * v, this.z * v);\n    }\n\n    // https://github.com/openrndr/openrndr/blob/master/openrndr-math/src/main/kotlin/org/openrndr/math/Vector2.kt\n    mix(b, fraction) {\n        // return this.mult(1 - mix).add(o.mult(mix));\n        return lerp(this, b, fraction);\n    }\n\n    div(v) {\n        if (v instanceof Vector) return new Vector(this.x / v.x, this.y / v.y, this.z / v.z);\n        return new Vector(this.x / v, this.y / v, this.z / v);\n    }\n\n    equals(v) {\n        return this.x === v.x && this.y === v.y && this.z === v.z;\n    }\n\n    dot(v) {\n        return this.x * v.x + this.y * v.y + this.z * v.z;\n    }\n\n    cross(v) {\n        return new Vector(this.y * v.z - this.z * v.y, this.z * v.x - this.x * v.z, this.x * v.y - this.y * v.x);\n    }\n\n    length() {\n        return Math.sqrt(this.dot(this));\n    }\n\n    mag() {\n        return this.length();\n    }\n\n    magSq() {\n        const m = this.length();\n        return m * m;\n    }\n\n    setMag(m) {\n        const c = this.mag();\n        const r = m / c;\n        return this.mult(r);\n    }\n\n    normalize() {\n        let mag = this.mag();\n        mag = mag || 1;\n        return this.div(mag);\n    }\n\n    unit() {\n        return this.div(this.length());\n    }\n\n    min() {\n        return Math.min(Math.min(this.x, this.y), this.z);\n    }\n\n    max() {\n        return Math.max(Math.max(this.x, this.y), this.z);\n    }\n\n    limit(v) {\n        const cm = this.mag();\n        if (cm > v) {\n            return this.setMag(v);\n        }\n        return this;\n    }\n\n    angle() {\n        return Math.atan2(this.y, this.x);\n    }\n\n    toAngles() {\n        return {\n            theta: Math.atan2(this.z, this.x),\n            phi: Math.asin(this.y / this.length()),\n        };\n    }\n\n    angleTo(a) {\n        return Math.acos(this.dot(a) / (this.length() * a.length()));\n    }\n\n    toArray(n) {\n        return [this.x, this.y, this.z].slice(0, n || 3);\n    }\n\n    clone() {\n        return new Vector(this.x, this.y, this.z);\n    }\n\n    ceil() {\n        return new Vector(Math.ceil(this.x), Math.ceil(this.y), Math.ceil(this.z));\n    }\n\n    floor() {\n        return new Vector(Math.floor(this.x), Math.floor(this.y), Math.floor(this.z));\n    }\n\n    round() {\n        return new Vector(Math.round(this.x), Math.round(this.y), Math.round(this.z));\n    }\n}\n\nconst negative = (a, b) => {\n    b.x = -a.x;\n    b.y = -a.y;\n    b.z = -a.z;\n    return b;\n};\nconst add = (a, b, c) => {\n    if (b instanceof Vector) {\n        c.x = a.x + b.x;\n        c.y = a.y + b.y;\n        c.z = a.z + b.z;\n    } else {\n        c.x = a.x + b;\n        c.y = a.y + b;\n        c.z = a.z + b;\n    }\n    return c;\n};\nconst subtract = (a, b, c) => {\n    if (b instanceof Vector) {\n        c.x = a.x - b.x;\n        c.y = a.y - b.y;\n        c.z = a.z - b.z;\n    } else {\n        c.x = a.x - b;\n        c.y = a.y - b;\n        c.z = a.z - b;\n    }\n    return c;\n};\nconst multiply = (a, b, c) => {\n    if (b instanceof Vector) {\n        c.x = a.x * b.x;\n        c.y = a.y * b.y;\n        c.z = a.z * b.z;\n    } else {\n        c.x = a.x * b;\n        c.y = a.y * b;\n        c.z = a.z * b;\n    }\n    return c;\n};\nconst divide = (a, b, c) => {\n    if (b instanceof Vector) {\n        c.x = a.x / b.x;\n        c.y = a.y / b.y;\n        c.z = a.z / b.z;\n    } else {\n        c.x = a.x / b;\n        c.y = a.y / b;\n        c.z = a.z / b;\n    }\n    return c;\n};\nconst cross = (a, b, c) => {\n    c.x = a.y * b.z - a.z * b.y;\n    c.y = a.z * b.x - a.x * b.z;\n    c.z = a.x * b.y - a.y * b.x;\n    return c;\n};\nconst unit = (a, b) => {\n    const length = a.length();\n    b.x = a.x / length;\n    b.y = a.y / length;\n    b.z = a.z / length;\n    return b;\n};\n","exports.interopDefault = function(a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function(source, dest) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    // Skip duplicate re-exports when they have the same value.\n    if (key in dest && dest[key] === source[key]) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function(dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import csRandom from 'canvas-sketch-util/random';\nimport { TAU } from './math';\n\ncsRandom.setSeed(csRandom.getRandomSeed());\nconsole.log(`Using seed ${csRandom.getSeed()}`);\n\nexport const getRandomSeed = () => csRandom.getSeed();\nexport const setRandomSeed = (s) => csRandom.setRandomSeed(s);\n// Box-Muller Transform\n// https://stackoverflow.com/questions/25582882/javascript-math-random-normal-distribution-gaussian-bell-curve\nexport const randomNormalBM = () => {\n    let u = 0;\n    let v = 0;\n    while (u === 0) u = csRandom.value(); // Converting [0,1) to (0,1)\n    while (v === 0) v = csRandom.value();\n    let num = Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);\n    num = num / 10.0 + 0.5; // Translate to 0 -> 1\n    if (num > 1 || num < 0) return randomNormalBM(); // resample between 0 and 1\n    return num;\n};\n// same source as above\n// better solution https://spin.atomicobject.com/2019/09/30/skew-normal-prng-javascript/\nexport const randomNormalBM2 = (min = 0, max = 1, skew = 1) => {\n    let u = 0;\n    let v = 0;\n    while (u === 0) u = csRandom.value(); // Converting [0,1) to (0,1)\n    while (v === 0) v = csRandom.value();\n    let num = Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);\n\n    num = num / 10.0 + 0.5; // Translate to 0 -> 1\n    if (num > 1 || num < 0) {\n        // // resample between 0 and 1 if out of range\n        num = randomNormalBM2(min, max, skew);\n    } else {\n        num = Math.pow(num, skew); // Skew\n        num *= max - min; // Stretch to fill range\n        num += min; // offset to min\n    }\n    return num;\n};\nexport const randomNormalNumberBetween = (min, max) => randomNormalBM() * (max - min) + min;\nexport const randomNormalWholeBetween = (min, max) => Math.round(randomNormalBM() * (max - min) + min);\nexport const randomNumberBetween = (min, max) => csRandom.valueNonZero() * (max - min) + min;\nexport const randomWholeBetween = (min, max) => Math.floor(csRandom.value() * (max - min) + min);\nexport const randomNumberBetweenMid = (min, max) => randomNumberBetween(min, max) - max / 2;\n\nexport const random = (max) => (max > 0 ? randomWholeBetween(0, max) : randomWholeBetween(max, 0));\nexport const randomN = (max) => (max > 0 ? randomNormalWholeBetween(0, max) : randomNormalWholeBetween(max, 0));\n\nexport const randomSign = () => (Math.round(csRandom.value()) === 1 ? 1 : -1);\nexport const randomBoolean = () => Math.round(csRandom.value()) === 1;\nexport const randomChance = (chance = 0.5) => csRandom.chance(chance);\n\nexport const oneOf = (arry) => {\n    const i = randomWholeBetween(0, arry.length - 1);\n    return arry[i];\n};\nexport const createRandomNumberArray = (len, min, max) =>\n    Array.from(new Array(len)).map(() => randomNumberBetween(min, max));\n\nexport const create2dNoise = (u, v, amplitude = 1, frequency = 0.5) =>\n    csRandom.noise2D(u * frequency, v * frequency) * amplitude;\n\nexport const create2dNoiseAbs = (u, v, amplitude = 1, frequency = 0.5) =>\n    Math.abs(csRandom.noise2D(u * frequency, v * frequency)) * amplitude;\n\nexport const create3dNoise = (u, v, t, amplitude = 1, frequency = 0.5) =>\n    csRandom.noise3D(u * frequency, v * frequency, t * frequency) * amplitude;\n\nexport const create3dNoiseAbs = (u, v, t, amplitude = 1, frequency = 0.5) =>\n    Math.abs(csRandom.noise3D(u * frequency, v * frequency, t * frequency)) * amplitude;\n\nexport const randomPointAround = (range = 20) => {\n    const radius = randomWholeBetween(0, range);\n    const angle = randomNumberBetween(0, TAU);\n    return { x: radius * Math.cos(angle), y: radius * Math.sin(angle) };\n};\n","var seedRandom = require('seed-random');\nvar SimplexNoise = require('simplex-noise');\nvar defined = require('defined');\n\nfunction createRandom (defaultSeed) {\n  defaultSeed = defined(defaultSeed, null);\n  var defaultRandom = Math.random;\n  var currentSeed;\n  var currentRandom;\n  var noiseGenerator;\n  var _nextGaussian = null;\n  var _hasNextGaussian = false;\n\n  setSeed(defaultSeed);\n\n  return {\n    value: value,\n    createRandom: function (defaultSeed) {\n      return createRandom(defaultSeed);\n    },\n    setSeed: setSeed,\n    getSeed: getSeed,\n    getRandomSeed: getRandomSeed,\n    valueNonZero: valueNonZero,\n    permuteNoise: permuteNoise,\n    noise1D: noise1D,\n    noise2D: noise2D,\n    noise3D: noise3D,\n    noise4D: noise4D,\n    sign: sign,\n    boolean: boolean,\n    chance: chance,\n    range: range,\n    rangeFloor: rangeFloor,\n    pick: pick,\n    shuffle: shuffle,\n    onCircle: onCircle,\n    insideCircle: insideCircle,\n    onSphere: onSphere,\n    insideSphere: insideSphere,\n    quaternion: quaternion,\n    weighted: weighted,\n    weightedSet: weightedSet,\n    weightedSetIndex: weightedSetIndex,\n    gaussian: gaussian\n  };\n\n  function setSeed (seed, opt) {\n    if (typeof seed === 'number' || typeof seed === 'string') {\n      currentSeed = seed;\n      currentRandom = seedRandom(currentSeed, opt);\n    } else {\n      currentSeed = undefined;\n      currentRandom = defaultRandom;\n    }\n    noiseGenerator = createNoise();\n    _nextGaussian = null;\n    _hasNextGaussian = false;\n  }\n\n  function value () {\n    return currentRandom();\n  }\n\n  function valueNonZero () {\n    var u = 0;\n    while (u === 0) u = value();\n    return u;\n  }\n\n  function getSeed () {\n    return currentSeed;\n  }\n\n  function getRandomSeed () {\n    var seed = String(Math.floor(Math.random() * 1000000));\n    return seed;\n  }\n\n  function createNoise () {\n    return new SimplexNoise(currentRandom);\n  }\n\n  function permuteNoise () {\n    noiseGenerator = createNoise();\n  }\n\n  function noise1D (x, frequency, amplitude) {\n    if (!isFinite(x)) throw new TypeError('x component for noise() must be finite');\n    frequency = defined(frequency, 1);\n    amplitude = defined(amplitude, 1);\n    return amplitude * noiseGenerator.noise2D(x * frequency, 0);\n  }\n\n  function noise2D (x, y, frequency, amplitude) {\n    if (!isFinite(x)) throw new TypeError('x component for noise() must be finite');\n    if (!isFinite(y)) throw new TypeError('y component for noise() must be finite');\n    frequency = defined(frequency, 1);\n    amplitude = defined(amplitude, 1);\n    return amplitude * noiseGenerator.noise2D(x * frequency, y * frequency);\n  }\n\n  function noise3D (x, y, z, frequency, amplitude) {\n    if (!isFinite(x)) throw new TypeError('x component for noise() must be finite');\n    if (!isFinite(y)) throw new TypeError('y component for noise() must be finite');\n    if (!isFinite(z)) throw new TypeError('z component for noise() must be finite');\n    frequency = defined(frequency, 1);\n    amplitude = defined(amplitude, 1);\n    return amplitude * noiseGenerator.noise3D(\n      x * frequency,\n      y * frequency,\n      z * frequency\n    );\n  }\n\n  function noise4D (x, y, z, w, frequency, amplitude) {\n    if (!isFinite(x)) throw new TypeError('x component for noise() must be finite');\n    if (!isFinite(y)) throw new TypeError('y component for noise() must be finite');\n    if (!isFinite(z)) throw new TypeError('z component for noise() must be finite');\n    if (!isFinite(w)) throw new TypeError('w component for noise() must be finite');\n    frequency = defined(frequency, 1);\n    amplitude = defined(amplitude, 1);\n    return amplitude * noiseGenerator.noise4D(\n      x * frequency,\n      y * frequency,\n      z * frequency,\n      w * frequency\n    );\n  }\n\n  function sign () {\n    return boolean() ? 1 : -1;\n  }\n\n  function boolean () {\n    return value() > 0.5;\n  }\n\n  function chance (n) {\n    n = defined(n, 0.5);\n    if (typeof n !== 'number') throw new TypeError('expected n to be a number');\n    return value() < n;\n  }\n\n  function range (min, max) {\n    if (max === undefined) {\n      max = min;\n      min = 0;\n    }\n\n    if (typeof min !== 'number' || typeof max !== 'number') {\n      throw new TypeError('Expected all arguments to be numbers');\n    }\n\n    return value() * (max - min) + min;\n  }\n\n  function rangeFloor (min, max) {\n    if (max === undefined) {\n      max = min;\n      min = 0;\n    }\n\n    if (typeof min !== 'number' || typeof max !== 'number') {\n      throw new TypeError('Expected all arguments to be numbers');\n    }\n\n    return Math.floor(range(min, max));\n  }\n\n  function pick (array) {\n    if (array.length === 0) return undefined;\n    return array[rangeFloor(0, array.length)];\n  }\n\n  function shuffle (arr) {\n    if (!Array.isArray(arr)) {\n      throw new TypeError('Expected Array, got ' + typeof arr);\n    }\n\n    var rand;\n    var tmp;\n    var len = arr.length;\n    var ret = arr.slice();\n    while (len) {\n      rand = Math.floor(value() * len--);\n      tmp = ret[len];\n      ret[len] = ret[rand];\n      ret[rand] = tmp;\n    }\n    return ret;\n  }\n\n  function onCircle (radius, out) {\n    radius = defined(radius, 1);\n    out = out || [];\n    var theta = value() * 2.0 * Math.PI;\n    out[0] = radius * Math.cos(theta);\n    out[1] = radius * Math.sin(theta);\n    return out;\n  }\n\n  function insideCircle (radius, out) {\n    radius = defined(radius, 1);\n    out = out || [];\n    onCircle(1, out);\n    var r = radius * Math.sqrt(value());\n    out[0] *= r;\n    out[1] *= r;\n    return out;\n  }\n\n  function onSphere (radius, out) {\n    radius = defined(radius, 1);\n    out = out || [];\n    var u = value() * Math.PI * 2;\n    var v = value() * 2 - 1;\n    var phi = u;\n    var theta = Math.acos(v);\n    out[0] = radius * Math.sin(theta) * Math.cos(phi);\n    out[1] = radius * Math.sin(theta) * Math.sin(phi);\n    out[2] = radius * Math.cos(theta);\n    return out;\n  }\n\n  function insideSphere (radius, out) {\n    radius = defined(radius, 1);\n    out = out || [];\n    var u = value() * Math.PI * 2;\n    var v = value() * 2 - 1;\n    var k = value();\n\n    var phi = u;\n    var theta = Math.acos(v);\n    var r = radius * Math.cbrt(k);\n    out[0] = r * Math.sin(theta) * Math.cos(phi);\n    out[1] = r * Math.sin(theta) * Math.sin(phi);\n    out[2] = r * Math.cos(theta);\n    return out;\n  }\n\n  function quaternion (out) {\n    out = out || [];\n    var u1 = value();\n    var u2 = value();\n    var u3 = value();\n\n    var sq1 = Math.sqrt(1 - u1);\n    var sq2 = Math.sqrt(u1);\n\n    var theta1 = Math.PI * 2 * u2;\n    var theta2 = Math.PI * 2 * u3;\n\n    var x = Math.sin(theta1) * sq1;\n    var y = Math.cos(theta1) * sq1;\n    var z = Math.sin(theta2) * sq2;\n    var w = Math.cos(theta2) * sq2;\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n  }\n\n  function weightedSet (set) {\n    set = set || [];\n    if (set.length === 0) return null;\n    return set[weightedSetIndex(set)].value;\n  }\n\n  function weightedSetIndex (set) {\n    set = set || [];\n    if (set.length === 0) return -1;\n    return weighted(set.map(function (s) {\n      return s.weight;\n    }));\n  }\n\n  function weighted (weights) {\n    weights = weights || [];\n    if (weights.length === 0) return -1;\n    var totalWeight = 0;\n    var i;\n\n    for (i = 0; i < weights.length; i++) {\n      totalWeight += weights[i];\n    }\n\n    if (totalWeight <= 0) throw new Error('Weights must sum to > 0');\n\n    var random = value() * totalWeight;\n    for (i = 0; i < weights.length; i++) {\n      if (random < weights[i]) {\n        return i;\n      }\n      random -= weights[i];\n    }\n    return 0;\n  }\n\n  function gaussian (mean, standardDerivation) {\n    mean = defined(mean, 0);\n    standardDerivation = defined(standardDerivation, 1);\n\n    // https://github.com/openjdk-mirror/jdk7u-jdk/blob/f4d80957e89a19a29bb9f9807d2a28351ed7f7df/src/share/classes/java/util/Random.java#L496\n    if (_hasNextGaussian) {\n      _hasNextGaussian = false;\n      var result = _nextGaussian;\n      _nextGaussian = null;\n      return mean + standardDerivation * result;\n    } else {\n      var v1 = 0;\n      var v2 = 0;\n      var s = 0;\n      do {\n        v1 = value() * 2 - 1; // between -1 and 1\n        v2 = value() * 2 - 1; // between -1 and 1\n        s = v1 * v1 + v2 * v2;\n      } while (s >= 1 || s === 0);\n      var multiplier = Math.sqrt(-2 * Math.log(s) / s);\n      _nextGaussian = (v2 * multiplier);\n      _hasNextGaussian = true;\n      return mean + standardDerivation * (v1 * multiplier);\n    }\n  }\n}\n\nmodule.exports = createRandom();\n","'use strict';\r\n\r\nvar width = 256;// each RC4 output is 0 <= x < 256\r\nvar chunks = 6;// at least six RC4 outputs for each double\r\nvar digits = 52;// there are 52 significant digits in a double\r\nvar pool = [];// pool: entropy pool starts empty\r\nvar GLOBAL = typeof global === 'undefined' ? window : global;\r\n\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\nvar startdenom = Math.pow(width, chunks),\r\n    significance = Math.pow(2, digits),\r\n    overflow = significance * 2,\r\n    mask = width - 1;\r\n\r\n\r\nvar oldRandom = Math.random;\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\nmodule.exports = function(seed, options) {\r\n  if (options && options.global === true) {\r\n    options.global = false;\r\n    Math.random = module.exports(seed, options);\r\n    options.global = true;\r\n    return Math.random;\r\n  }\r\n  var use_entropy = (options && options.entropy) || false;\r\n  var key = [];\r\n\r\n  // Flatten the seed string or build one from local entropy if needed.\r\n  var shortseed = mixkey(flatten(\r\n    use_entropy ? [seed, tostring(pool)] :\r\n    0 in arguments ? seed : autoseed(), 3), key);\r\n\r\n  // Use the seed to initialize an ARC4 generator.\r\n  var arc4 = new ARC4(key);\r\n\r\n  // Mix the randomness into accumulated entropy.\r\n  mixkey(tostring(arc4.S), pool);\r\n\r\n  // Override Math.random\r\n\r\n  // This function returns a random double in [0, 1) that contains\r\n  // randomness in every bit of the mantissa of the IEEE 754 value.\r\n\r\n  return function() {         // Closure to return a random double:\r\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n        x = 0;                          //   and no 'extra last byte'.\r\n    while (n < significance) {          // Fill up all significant digits by\r\n      n = (n + x) * width;              //   shifting numerator and\r\n      d *= width;                       //   denominator and generating a\r\n      x = arc4.g(1);                    //   new least-significant-byte.\r\n    }\r\n    while (n >= overflow) {             // To avoid rounding up, before adding\r\n      n /= 2;                           //   last byte, shift everything\r\n      d /= 2;                           //   right using integer Math until\r\n      x >>>= 1;                         //   we have exactly the desired bits.\r\n    }\r\n    return (n + x) / d;                 // Form the number within [0, 1).\r\n  };\r\n};\r\n\r\nmodule.exports.resetGlobal = function () {\r\n  Math.random = oldRandom;\r\n};\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n/** @constructor */\r\nfunction ARC4(key) {\r\n  var t, keylen = key.length,\r\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n  // The empty key [] is treated as [0].\r\n  if (!keylen) { key = [keylen++]; }\r\n\r\n  // Set up S using the standard key scheduling algorithm.\r\n  while (i < width) {\r\n    s[i] = i++;\r\n  }\r\n  for (i = 0; i < width; i++) {\r\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n    s[j] = t;\r\n  }\r\n\r\n  // The \"g\" method returns the next (count) outputs as one number.\r\n  (me.g = function(count) {\r\n    // Using instance members instead of closure state nearly doubles speed.\r\n    var t, r = 0,\r\n        i = me.i, j = me.j, s = me.S;\r\n    while (count--) {\r\n      t = s[i = mask & (i + 1)];\r\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n    }\r\n    me.i = i; me.j = j;\r\n    return r;\r\n    // For robust unpredictability discard an initial batch of values.\r\n    // See http://www.rsa.com/rsalabs/node.asp?id=2009\r\n  })(width);\r\n}\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\nfunction flatten(obj, depth) {\r\n  var result = [], typ = (typeof obj)[0], prop;\r\n  if (depth && typ == 'o') {\r\n    for (prop in obj) {\r\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n    }\r\n  }\r\n  return (result.length ? result : typ == 's' ? obj : obj + '\\0');\r\n}\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\nfunction mixkey(seed, key) {\r\n  var stringseed = seed + '', smear, j = 0;\r\n  while (j < stringseed.length) {\r\n    key[mask & j] =\r\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n  }\r\n  return tostring(key);\r\n}\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto if available.\r\n//\r\n/** @param {Uint8Array=} seed */\r\nfunction autoseed(seed) {\r\n  try {\r\n    GLOBAL.crypto.getRandomValues(seed = new Uint8Array(width));\r\n    return tostring(seed);\r\n  } catch (e) {\r\n    return [+new Date, GLOBAL, GLOBAL.navigator && GLOBAL.navigator.plugins,\r\n            GLOBAL.screen, tostring(pool)];\r\n  }\r\n}\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\nfunction tostring(a) {\r\n  return String.fromCharCode.apply(0, a);\r\n}\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to intefere with determinstic PRNG state later,\r\n// seedrandom will not call Math.random on its own again after\r\n// initialization.\r\n//\r\nmixkey(Math.random(), pool);\r\n","/*\n * A fast javascript implementation of simplex noise by Jonas Wagner\n\nBased on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\nWhich is based on example code by Stefan Gustavson (stegu@itn.liu.se).\nWith Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\nBetter rank ordering method by Stefan Gustavson in 2012.\n\n\n Copyright (c) 2018 Jonas Wagner\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n */\n(function() {\n  'use strict';\n\n  var F2 = 0.5 * (Math.sqrt(3.0) - 1.0);\n  var G2 = (3.0 - Math.sqrt(3.0)) / 6.0;\n  var F3 = 1.0 / 3.0;\n  var G3 = 1.0 / 6.0;\n  var F4 = (Math.sqrt(5.0) - 1.0) / 4.0;\n  var G4 = (5.0 - Math.sqrt(5.0)) / 20.0;\n\n  function SimplexNoise(randomOrSeed) {\n    var random;\n    if (typeof randomOrSeed == 'function') {\n      random = randomOrSeed;\n    }\n    else if (randomOrSeed) {\n      random = alea(randomOrSeed);\n    } else {\n      random = Math.random;\n    }\n    this.p = buildPermutationTable(random);\n    this.perm = new Uint8Array(512);\n    this.permMod12 = new Uint8Array(512);\n    for (var i = 0; i < 512; i++) {\n      this.perm[i] = this.p[i & 255];\n      this.permMod12[i] = this.perm[i] % 12;\n    }\n\n  }\n  SimplexNoise.prototype = {\n    grad3: new Float32Array([1, 1, 0,\n      -1, 1, 0,\n      1, -1, 0,\n\n      -1, -1, 0,\n      1, 0, 1,\n      -1, 0, 1,\n\n      1, 0, -1,\n      -1, 0, -1,\n      0, 1, 1,\n\n      0, -1, 1,\n      0, 1, -1,\n      0, -1, -1]),\n    grad4: new Float32Array([0, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1,\n      0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1,\n      1, 0, 1, 1, 1, 0, 1, -1, 1, 0, -1, 1, 1, 0, -1, -1,\n      -1, 0, 1, 1, -1, 0, 1, -1, -1, 0, -1, 1, -1, 0, -1, -1,\n      1, 1, 0, 1, 1, 1, 0, -1, 1, -1, 0, 1, 1, -1, 0, -1,\n      -1, 1, 0, 1, -1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, -1,\n      1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0,\n      -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 0]),\n    noise2D: function(xin, yin) {\n      var permMod12 = this.permMod12;\n      var perm = this.perm;\n      var grad3 = this.grad3;\n      var n0 = 0; // Noise contributions from the three corners\n      var n1 = 0;\n      var n2 = 0;\n      // Skew the input space to determine which simplex cell we're in\n      var s = (xin + yin) * F2; // Hairy factor for 2D\n      var i = Math.floor(xin + s);\n      var j = Math.floor(yin + s);\n      var t = (i + j) * G2;\n      var X0 = i - t; // Unskew the cell origin back to (x,y) space\n      var Y0 = j - t;\n      var x0 = xin - X0; // The x,y distances from the cell origin\n      var y0 = yin - Y0;\n      // For the 2D case, the simplex shape is an equilateral triangle.\n      // Determine which simplex we are in.\n      var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n      if (x0 > y0) {\n        i1 = 1;\n        j1 = 0;\n      } // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n      else {\n        i1 = 0;\n        j1 = 1;\n      } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n      // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n      // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n      // c = (3-sqrt(3))/6\n      var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n      var y1 = y0 - j1 + G2;\n      var x2 = x0 - 1.0 + 2.0 * G2; // Offsets for last corner in (x,y) unskewed coords\n      var y2 = y0 - 1.0 + 2.0 * G2;\n      // Work out the hashed gradient indices of the three simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      // Calculate the contribution from the three corners\n      var t0 = 0.5 - x0 * x0 - y0 * y0;\n      if (t0 >= 0) {\n        var gi0 = permMod12[ii + perm[jj]] * 3;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0); // (x,y) of grad3 used for 2D gradient\n      }\n      var t1 = 0.5 - x1 * x1 - y1 * y1;\n      if (t1 >= 0) {\n        var gi1 = permMod12[ii + i1 + perm[jj + j1]] * 3;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1);\n      }\n      var t2 = 0.5 - x2 * x2 - y2 * y2;\n      if (t2 >= 0) {\n        var gi2 = permMod12[ii + 1 + perm[jj + 1]] * 3;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2);\n      }\n      // Add contributions from each corner to get the final noise value.\n      // The result is scaled to return values in the interval [-1,1].\n      return 70.0 * (n0 + n1 + n2);\n    },\n    // 3D simplex noise\n    noise3D: function(xin, yin, zin) {\n      var permMod12 = this.permMod12;\n      var perm = this.perm;\n      var grad3 = this.grad3;\n      var n0, n1, n2, n3; // Noise contributions from the four corners\n      // Skew the input space to determine which simplex cell we're in\n      var s = (xin + yin + zin) * F3; // Very nice and simple skew factor for 3D\n      var i = Math.floor(xin + s);\n      var j = Math.floor(yin + s);\n      var k = Math.floor(zin + s);\n      var t = (i + j + k) * G3;\n      var X0 = i - t; // Unskew the cell origin back to (x,y,z) space\n      var Y0 = j - t;\n      var Z0 = k - t;\n      var x0 = xin - X0; // The x,y,z distances from the cell origin\n      var y0 = yin - Y0;\n      var z0 = zin - Z0;\n      // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n      // Determine which simplex we are in.\n      var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n      var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n      if (x0 >= y0) {\n        if (y0 >= z0) {\n          i1 = 1;\n          j1 = 0;\n          k1 = 0;\n          i2 = 1;\n          j2 = 1;\n          k2 = 0;\n        } // X Y Z order\n        else if (x0 >= z0) {\n          i1 = 1;\n          j1 = 0;\n          k1 = 0;\n          i2 = 1;\n          j2 = 0;\n          k2 = 1;\n        } // X Z Y order\n        else {\n          i1 = 0;\n          j1 = 0;\n          k1 = 1;\n          i2 = 1;\n          j2 = 0;\n          k2 = 1;\n        } // Z X Y order\n      }\n      else { // x0<y0\n        if (y0 < z0) {\n          i1 = 0;\n          j1 = 0;\n          k1 = 1;\n          i2 = 0;\n          j2 = 1;\n          k2 = 1;\n        } // Z Y X order\n        else if (x0 < z0) {\n          i1 = 0;\n          j1 = 1;\n          k1 = 0;\n          i2 = 0;\n          j2 = 1;\n          k2 = 1;\n        } // Y Z X order\n        else {\n          i1 = 0;\n          j1 = 1;\n          k1 = 0;\n          i2 = 1;\n          j2 = 1;\n          k2 = 0;\n        } // Y X Z order\n      }\n      // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n      // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n      // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n      // c = 1/6.\n      var x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords\n      var y1 = y0 - j1 + G3;\n      var z1 = z0 - k1 + G3;\n      var x2 = x0 - i2 + 2.0 * G3; // Offsets for third corner in (x,y,z) coords\n      var y2 = y0 - j2 + 2.0 * G3;\n      var z2 = z0 - k2 + 2.0 * G3;\n      var x3 = x0 - 1.0 + 3.0 * G3; // Offsets for last corner in (x,y,z) coords\n      var y3 = y0 - 1.0 + 3.0 * G3;\n      var z3 = z0 - 1.0 + 3.0 * G3;\n      // Work out the hashed gradient indices of the four simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      var kk = k & 255;\n      // Calculate the contribution from the four corners\n      var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n      if (t0 < 0) n0 = 0.0;\n      else {\n        var gi0 = permMod12[ii + perm[jj + perm[kk]]] * 3;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0 + grad3[gi0 + 2] * z0);\n      }\n      var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n      if (t1 < 0) n1 = 0.0;\n      else {\n        var gi1 = permMod12[ii + i1 + perm[jj + j1 + perm[kk + k1]]] * 3;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1 + grad3[gi1 + 2] * z1);\n      }\n      var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n      if (t2 < 0) n2 = 0.0;\n      else {\n        var gi2 = permMod12[ii + i2 + perm[jj + j2 + perm[kk + k2]]] * 3;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2 + grad3[gi2 + 2] * z2);\n      }\n      var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n      if (t3 < 0) n3 = 0.0;\n      else {\n        var gi3 = permMod12[ii + 1 + perm[jj + 1 + perm[kk + 1]]] * 3;\n        t3 *= t3;\n        n3 = t3 * t3 * (grad3[gi3] * x3 + grad3[gi3 + 1] * y3 + grad3[gi3 + 2] * z3);\n      }\n      // Add contributions from each corner to get the final noise value.\n      // The result is scaled to stay just inside [-1,1]\n      return 32.0 * (n0 + n1 + n2 + n3);\n    },\n    // 4D simplex noise, better simplex rank ordering method 2012-03-09\n    noise4D: function(x, y, z, w) {\n      var perm = this.perm;\n      var grad4 = this.grad4;\n\n      var n0, n1, n2, n3, n4; // Noise contributions from the five corners\n      // Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in\n      var s = (x + y + z + w) * F4; // Factor for 4D skewing\n      var i = Math.floor(x + s);\n      var j = Math.floor(y + s);\n      var k = Math.floor(z + s);\n      var l = Math.floor(w + s);\n      var t = (i + j + k + l) * G4; // Factor for 4D unskewing\n      var X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space\n      var Y0 = j - t;\n      var Z0 = k - t;\n      var W0 = l - t;\n      var x0 = x - X0; // The x,y,z,w distances from the cell origin\n      var y0 = y - Y0;\n      var z0 = z - Z0;\n      var w0 = w - W0;\n      // For the 4D case, the simplex is a 4D shape I won't even try to describe.\n      // To find out which of the 24 possible simplices we're in, we need to\n      // determine the magnitude ordering of x0, y0, z0 and w0.\n      // Six pair-wise comparisons are performed between each possible pair\n      // of the four coordinates, and the results are used to rank the numbers.\n      var rankx = 0;\n      var ranky = 0;\n      var rankz = 0;\n      var rankw = 0;\n      if (x0 > y0) rankx++;\n      else ranky++;\n      if (x0 > z0) rankx++;\n      else rankz++;\n      if (x0 > w0) rankx++;\n      else rankw++;\n      if (y0 > z0) ranky++;\n      else rankz++;\n      if (y0 > w0) ranky++;\n      else rankw++;\n      if (z0 > w0) rankz++;\n      else rankw++;\n      var i1, j1, k1, l1; // The integer offsets for the second simplex corner\n      var i2, j2, k2, l2; // The integer offsets for the third simplex corner\n      var i3, j3, k3, l3; // The integer offsets for the fourth simplex corner\n      // simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.\n      // Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w\n      // impossible. Only the 24 indices which have non-zero entries make any sense.\n      // We use a thresholding to set the coordinates in turn from the largest magnitude.\n      // Rank 3 denotes the largest coordinate.\n      i1 = rankx >= 3 ? 1 : 0;\n      j1 = ranky >= 3 ? 1 : 0;\n      k1 = rankz >= 3 ? 1 : 0;\n      l1 = rankw >= 3 ? 1 : 0;\n      // Rank 2 denotes the second largest coordinate.\n      i2 = rankx >= 2 ? 1 : 0;\n      j2 = ranky >= 2 ? 1 : 0;\n      k2 = rankz >= 2 ? 1 : 0;\n      l2 = rankw >= 2 ? 1 : 0;\n      // Rank 1 denotes the second smallest coordinate.\n      i3 = rankx >= 1 ? 1 : 0;\n      j3 = ranky >= 1 ? 1 : 0;\n      k3 = rankz >= 1 ? 1 : 0;\n      l3 = rankw >= 1 ? 1 : 0;\n      // The fifth corner has all coordinate offsets = 1, so no need to compute that.\n      var x1 = x0 - i1 + G4; // Offsets for second corner in (x,y,z,w) coords\n      var y1 = y0 - j1 + G4;\n      var z1 = z0 - k1 + G4;\n      var w1 = w0 - l1 + G4;\n      var x2 = x0 - i2 + 2.0 * G4; // Offsets for third corner in (x,y,z,w) coords\n      var y2 = y0 - j2 + 2.0 * G4;\n      var z2 = z0 - k2 + 2.0 * G4;\n      var w2 = w0 - l2 + 2.0 * G4;\n      var x3 = x0 - i3 + 3.0 * G4; // Offsets for fourth corner in (x,y,z,w) coords\n      var y3 = y0 - j3 + 3.0 * G4;\n      var z3 = z0 - k3 + 3.0 * G4;\n      var w3 = w0 - l3 + 3.0 * G4;\n      var x4 = x0 - 1.0 + 4.0 * G4; // Offsets for last corner in (x,y,z,w) coords\n      var y4 = y0 - 1.0 + 4.0 * G4;\n      var z4 = z0 - 1.0 + 4.0 * G4;\n      var w4 = w0 - 1.0 + 4.0 * G4;\n      // Work out the hashed gradient indices of the five simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      var kk = k & 255;\n      var ll = l & 255;\n      // Calculate the contribution from the five corners\n      var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;\n      if (t0 < 0) n0 = 0.0;\n      else {\n        var gi0 = (perm[ii + perm[jj + perm[kk + perm[ll]]]] % 32) * 4;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad4[gi0] * x0 + grad4[gi0 + 1] * y0 + grad4[gi0 + 2] * z0 + grad4[gi0 + 3] * w0);\n      }\n      var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;\n      if (t1 < 0) n1 = 0.0;\n      else {\n        var gi1 = (perm[ii + i1 + perm[jj + j1 + perm[kk + k1 + perm[ll + l1]]]] % 32) * 4;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad4[gi1] * x1 + grad4[gi1 + 1] * y1 + grad4[gi1 + 2] * z1 + grad4[gi1 + 3] * w1);\n      }\n      var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;\n      if (t2 < 0) n2 = 0.0;\n      else {\n        var gi2 = (perm[ii + i2 + perm[jj + j2 + perm[kk + k2 + perm[ll + l2]]]] % 32) * 4;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad4[gi2] * x2 + grad4[gi2 + 1] * y2 + grad4[gi2 + 2] * z2 + grad4[gi2 + 3] * w2);\n      }\n      var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;\n      if (t3 < 0) n3 = 0.0;\n      else {\n        var gi3 = (perm[ii + i3 + perm[jj + j3 + perm[kk + k3 + perm[ll + l3]]]] % 32) * 4;\n        t3 *= t3;\n        n3 = t3 * t3 * (grad4[gi3] * x3 + grad4[gi3 + 1] * y3 + grad4[gi3 + 2] * z3 + grad4[gi3 + 3] * w3);\n      }\n      var t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;\n      if (t4 < 0) n4 = 0.0;\n      else {\n        var gi4 = (perm[ii + 1 + perm[jj + 1 + perm[kk + 1 + perm[ll + 1]]]] % 32) * 4;\n        t4 *= t4;\n        n4 = t4 * t4 * (grad4[gi4] * x4 + grad4[gi4 + 1] * y4 + grad4[gi4 + 2] * z4 + grad4[gi4 + 3] * w4);\n      }\n      // Sum up and scale the result to cover the range [-1,1]\n      return 27.0 * (n0 + n1 + n2 + n3 + n4);\n    }\n  };\n\n  function buildPermutationTable(random) {\n    var i;\n    var p = new Uint8Array(256);\n    for (i = 0; i < 256; i++) {\n      p[i] = i;\n    }\n    for (i = 0; i < 255; i++) {\n      var r = i + ~~(random() * (256 - i));\n      var aux = p[i];\n      p[i] = p[r];\n      p[r] = aux;\n    }\n    return p;\n  }\n  SimplexNoise._buildPermutationTable = buildPermutationTable;\n\n  function alea() {\n    // Johannes Baagøe <baagoe@baagoe.com>, 2010\n    var s0 = 0;\n    var s1 = 0;\n    var s2 = 0;\n    var c = 1;\n\n    var mash = masher();\n    s0 = mash(' ');\n    s1 = mash(' ');\n    s2 = mash(' ');\n\n    for (var i = 0; i < arguments.length; i++) {\n      s0 -= mash(arguments[i]);\n      if (s0 < 0) {\n        s0 += 1;\n      }\n      s1 -= mash(arguments[i]);\n      if (s1 < 0) {\n        s1 += 1;\n      }\n      s2 -= mash(arguments[i]);\n      if (s2 < 0) {\n        s2 += 1;\n      }\n    }\n    mash = null;\n    return function() {\n      var t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\n      s0 = s1;\n      s1 = s2;\n      return s2 = t - (c = t | 0);\n    };\n  }\n  function masher() {\n    var n = 0xefc8249d;\n    return function(data) {\n      data = data.toString();\n      for (var i = 0; i < data.length; i++) {\n        n += data.charCodeAt(i);\n        var h = 0.02519603282416938 * n;\n        n = h >>> 0;\n        h -= n;\n        h *= n;\n        n = h >>> 0;\n        h -= n;\n        n += h * 0x100000000; // 2^32\n      }\n      return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n    };\n  }\n\n  // amd\n  if (typeof define !== 'undefined' && define.amd) define(function() {return SimplexNoise;});\n  // common js\n  if (typeof exports !== 'undefined') exports.SimplexNoise = SimplexNoise;\n  // browser\n  else if (typeof window !== 'undefined') window.SimplexNoise = SimplexNoise;\n  // nodejs\n  if (typeof module !== 'undefined') {\n    module.exports = SimplexNoise;\n  }\n\n})();\n","module.exports = function () {\n    for (var i = 0; i < arguments.length; i++) {\n        if (arguments[i] !== undefined) return arguments[i];\n    }\n};\n","import { Vector } from './Vector';\nimport { cos, lerp, sin } from './math';\nimport { getCurvePoints } from './curve-calc';\n\nexport const point = (x, y) => ({ x, y });\nexport const pointA = (x, y) => [x, y];\n\nexport const midPoint = (a, b) => Math.round((b - a) / 2) + a;\n\nexport const pointObjectToPointArray = (p) => [p.x, p.y];\nexport const pointArrayToPointObject = (a) => ({ x: a[0], y: a[1] });\nexport const pointArrayToVector = (a) => new Vector(a[0], a[1]);\nexport const vectorToPointArray = (v) => [v.x, v.y];\n// [[x,y]] => [{x:x,y:y}]\nexport const arrayPointArrayToObjectArray = (arry) => arry.map((a) => pointArrayToPointObject(a));\n// [[x,y]] => [Vector{x:x,y:y}]\nexport const arrayPointArrayToVectorArray = (arry) => arry.map((a) => pointArrayToVector(a));\nexport const arrayVectorToPointArray = (arry) => arry.map((a) => vectorToPointArray(a));\n\n// [[x,y]] => [x1, y1,  x2, y2, ... xn, yn]\nexport const flattenPointArray = (arry) =>\n    arry.reduce((acc, p) => {\n        if (p) {\n            acc.push(p[0]);\n            acc.push(p[1]);\n        }\n\n        return acc;\n    }, []);\n\n// [x1, y1,  x2, y2, ... xn, yn] => [[x,y]]\nexport const unflattenPointArray = (arry) => {\n    const points = [];\n    for (let i = 0; i < arry.length; i += 2) {\n        points.push([arry[i], arry[i + 1]]);\n    }\n    return points;\n};\n\nexport const uvPointToCanvas = ({ margin = 0, u, v, width, height }) => ({\n    x: lerp(margin, width - margin, u),\n    y: lerp(margin, height - margin, v),\n});\n\nexport const pointDistance = (pointA, pointB) => {\n    const dx = pointA.x - pointB.x;\n    const dy = pointA.y - pointB.y;\n    return Math.sqrt(dx * dx + dy * dy);\n};\n\nexport const midpoint = (pointA, pointB) => ({ x: (pointA.x + pointB.x) / 2, y: (pointA.y + pointB.y) / 2 });\n\n// https://stackoverflow.com/questions/13043945/how-do-i-calculate-the-position-of-a-point-in-html5-canvas-after-rotation\nexport const pointRotateCoord = (point, angle) => ({\n    x: point.x * cos(angle) - point.y * sin(angle),\n    y: point.y * cos(angle) + point.x * sin(angle),\n});\n\n// https://www.khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-angular-movement/a/pointing-towards-movement\nexport const pointAngleFromVelocity = ({ velocityX, velocityY }) => Math.atan2(velocityY, velocityX);\n\n// Scale up point grid and center in the canvas\nexport const scalePointToCanvas = (canvasWidth, canvasHeight, width, height, zoomFactor, x, y) => {\n    const particleXOffset = canvasWidth / 2 - (width * zoomFactor) / 2;\n    const particleYOffset = canvasHeight / 2 - (height * zoomFactor) / 2;\n    return {\n        x: x * zoomFactor + particleXOffset,\n        y: y * zoomFactor + particleYOffset,\n    };\n};\n\nexport const pointsOrientation = (a, b) => Math.atan2(b.y - a.y, b.x - a.x);\n\nexport const pointsFromSegment = (seg) => {\n    const points = [];\n    for (let i = 0; i < seg.length; i++) {\n        points.push([seg[i].start.x, seg[i].start.y]);\n        points.push([seg[i].end.x, seg[i].end.y]);\n    }\n    return points;\n};\n\nexport const trimPointArray = (points, skip = 2) =>\n    points.reduce((acc, s, i) => {\n        if (i === 0 || i === points.length - 1) {\n            acc.push(s);\n        } else if (i % skip === 0) {\n            acc.push(s);\n        }\n        return acc;\n    }, []);\n\nexport const createSplineFromPointArray = (points) => unflattenPointArray(getCurvePoints(flattenPointArray(points)));\n\n// // For array of points from segments, take only the first start\n// export const startPointsOnly = (points) => {\n//     const p = [];\n//     for (let i = 0; i < points.length; i += 2) {\n//         p.push(points[i]);\n//     }\n//     // last end point\n//     p.push(last(points));\n//     return p;\n// };\n// Using https://github.com/gdenisov/cardinal-spline-js\n","// https://github.com/gdenisov/cardinal-spline-js\n// https://github.com/gdenisov/cardinal-spline-js/blob/master/src/curve_calc.js\n/*!\tCurve calc function for canvas 2.3.1\n *\tEpistemex (c) 2013-2014\n *\tLicense: MIT\n */\n\n/**\n * Calculates an array containing points representing a cardinal spline through given point array.\n * Points must be arranged as: [x1, y1, x2, y2, ..., xn, yn].\n *\n * The points for the cardinal spline are returned as a new array.\n *\n * @param {Array} points - point array\n * @param {Number} [tension=0.5] - tension. Typically between [0.0, 1.0] but can be exceeded\n * @param {Number} [numOfSeg=20] - number of segments between two points (line resolution)\n * @param {Boolean} [close=false] - Close the ends making the line continuous\n * @returns {Float32Array} New array with the calculated points that was added to the path\n */\nexport const getCurvePoints = (points, tension, numOfSeg, close) => {\n    // options or defaults\n    tension = typeof tension === 'number' ? tension : 0.5;\n    numOfSeg = numOfSeg || 25;\n\n    let pts; // for cloning point array\n    let i = 1;\n    let l = points.length;\n    let rPos = 0;\n    const rLen = (l - 2) * numOfSeg + 2 + (close ? 2 * numOfSeg : 0);\n\n    if (rLen < 0) {\n        return [];\n    }\n\n    const res = new Float32Array(rLen);\n    const cache = new Float32Array((numOfSeg + 2) * 4);\n    let cachePtr = 4;\n\n    pts = points.slice(0);\n\n    if (close) {\n        pts.unshift(points[l - 1]); // insert end point as first point\n        pts.unshift(points[l - 2]);\n        pts.push(points[0], points[1]); // first point as last point\n    } else {\n        pts.unshift(points[1]); // copy 1. point and insert at beginning\n        pts.unshift(points[0]);\n        pts.push(points[l - 2], points[l - 1]); // duplicate end-points\n    }\n\n    // cache inner-loop calculations as they are based on t alone\n    cache[0] = 1; // 1,0,0,0\n\n    for (; i < numOfSeg; i++) {\n        const st = i / numOfSeg;\n        const st2 = st * st;\n        const st3 = st2 * st;\n        const st23 = st3 * 2;\n        const st32 = st2 * 3;\n\n        cache[cachePtr++] = st23 - st32 + 1; // c1\n        cache[cachePtr++] = st32 - st23; // c2\n        cache[cachePtr++] = st3 - 2 * st2 + st; // c3\n        cache[cachePtr++] = st3 - st2; // c4\n    }\n\n    cache[++cachePtr] = 1; // 0,1,0,0\n\n    // calc. points\n    parse(pts, cache, l);\n\n    if (close) {\n        // l = points.length;\n        pts = [];\n        pts.push(points[l - 4], points[l - 3], points[l - 2], points[l - 1]); // second last and last\n        pts.push(points[0], points[1], points[2], points[3]); // first and second\n        parse(pts, cache, 4);\n    }\n\n    function parse(pts, cache, l) {\n        for (var i = 2, t; i < l; i += 2) {\n            const pt1 = pts[i];\n            const pt2 = pts[i + 1];\n            const pt3 = pts[i + 2];\n            const pt4 = pts[i + 3];\n\n            const t1x = (pt3 - pts[i - 2]) * tension;\n            const t1y = (pt4 - pts[i - 1]) * tension;\n            const t2x = (pts[i + 4] - pt1) * tension;\n            const t2y = (pts[i + 5] - pt2) * tension;\n\n            for (t = 0; t < numOfSeg; t++) {\n                const c = t << 2; // t * 4;\n                const c1 = cache[c];\n                const c2 = cache[c + 1];\n                const c3 = cache[c + 2];\n                const c4 = cache[c + 3];\n\n                res[rPos++] = c1 * pt1 + c2 * pt3 + c3 * t1x + c4 * t2x;\n                res[rPos++] = c1 * pt2 + c2 * pt4 + c3 * t1y + c4 * t2y;\n            }\n        }\n    }\n\n    // add last point\n    l = close ? 0 : points.length - 2;\n    res[rPos++] = points[l];\n    res[rPos] = points[l + 1];\n\n    return res;\n};\n","import tinycolor from 'tinycolor2';\n\nlet isHiDPI = false;\nlet contextScale = 1;\n\nconst contextHistory = [];\n\nexport const isHiDPICanvas = (_) => isHiDPI;\nexport const currentContextScale = (_) => contextScale;\n\nexport const resizeCanvas = (canvas, context, width, height, scale) => {\n    contextScale = scale || window.devicePixelRatio;\n\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n\n    canvas.width = Math.floor(width * contextScale);\n    canvas.height = Math.floor(height * contextScale);\n\n    if (contextScale === 2) {\n        isHiDPI = true;\n        context.scale(1, 1);\n        // context.scale(2, 2); // not working\n    } else {\n        context.scale(contextScale, contextScale);\n    }\n};\n\nconst contextDefaults = {\n    strokeStyle: '#000',\n    fillStyle: '#000',\n    globalAlpha: 1,\n    lineWidth: 1,\n    lineCap: 'butt',\n    lineJoin: 'miter',\n    textAlign: 'left',\n    textBaseline: 'top',\n    globalCompositeOperation: 'source-over',\n};\n\nexport const setContext = (context) => (settings) => {\n    contextHistory.push(settings);\n    Object.keys(settings).forEach((k) => {\n        context[k] = settings[k];\n    });\n};\n\nexport const resetContext = (context) => {\n    setContext(context)(contextDefaults);\n    context.setLineDash([]);\n};\n\nexport const roundLines = (context) => (width, color) => {\n    setContext(context)({\n        lineWidth: width || context.lineWidth,\n        strokeStyle: color ? tinycolor(color).toRgbString() : context.strokeStyle,\n        lineCap: 'round',\n        lineJoin: 'round',\n    });\n};\n\nexport const squareLines = (context) => (width, color) =>\n    setContext(context)({\n        lineWidth: width || context.lineWidth,\n        strokeStyle: color ? tinycolor(color).toRgbString() : context.strokeStyle,\n        lineCap: 'butt',\n        lineJoin: 'miter',\n    });\n\n// https://www.rgraph.net/canvas/howto-antialias.html\nexport const sharpLines = (context) => context.translate(0.5, 0.5);\n\n// https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n// multiply, screen, overlay, soft-light, hard-light, color-dodge, color-burn, darken, lighten, difference, exclusion, hue, saturation, luminosity, color, add, subtract, average, negative\nexport const blendMode = (context) => (mode = 'source-over') => setContext(context)({ globalCompositeOperation: mode });\n\n// https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/filter\nexport const filter = (context) => (f = '') => setContext(context)({ filter: f });\n\nexport const strokeWeight = (context) => (w = 1) => setContext(context)({ lineWidth: w });\n\nexport const strokeColor = (context) => (color = '#000') =>\n    setContext(context)({ strokeStyle: tinycolor(color).toRgbString() });\n\nexport const strokeDash = (context) => (dash = []) => context.setLineDash(dash);\n\nexport const fillColor = (context) => (color = '#000') =>\n    setContext(context)({ fillStyle: tinycolor(color).toRgbString() });\n\nexport const clear = ({ width, height }, context) => (_) => context.clearRect(0, 0, width, height);\n\nexport const background = ({ width, height }, context) => (color = 'black') => {\n    context.fillStyle = tinycolor(color).toRgbString();\n    context.fillRect(0, 0, width, height);\n};\n","import { normalizeInverse } from '../math/math';\nimport { resetContext } from './canvas';\nimport { line } from './primatives';\nimport { pointDistance } from '../math/points';\n\n// TODO use pixel\nexport const particlePoint = (context) => ({ x, y, radius, color }) => {\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2, false);\n    context.fillStyle = color.toRgbString();\n    context.fill();\n};\n\nexport const particleRotated = (ctx, drawFn, particle, ...args) => {\n    const pSaveX = particle.x;\n    const pSaveY = particle.y;\n    particle.x = 0;\n    particle.y = 0;\n    ctx.save();\n    ctx.translate(pSaveX, pSaveY);\n    ctx.rotate(particle.heading);\n    drawFn(ctx)(particle, args);\n    ctx.restore();\n    particle.x = pSaveX;\n    particle.y = pSaveY;\n};\n\nexport const particleHistoryTrail = (context) => (particle) => {\n    const trailLen = particle.xHistory.length;\n    context.lineWidth = particle.radius;\n    const pColor = particle.color;\n    const aFade = (100 / trailLen) * 0.01;\n    let alpha = 1;\n    const sFade = (particle.radius * 2) / trailLen;\n    let stroke = particle.radius * 2;\n    for (let i = 0; i < trailLen; i++) {\n        const startX = i === 0 ? particle.x : particle.xHistory[i - 1];\n        const startY = i === 0 ? particle.y : particle.yHistory[i - 1];\n        line(context)(startX, startY, particle.xHistory[i], particle.yHistory[i], stroke);\n        pColor.setAlpha(alpha);\n        context.strokeStyle = pColor.toRgbString();\n        alpha -= aFade;\n        stroke -= sFade;\n    }\n};\n\nexport const connectParticles = (context) => (pArray, proximity, useAlpha = true) => {\n    const len = pArray.length;\n    for (let a = 0; a < len; a++) {\n        // all consecutive particles\n        for (let b = a; b < len; b++) {\n            const pA = pArray[a];\n            const pB = pArray[b];\n            const distance = pointDistance(pA, pB);\n            if (distance < proximity) {\n                const pColor = pA.color;\n                if (useAlpha) {\n                    pColor.setAlpha(normalizeInverse(0, proximity, distance));\n                }\n                context.strokeStyle = pColor.toHslString();\n                line(context)(pA.x, pA.y, pB.x, pB.y, 0.5);\n            }\n        }\n    }\n    resetContext(context);\n};\n","import tinycolor from 'tinycolor2';\nimport * as cnvs from './canvas';\nimport { snapNumber, TAU } from '../math/math';\n\nexport const pixel = (context) => (x, y, color = 'black', mode = 'square', size) => {\n    size = size || cnvs.currentContextScale();\n    context.beginPath();\n    context.fillStyle = tinycolor(color).toRgbString();\n    if (mode === 'circle') {\n        context.beginPath();\n        context.arc(x, y, size, 0, Math.PI * 2, false);\n        context.fill();\n    } else {\n        context.fillRect(x, y, size, size);\n    }\n    context.closePath();\n};\n\n// linecap = butt, round, square\nexport const line = (context) => (x1, y1, x2, y2, strokeWidth, linecap) => {\n    context.beginPath();\n    // color = 'black',\n    // context.strokeStyle = tinycolor(color).toRgbString();\n    if (strokeWidth) context.lineWidth = strokeWidth;\n    if (linecap) context.lineCap = linecap;\n\n    context.moveTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.stroke();\n    context.closePath();\n};\n\nexport const lineAtAngle = (context) => (x1, y1, angle, length, strokeWidth, linecap) => {\n    const theta = (Math.PI * angle) / 180.0;\n    const x2 = x1 + length * Math.cos(theta);\n    const y2 = y1 + length * Math.sin(theta);\n    line(context)(x1, y1, x2, y2, strokeWidth, linecap);\n};\n\nexport const circleOld = (context) => (strokeWidth, x, y, radius, color) => {\n    context.beginPath();\n    if (color) {\n        context.strokeStyle = tinycolor(color).toRgbString();\n    }\n    context.lineWidth = strokeWidth;\n\n    context.arc(x, y, radius, 0, Math.PI * 2, false);\n    // context.fillStyle = 'rgba(255,255,255,.1)';\n    // context.fill();\n    context.stroke();\n    context.closePath();\n};\n\nexport const circle = (context) => (x, y, radius, color) => {\n    context.beginPath();\n    if (color) {\n        context.strokeStyle = tinycolor(color).toRgbString();\n    }\n\n    context.arc(x, y, radius, 0, TAU, false);\n    context.stroke();\n    context.closePath();\n};\n\nexport const circleFilled = (context) => (x, y, radius, color) => {\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2, false);\n    context.fillStyle = tinycolor(color).toRgbString();\n    context.fill();\n    context.closePath();\n};\n\nexport const rect = (context) => (x, y, w, h, strokeWidth, color) => {\n    context.beginPath();\n    if (color) {\n        context.strokeStyle = tinycolor(color).toRgbString();\n    }\n    if (strokeWidth) {\n        context.lineWidth = strokeWidth;\n    }\n\n    context.rect(x, y, w, h);\n    context.stroke();\n    context.closePath();\n};\n\nexport const rectFilled = (context) => (x, y, w, h, color = 'white') => {\n    context.beginPath();\n    context.fillStyle = tinycolor(color).toRgbString();\n    context.fillRect(x, y, w, h);\n    context.closePath();\n};\n\nexport const squareFilled = (context) => (x, y, size, color) => {\n    rectFilled(context)(x, y, size, size, color);\n};\n\nexport const drawTriangleFilled = (context) => (x, y, size, color) => {\n    const half = size / 2;\n    context.beginPath();\n    context.moveTo(x - half, y - half);\n    context.lineTo(x + half, y);\n    context.lineTo(x - half, y + half);\n    context.fillStyle = color.toRgbString();\n    context.fill();\n    context.closePath();\n};\n\n// https://www.scriptol.com/html5/canvas/rounded-rectangle.php\n// TODO center on x,y\nexport const quadRectFilled = (context) => (x, y, w, h, color) => {\n    const mx = x + w / 2;\n    const my = y + h / 2;\n    context.beginPath();\n    // context.strokeStyle = 'green';\n    // context.lineWidth = '4';\n    context.fillStyle = tinycolor(color).toRgbString();\n    context.moveTo(x, my);\n    context.quadraticCurveTo(x, y, mx, y);\n    context.quadraticCurveTo(x + w, y, x + w, my);\n    context.quadraticCurveTo(x + w, y + h, mx, y + h);\n    context.quadraticCurveTo(x, y + h, x, my);\n    // context.stroke();\n    context.fill();\n    context.closePath();\n};\n\n// https://www.scriptol.com/html5/canvas/rounded-rectangle.php\n// TODO center on x,y\nexport const roundRectFilled = (context) => (x, y, w, h, corner, color) => {\n    if (w < corner || h < corner) {\n        corner = Math.min(w, h);\n    }\n\n    const r = x + w;\n    const b = y + h;\n    context.beginPath();\n    // context.strokeStyle = 'green';\n    // context.lineWidth = '4';\n    context.fillStyle = tinycolor(color).toRgbString();\n    context.moveTo(x + corner, y);\n    context.lineTo(r - corner, y);\n    context.quadraticCurveTo(r, y, r, y + corner);\n    context.lineTo(r, y + h - corner);\n    context.quadraticCurveTo(r, b, r - corner, b);\n    context.lineTo(x + corner, b);\n    context.quadraticCurveTo(x, b, x, b - corner);\n    context.lineTo(x, y + corner);\n    context.quadraticCurveTo(x, y, x + corner, y);\n    // context.stroke();\n    context.fill();\n    context.closePath();\n};\n\nexport const pixelAtPoints = (context) => (points, color = 'black', width = 1) => {\n    points.forEach((coords, i) => {\n        pixel(context)(coords[0], coords[1], color, 'circleOld', width);\n    });\n};\n\nexport const pointPathPA = (context) => (points, color = 'black', width = 1, close = false, drawPoint = false) => {\n    context.beginPath();\n    context.strokeStyle = tinycolor(color).clone().toRgbString();\n\n    context.lineWidth = width;\n    context.lineCap = 'round';\n    context.lineJoin = 'round';\n\n    points.forEach((coords, i) => {\n        if (i === 0) {\n            context.moveTo(coords[0], coords[1]);\n        } else {\n            context.lineTo(coords[0], coords[1]);\n        }\n    });\n    if (close) {\n        context.lineTo(points[0][0], points[0][1]);\n    }\n    context.stroke();\n    context.closePath();\n\n    if (drawPoint) {\n        points.forEach((coords, i) => {\n            if (drawPoint) {\n                circleFilled(context)(coords[0], coords[1], 3, 'red');\n            }\n        });\n    }\n};\n\nexport const polygonPA = (context) => (points, color = 'black', close = false, drawPoint = false) => {\n    context.beginPath();\n    context.fillStyle = tinycolor(color).clone().toRgbString();\n\n    points.forEach((coords, i) => {\n        if (i === 0) {\n            context.moveTo(coords[0], coords[1]);\n        } else {\n            context.lineTo(coords[0], coords[1]);\n        }\n    });\n    if (close) {\n        context.lineTo(points[0][0], points[0][1]);\n    }\n    context.fill();\n    context.closePath();\n\n    if (drawPoint) {\n        points.forEach((coords, i) => {\n            if (drawPoint) {\n                circleFilled(context)(coords[0], coords[1], 3, 'red');\n            }\n        });\n    }\n};\n\nexport const pointPathPO = (context) => (points, color = 'black', width = 1, close = false, drawPoint = false) => {\n    context.beginPath();\n    context.strokeStyle = tinycolor(color).clone().toRgbString();\n\n    context.lineWidth = width;\n    context.lineCap = 'round';\n    context.lineJoin = 'round';\n\n    points.forEach((coords, i) => {\n        if (i === 0) {\n            context.moveTo(coords.x, coords.y);\n        } else {\n            context.lineTo(coords.x, coords.y);\n        }\n    });\n    if (close) {\n        context.lineTo(points[0].x, points[0].y);\n    }\n    context.stroke();\n    context.closePath();\n\n    if (drawPoint) {\n        points.forEach((coords, i) => {\n            if (drawPoint) {\n                circleFilled(context)(coords.x, coords.y, 3, 'red');\n            }\n        });\n    }\n};\n\n/*\n// tl\narcQuarter(context)(square.x, square.y, arcRad, 0);\n// tr\narcQuarter(context)(square.x2, square.y, arcRad, Math.PI / 2);\n// bl\narcQuarter(context)(square.x, square.y2, arcRad, Math.PI * 1.5);\n// br\narcQuarter(context)(square.x, square.y2, arcRad, Math.PI);\n */\nexport const arcQuarter = (context) => (x, y, radius, startRadians, clockWise = false) => {\n    // context.strokeStyle = tinycolor(color).toRgbString();\n    // context.lineCap = 'butt';\n    // context.lineWidth = thickness;\n    const startR = snapNumber(Math.PI / 2, startRadians);\n    const endR = startR + Math.PI / 2;\n    context.beginPath();\n    context.arc(x, y, radius, startR, endR, clockWise);\n    context.stroke();\n    context.closePath();\n};\n","import { mapRange } from '../rndrgen/math/math';\nimport { Particle, createRandomParticleValues } from '../rndrgen/systems/Particle';\nimport { background } from '../rndrgen/canvas/canvas';\nimport { connectParticles, particlePoint } from '../rndrgen/canvas/particles';\nimport { createRandomNumberArray } from '../rndrgen/math/random';\n\nconst createGridPointsXY = (width, height, xMargin, yMargin, columns, rows) => {\n    const gridPoints = [];\n\n    const colStep = Math.round((width - xMargin * 2) / (columns - 1));\n    const rowStep = Math.round((height - yMargin * 2) / (rows - 1));\n\n    for (let col = 0; col < columns; col++) {\n        const x = xMargin + col * colStep;\n        for (let row = 0; row < rows; row++) {\n            const y = yMargin + row * rowStep;\n            gridPoints.push([x, y]);\n        }\n    }\n\n    return { points: gridPoints, columnWidth: colStep, rowHeight: rowStep };\n};\n\nexport const threeAttractors = () => {\n    const config = {\n        // width: 500,\n        // height: 500,\n        // fps: 24,\n    };\n\n    let numParticles;\n    const particlesArray = [];\n    let gridPoints = [];\n    const hue = 0;\n\n    let attractorDist;\n\n    let leftattractor;\n    let midattractor;\n    let rightattractor;\n\n    let canvasCenterX;\n    let canvasCenterY;\n    let centerRadius;\n\n    const setup = ({ canvas, context }) => {\n        canvasCenterX = canvas.width / 2;\n        canvasCenterY = canvas.height / 2;\n        centerRadius = canvas.height / 4;\n\n        attractorDist = canvas.width / 0.7;\n\n        leftattractor = { x: 0, y: canvas.height / 2, mass: 10, g: 3 };\n        midattractor = { x: canvas.width / 2, y: canvas.height / 2, mass: 50, g: 10 };\n        rightattractor = { x: canvas.width, y: canvas.height / 2, mass: 10, g: 3 };\n\n        gridPoints = createGridPointsXY(canvas.width, canvas.height, 100, 100, canvas.width / 50, canvas.height / 50)\n            .points;\n        numParticles = gridPoints.length;\n\n        for (let i = 0; i < numParticles; i++) {\n            const props = createRandomParticleValues(canvas);\n            props.x = gridPoints[i][0];\n            props.y = gridPoints[i][1];\n            props.velocityX = 0;\n            props.velocityY = 0;\n            props.mass = 1;\n            props.radius = 1; // randomNumberBetween(10, 30);\n            props.spikes = createRandomNumberArray(20, 0, 360);\n\n            const h = mapRange(0, canvas.width, 0, 90, props.x);\n            const s = 100; // lerpRange(0,10,0,100,prop.radius);\n            const l = 50; // lerpRange(0,10,25,75,prop.radius);\n            props.color = `hsla(${h},${s}%,${l}%,0.1)`;\n\n            // props.color = { r: 0, g: 0, b: 0, a: 0.1 };\n\n            particlesArray.push(new Particle(props));\n        }\n\n        background(canvas, context)('white');\n    };\n\n    const draw = ({ canvas, context, mouse }) => {\n        // background(canvas, context)({ r: 255, g: 255, b: 255, a: 0.001 });\n        for (let i = 0; i < numParticles; i++) {\n            particlesArray[i].attract(leftattractor, -1, attractorDist);\n            particlesArray[i].attract(midattractor, 1, attractorDist);\n            particlesArray[i].attract(rightattractor, -1, attractorDist);\n\n            particlesArray[i].velocity = particlesArray[i].velocity.limit(10);\n\n            particlesArray[i].updatePosWithVelocity();\n            // edgeBounce(canvas, particlesArray[i]);\n            particlePoint(context)(particlesArray[i]);\n        }\n        connectParticles(context)(particlesArray, 50, false);\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import sourcePng from '../../media/images/hi1.png';\nimport { clear, background } from '../rndrgen/canvas/canvas';\nimport { createRandomParticleValues, edgeWrap, Particle } from '../rndrgen/systems/Particle';\nimport { particlePoint } from '../rndrgen/canvas/particles';\nimport { randomNumberBetween } from '../rndrgen/math/random';\n\nconst getImageDataFromImage = (context) => (image) => {\n    context.drawImage(image, 0, 0);\n    return context.getImageData(0, 0, image.width, image.width);\n};\n\nconst getImageDataColor = (imageData, x, y) => ({\n    r: imageData.data[y * 4 * imageData.width + x * 4],\n    g: imageData.data[y * 4 * imageData.width + x * 4 + 1],\n    b: imageData.data[y * 4 * imageData.width + x * 4 + 2],\n    a: imageData.data[y * 4 * imageData.width + x * 4 + 3],\n});\n\nexport const hiImage01 = (_) => {\n    const config = {\n        width: 600,\n        height: 600,\n    };\n\n    let imageZoomFactor;\n    const png = new Image();\n    png.src = sourcePng;\n    let imageData;\n\n    const numParticles = 500;\n    const particlesArray = [];\n    const particleColor = { r: 252, g: 3, b: 152 };\n\n    const setup = ({ canvas, context }) => {\n        imageData = getImageDataFromImage(context)(png);\n        clear(canvas, context)();\n        imageZoomFactor = canvas.width / imageData.width;\n\n        for (let i = 0; i < numParticles; i++) {\n            const props = createRandomParticleValues(canvas);\n            props.radius = randomNumberBetween(1, 5);\n            props.color = particleColor;\n            if (i % 2) {\n                props.x = 0;\n            } else {\n                props.x = canvas.width;\n            }\n            particlesArray.push(new Particle(props));\n        }\n\n        background(canvas, context)({ r: 255, g: 255, b: 0 });\n    };\n\n    const draw = ({ canvas, context, mouse }) => {\n        background(canvas, context)({ r: 255, g: 255, b: 0, a: 0.004 });\n\n        for (let i = 0; i < numParticles; i++) {\n            particlesArray[i].updatePosWithVelocity();\n            edgeWrap(canvas, particlesArray[i]);\n\n            const pxColor = getImageDataColor(\n                imageData,\n                Math.round(particlesArray[i].x / imageZoomFactor),\n                Math.round(particlesArray[i].y / imageZoomFactor)\n            );\n\n            if (pxColor.r > 250) {\n                particlesArray[i].drag(0.001);\n                particlesArray[i].color = { r: 3, g: 227, b: 252 };\n            } else {\n                particlesArray[i].color = particleColor;\n            }\n\n            particlePoint(context)(particlesArray[i]);\n        }\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","module.exports = require('./bundle-url').getBundleURL() + \"hi1.b86a235f.png\"","\"use strict\";\n\n/* globals document:readonly */\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","import tinycolor from 'tinycolor2';\nimport { background } from '../rndrgen/canvas/canvas';\nimport { ratio, orientation, scale } from '../rndrgen/sketch';\nimport { mapRange } from '../rndrgen/math/math';\nimport { randomNumberBetween } from '../rndrgen/math/random';\nimport { ribbonSegmented, ribbonSegment } from '../rndrgen/canvas/ribbon';\nimport { splatter } from '../scratch/shapes';\nimport { cliffordAttractor, simplexNoise2d, simplexNoise3d } from '../rndrgen/math/attractors';\nimport { nicePalette } from '../rndrgen/color/palettes';\n\n/*\nOriginal inspiration\nChurn by Kenny Vaden\nhttps://www.reddit.com/r/generative/comments/lq8r11/churn_r_code/\n */\n\nconst drawDots = (context, path, yorigin, sourceColor, scale, stroke = false) => {\n    let color = sourceColor.clone();\n\n    path.forEach((point) => {\n        const rnd = randomNumberBetween(0, yorigin);\n        if (rnd < 2) {\n            let radius = randomNumberBetween(1, 2 * scale);\n            let quantity = 3;\n            if (rnd < 0.005) {\n                radius = randomNumberBetween(25 * scale, 50 * scale);\n                quantity = 1;\n                color = color.clone().darken(10);\n            } else {\n                color = color.clone().lighten(5).saturate(10);\n            }\n            // x, y, color, size, amount = 3, range = 20\n            splatter(context)(point[0], point[1], color.toRgbString(), radius, quantity, 35 * scale);\n        }\n    });\n\n    if (stroke) {\n        // context.strokeStyle = color.darken(70).toRgbString();\n        // context.lineWidth = 1;\n        // context.stroke();\n    }\n};\n\nexport const waves01b = () => {\n    const config = {\n        name: 'waves01b',\n        orientation: orientation.landscape,\n        // ratio: ratio.a3,\n        ratio: ratio.square,\n        // scale: scale.hidpi,\n        scale: scale.standard,\n    };\n\n    let canvasWidth;\n    let canvasHeight;\n    let canvasMiddle;\n    const renderScale = config.scale; // 1 or 2\n\n    const colorBackground = 'hsl(46, 75%, 70%)';\n    const colorTop = 'hsl(185, 100%, 18%)'; // 'hsl(350, 65%, 46%)';\n    const colorBottom = 'hsl(182, 100%, 29%)'; // 'hsl(185, 19%, 40%)';\n\n    const waveYValues = [];\n    let numWaveXPoints;\n    const waveDensity = renderScale;\n    let numWaveRows;\n\n    const startX = 0;\n    let maxX;\n    let startY = 0;\n    let maxY;\n    let time = 0;\n\n    const createNoiseValues = (idx, distance, frequency, amplitude) => {\n        const points = [];\n        for (let i = 0; i < numWaveXPoints; i++) {\n            const n = simplexNoise3d(i, distance, idx, frequency) * amplitude;\n            // const n = simplexNoise3d(i, idx, time, frequency) * amplitude;\n            // const n = simplexNoise2d(i, idx * 2, frequency) * amplitude;\n            points.push(n);\n        }\n\n        return points;\n    };\n\n    const createRow = (idx) => {\n        time += 1;\n        const mid = numWaveRows / 2;\n        const distFromCenter = Math.abs(mid - idx);\n        const frequency =\n            mapRange(0, mid, 1.25, 0.5, distFromCenter + randomNumberBetween(-5, 5)) *\n            (randomNumberBetween(9, 12) * 0.001);\n        const amplitude = mapRange(0, mid, 10, 20, distFromCenter * randomNumberBetween(0, 2));\n\n        return {\n            top: createNoiseValues(idx, distFromCenter, frequency, amplitude),\n            bottom: createNoiseValues(idx, distFromCenter, frequency, amplitude),\n        };\n    };\n\n    const setup = ({ canvas, context }) => {\n        canvasWidth = canvas.width;\n        canvasHeight = canvas.height;\n        maxX = canvas.width;\n        numWaveXPoints = canvas.width / 5;\n        canvasMiddle = canvas.height / 2;\n        numWaveRows = canvasHeight / waveDensity;\n        const yBufferSpace = canvasHeight / 7;\n        startY = yBufferSpace;\n        maxY = canvasHeight - yBufferSpace * 1.25;\n\n        for (let i = 0; i < numWaveRows; i++) {\n            waveYValues.push(createRow(i + 1));\n        }\n\n        background(canvas, context)(tinycolor(colorBackground).lighten(20));\n    };\n\n    const draw = ({ canvas, context }) => {\n        let currentY = startY;\n        const incrementX = Math.ceil((maxX - startX) / numWaveXPoints) + 1;\n        const incrementY = (maxY - startY) / numWaveRows;\n\n        const canvasFocal = (canvasHeight / 3) * 2;\n        const focalRange = canvasFocal * 0.75;\n\n        const maxWaveHeight = 40 * renderScale;\n        const minWaveHeight = 3;\n\n        const palette = nicePalette();\n\n        for (let i = 0; i < waveYValues.length; i++) {\n            const color = tinycolor\n                .mix(colorTop, colorBottom, mapRange(startY, maxY, 0, 100, currentY))\n                .brighten(15)\n                .spin(randomNumberBetween(-10, 10));\n\n            const distFromMiddle = Math.abs(canvasFocal - currentY);\n            color.spin(mapRange(0, focalRange, 20, -20, distFromMiddle));\n            color.brighten(mapRange(0, focalRange, 50, 0, distFromMiddle + randomNumberBetween(0, 100)));\n            color.darken(mapRange(0, canvasFocal, 0, 15, distFromMiddle + randomNumberBetween(0, 50)));\n            // color.saturate(mapRange(0, focalRange, 10, 0, distFromMiddle + randomNumberBetween(0, 100)));\n\n            const waveheight = mapRange(startY, maxY, maxWaveHeight, minWaveHeight, currentY);\n\n            const waveTop = [];\n            const waveBottom = [];\n            let currentX = 0;\n            for (let j = 0; j < numWaveXPoints; j++) {\n                waveTop.push([currentX, currentY + waveYValues[i].top[j]]);\n                waveBottom.push([currentX, currentY + waveYValues[i].bottom[j] + waveheight]);\n                currentX += incrementX;\n            }\n\n            context.strokeStyle = color.clone().darken(60).toRgbString();\n            context.lineWidth = renderScale;\n\n            ribbonSegment(context)(waveTop, waveBottom.reverse(), color, true, 0);\n            drawDots(context, waveTop, currentY, color, renderScale, false);\n            // ribbonSegmented(context)(waveTop, waveBottom, color, { segments: 15, gap: 0, colors: palette });\n\n            currentY += incrementY;\n        }\n\n        return -1;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import tinycolor from 'tinycolor2';\nimport { randomWholeBetween, oneOf } from '../math/random';\nimport { sumArray } from '../utils';\nimport { percentage } from '../math/math';\n\nexport const lowestYPA = (arry) =>\n    arry.reduce((acc, p) => {\n        if (p[1] < acc) {\n            acc = p[1];\n        }\n        return acc;\n    }, 0);\n\nexport const highestYPA = (arry) =>\n    arry.reduce((acc, p) => {\n        if (p[1] > acc) {\n            acc = p[1];\n        }\n        return acc;\n    }, 0);\n\nexport const ribbonSegment = (context) => (sideA, sideB, sourceColor, stroke = false, thickness = 1) => {\n    const segStartX = sideA[0][0];\n    const segStartY = sideA[0][1];\n    const segEndX = sideB[0][0] + thickness;\n    const segEndY = sideB[0][1] + thickness;\n\n    const color = sourceColor.clone();\n\n    const gradient = context.createLinearGradient(0, lowestYPA(sideA), 0, highestYPA(sideB) + thickness);\n    // const gradient = context.createLinearGradient(0, segStartY - thickness, 0, segEndY + thickness);\n    // gradient.addColorStop(0, color.toRgbString());\n    gradient.addColorStop(0.5, color.toRgbString());\n    gradient.addColorStop(1, color.clone().darken(5).saturate(10).toRgbString());\n\n    context.beginPath();\n    context.moveTo(segStartX, segStartY);\n\n    sideA.forEach((point) => {\n        context.lineTo(point[0], point[1]);\n    });\n\n    sideB.forEach((point) => {\n        context.lineTo(point[0], point[1] + thickness);\n    });\n\n    context.lineTo(segStartX, segStartY);\n\n    if (stroke) {\n        // context.strokeStyle = color.darken(70).toRgbString();\n        // context.lineWidth = 1;\n        context.stroke();\n    }\n\n    context.fillStyle = gradient;\n    context.fill();\n    context.closePath();\n};\n\n/*\nsideA and B are an array of points [[x,y], [x,y], ...] that are roughly parallel to each other\nsegments is a value between 1 and n determining how to break up the ribbon\n */\n\nexport const ribbonSegmented = (context) => (\n    sideA,\n    sideB,\n    color,\n    { segments, gap, colors },\n    stroke = false,\n    thickness = 0\n) => {\n    if (segments === 1) {\n        ribbonSegment(context)(sideA, sideB.reverse(), color, stroke, thickness);\n        return;\n    }\n\n    // calculate segment sizes based on random percentages of the line length\n    const segmentGap = gap || 0;\n    const minSegPct = 5;\n    const minSegLength = segmentGap + minSegPct;\n    const segmentLengths = [];\n    let lenPctLeft = 100 - minSegLength;\n    for (let k = 0; k < segments - 1; k++) {\n        if (lenPctLeft > minSegPct) {\n            const pct = randomWholeBetween(minSegLength, lenPctLeft / 2);\n            segmentLengths.push(percentage(sideA.length, pct));\n            lenPctLeft -= pct;\n        }\n    }\n    // add whatever is left to the end\n    segmentLengths.push(sideA.length - sumArray(segmentLengths));\n\n    // break up the sides in to points based on segment lengths\n    let pos = 0;\n    for (let i = 0; i < segmentLengths.length; i++) {\n        let end = pos + segmentLengths[i];\n        if (i < segmentLengths.length - 1) {\n            end -= segmentGap;\n        }\n\n        // TODO color is a random pick from segment colors\n\n        let rcolor = color;\n        if (colors) {\n            rcolor = tinycolor(oneOf(colors));\n        }\n\n        ribbonSegment(context)(sideA.slice(pos, end), sideB.slice(pos, end).reverse(), rcolor, stroke, thickness);\n        pos += segmentLengths[i];\n    }\n};\n","export const defaultValue = (obj, key, value) => (obj.hasOwnProperty(key) ? obj[key] : value);\n\nexport const first = (arry) => arry[0];\nexport const middle = (arry) => arry.slice(1, arry.length - 2);\nexport const last = (arry) => arry[arry.length - 1];\n\nexport const limitArrayLen = (max, arr) => {\n    const arrLength = arr.length;\n    if (arrLength > max) {\n        arr.splice(0, arrLength - max);\n    }\n    return arr;\n};\n\nexport const getArrayValuesFromStart = (arr, start, len) => {\n    const values = [];\n    let index = start;\n    for (let i = 0; i < len; i++) {\n        values.push(arr[index--]);\n        if (index < 0) index = arr.length - 1;\n    }\n    return values;\n};\n\n// Just getting an index by wrapping can be done w/ % https://benfrain.com/looping-infinitely-around-an-array-in-javascript/\nexport const getArrayValuesFromEnd = (arr, start, len) => {\n    const values = [];\n    let index = start;\n    for (let i = 0; i < len; i++) {\n        values.push(arr[index++]);\n        if (index === arr.length) index = 0;\n    }\n    return values;\n};\n\nexport const sumArray = (arry) => arry.reduce((a, b) => a + b);\nexport const averageNumArray = (arry) => arry.reduce((a, b) => a + b) / arry.length;\n\nexport const lowest = (arry) =>\n    arry.reduce((acc, v) => {\n        if (v < acc) {\n            acc = v;\n        }\n        return acc;\n    }, 0);\n\nexport const highest = (arry) =>\n    arry.reduce((acc, v) => {\n        if (v > acc) {\n            acc = v;\n        }\n        return acc;\n    }, 0);\n\nexport const getQueryVariable = (variable) => {\n    const query = window.location.search.substring(1);\n    const vars = query.split('&');\n    for (let i = 0; i < vars.length; i++) {\n        const pair = vars[i].split('=');\n        if (pair[0] === variable) {\n            return pair[1];\n        }\n    }\n    return false;\n};\n","import tinycolor from 'tinycolor2';\nimport { circleX, circleY, mapRange, pointOnCircle, TAU } from '../rndrgen/math/math';\nimport { circleFilled, line, pixel } from '../rndrgen/canvas/primatives';\nimport { randomNumberBetween, randomWholeBetween } from '../rndrgen/math/random';\n\n/*\nctx.lineWidth = oxbowWeight;\nctx.strokeStyle = oxbowColor.toRgbString();\nbezierCurveFromPoints(ctx)(arrayPointArrayToObjectArray(oxpoints));\n */\n// BUG it spikes Y pos\n// https://www.geeksforgeeks.org/how-to-draw-smooth-curve-through-multiple-points-using-javascript/\n// export const bezierCurveFromPoints = (context) => (points, f, t) => {\n//     if (typeof f === 'undefined') f = 0.3;\n//     if (typeof t === 'undefined') t = 0.6;\n//\n//     context.beginPath();\n//     context.moveTo(points[0].x, points[0].y);\n//\n//     let m = 0;\n//     let dx1 = 0;\n//     let dy1 = 0;\n//\n//     let preP = points[0];\n//\n//     for (let i = 1; i < points.length; i++) {\n//         const curP = points[i];\n//         const nexP = points[i + 1];\n//         let dx2;\n//         let dy2;\n//         if (nexP) {\n//             m = lineSlope(preP, nexP);\n//             dx2 = (nexP.x - curP.x) * -f;\n//             dy2 = dx2 * m * t;\n//         } else {\n//             dx2 = 0;\n//             dy2 = 0;\n//         }\n//\n//         context.bezierCurveTo(preP.x - dx1, preP.y - dy1, curP.x + dx2, curP.y + dy2, curP.x, curP.y);\n//\n//         dx1 = dx2;\n//         dy1 = dy2;\n//         preP = curP;\n//     }\n//     context.stroke();\n// };\n\n// Spikes is an array of angles\nexport const spikedCircle = (context) => ({ x, y, radius, color }, spikes, spikeLength = 5) => {\n    const circleStroke = 1;\n    const spikeStroke = 2;\n    context.strokeStyle = color.toRgbString();\n    context.lineWidth = circleStroke;\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2, false);\n    // context.fillStyle = 'rgba(255,255,255,.1)';\n    // context.fill();\n    context.stroke();\n    for (let s = 0; s < spikes.length; s++) {\n        const pointA = pointOnCircle(x, y, radius, spikes[s]);\n        const pointB = pointOnCircle(x, y, radius + spikeLength, spikes[s]);\n        context.strokeStyle = color.toRgbString();\n        line(context)(pointA.x, pointA.y, pointB.x, pointB.y, spikeStroke);\n    }\n};\n\nexport const DONTUSETHISpathRibbon = (context) => (path, color, thickness = 1, stroke = false) => {\n    // const rColor = tinycolor(color).clone();\n    // const gradient = context.createLinearGradient(0, startY, 0, maxY);\n    // gradient.addColorStop(0, colorLinesTop.toRgbString());\n    // gradient.addColorStop(1, colorLinesBottom.toRgbString());\n\n    context.beginPath();\n    context.moveTo(path[0], path[0]);\n    path.forEach((point, i) => {\n        const x = point[0];\n        const y = point[1];\n        context.lineTo(x, y);\n    });\n    path.reverse().forEach((point, i) => {\n        const x = point[0];\n        const y = point[1];\n        const distFromCenter = Math.abs(path.length / 2 - i);\n        const size = mapRange(0, path.length / 2, 1, thickness, distFromCenter);\n        context.lineTo(x + size, y + size);\n    });\n    context.closePath();\n\n    // if (stroke) {\n    //     context.strokeStyle = rColor.darken(70).toRgbString();\n    //     context.lineWidth = 0.75;\n    //     context.stroke();\n    // }\n\n    // context.fillStyle = gradient;\n    context.fillStyle = tinycolor(color).toRgbString();\n    context.fill();\n};\n\nexport const splatter = (context) => (x, y, color, size, amount = 3, range = 20) => {\n    for (let i = 0; i < amount; i++) {\n        const s = randomWholeBetween(size * 0.25, size * 3);\n        // circleOld dist\n        const radius = randomWholeBetween(0, range);\n        const angle = randomNumberBetween(0, TAU);\n        const xoff = radius * Math.cos(angle);\n        const yoff = radius * Math.sin(angle);\n        // square dist\n        // const xoff = randomWholeBetween(-range, range);\n        // const yoff = randomWholeBetween(-range, range);\n        circleFilled(context)(x + xoff, y + yoff, s, color);\n    }\n};\n\nconst lineCap = 'butt';\nconst lineJoin = 'miter';\n\nexport const turtleLineMode = (m = 'butt') => {\n    if (m === 'butt') {\n        lineCap = 'butt';\n        lineJoin = 'miter';\n    } else if (m === 'round') {\n        lineCap = 'round';\n        lineJoin = 'round';\n    }\n};\n\nexport const drawPointsTaper = (ctx) => (points, color = 'black', width = 1) => {\n    ctx.strokeStyle = tinycolor(color).clone().toRgbString();\n\n    const mid = points.length / 2;\n\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n\n    points.forEach((coords, i) => {\n        const dist = Math.abs(mid - i);\n        const w = mapRange(0, mid, width, 1, dist);\n        ctx.lineWidth = w;\n        ctx.beginPath();\n        ctx.moveTo(coords[0], coords[1]);\n        ctx.lineTo(coords[0], coords[1]);\n        ctx.stroke();\n    });\n};\n\nexport const circleAtPoint = (context) => (points, color = 'black', radius = 5) => {\n    points.forEach((coords) => {\n        circleFilled(context)(coords[0], coords[1], radius, color);\n    });\n};\n\nexport const variableCircleAtPoint = (context) => (points, color = 'black', radius = 5, freq = 10, amp = 2) => {\n    points.forEach((coords) => {\n        const v = Math.sin(coords[0] / freq) * amp;\n        circleFilled(context)(coords[0], coords[1], Math.abs(radius - v), color);\n    });\n};\n\nexport const drawSegment = (ctx) => (segments, color, weight, points = false) => {\n    ctx.lineCap = 'round';\n    // ctx.lineJoin = 'round';\n    ctx.strokeStyle = tinycolor(color).clone().toRgbString();\n    ctx.lineWidth = weight;\n    ctx.beginPath();\n    segments.forEach((seg, i) => {\n        if (i === 0) {\n            ctx.moveTo(seg.start.x, seg.start.y);\n        } else {\n            ctx.lineTo(seg.start.x, seg.start.y);\n        }\n        ctx.lineTo(seg.end.x, seg.end.y);\n    });\n    ctx.stroke();\n    if (points) {\n        segments.forEach((seg, i) => {\n            const rad = i === 0 || i === segments.length - 1 ? 3 : 1;\n            circleFilled(ctx)(seg.start.x, seg.start.y, rad, 'green');\n            circleFilled(ctx)(seg.end.x, seg.end.y, rad, 'red');\n        });\n    }\n};\n\nexport const drawSegmentTaper = (ctx) => (segments, color, maxWeight, minWeight = 1, points = false) => {\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    ctx.strokeStyle = tinycolor(color).clone().toRgbString();\n\n    const mid = segments.length / 2;\n\n    segments.forEach((seg, i) => {\n        const dist = Math.abs(mid - i);\n        const w = mapRange(0, mid, maxWeight, minWeight, dist);\n\n        ctx.beginPath();\n        ctx.lineWidth = w;\n        if (i === 0) {\n            ctx.moveTo(seg.start.x, seg.start.y);\n        } else {\n            ctx.lineTo(seg.start.x, seg.start.y);\n        }\n        ctx.lineTo(seg.end.x, seg.end.y);\n        ctx.stroke();\n    });\n\n    if (points) {\n        segments.forEach((seg, i) => {\n            const rad = i === 0 || i === segments.length - 1 ? 3 : 1;\n            circleFilled(ctx)(seg.start.x, seg.start.y, rad, 'green');\n            circleFilled(ctx)(seg.end.x, seg.end.y, rad, 'red');\n        });\n    }\n};\n\nconst horizontalSinWave = (ctx, startX, maxX, yoffset, pixelColor) => {\n    const freq = 5;\n    const amp = 15;\n    const step = 2;\n    let theta = 0;\n    for (let x = startX; x < maxX; x += step) {\n        const y = circleY(theta, amp, freq) + yoffset;\n        pixel(ctx)(x, y, pixelColor, 'circle', 2);\n        theta++;\n    }\n};\n\nconst verticalSinWave = (ctx, startX, maxX, yoffset, pixelColor) => {\n    const freq = 5;\n    const amp = 15;\n    const step = 2;\n    let theta = 0;\n    for (let y = startY; y < maxY; y += step) {\n        const x = circleY(theta, amp, freq) + xoffset;\n        pixel(ctx)(x, y, pixelColor, 'circle', 2);\n        theta++;\n    }\n};\n\nconst fullScreenSin = (xoffset, yoffset) => {\n    const freq = 30;\n    const amp = 5;\n    const step = 5;\n    let theta = 0;\n    for (let sx = startX; sx < maxX; sx += step) {\n        for (let sy = startY; sy < maxY; sy += step) {\n            const x = circleX(theta, amp, freq) + xoffset + sx;\n            const y = circleY(theta, amp, freq) + yoffset + sy;\n            plot(x + xoffset, y + yoffset);\n            theta++;\n        }\n    }\n};\n\n/*\n    https://www.desmos.com/calculator/rzwar3xxpy\n    y-x = amp * Math.sin((y+x)/freq)\n     */\nconst plotDiagSinWave = (xoffset, yoffset) => {\n    const freq = 30; // 30\n    const amp = 5; // 5\n    let y = 0;\n    const a = Math.PI / 3; // angle of the wave, 1 is 45\n    for (let x = 0; x < canvasWidth + 10; x++) {\n        const b = Math.sin(x / Math.PI) * 5;\n        // x = y - Math.sin(y+x)\n        y = amp * Math.sin((y + b) / freq) + x * a;\n        plot(x + xoffset, y + yoffset);\n    }\n};\n\nexport const debugShowAttractor = (context) => ({ x, y, mass, g }, mode, radius) => {\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2, false);\n    context.fillStyle = 'rgba(0,0,0,.1)';\n    context.fill();\n\n    context.beginPath();\n    context.arc(x, y, Math.sqrt(mass) * g, 0, Math.PI * 2, false);\n    context.fillStyle = mode === 1 ? 'rgba(0,255,0,.25)' : 'rgba(255,0,0,.25)';\n    context.fill();\n};\n\nconst plotFFPointLines = (num) => {\n    for (let i = 0; i < num; i++) {\n        const coords = createFFParticleCoords(noise, 0, randomWholeBetween(0, canvasMidY * 2), 2000, 1);\n        pointPathPA(ctx)(coords, tinycolor('rgba(0,0,0,.5'), 1);\n    }\n};\n\nexport const createFFParticleCoords = (fieldFn, startX, startY, length, fMag = 1, vlimit = 1) => {\n    const props = {\n        x: startX,\n        y: startY,\n        velocityX: 0,\n        velocityY: 0,\n        mass: 1,\n    };\n    const particle = new Particle(props);\n    const coords = [];\n    for (let i = 0; i < length; i++) {\n        const theta = fieldFn(particle.x, particle.y);\n        // theta = quantize(4, theta);\n        const force = uvFromAngle(theta).setMag(fMag);\n\n        particle.applyForce(force);\n        particle.velocity = particle.velocity.limit(vlimit);\n        particle.updatePosWithVelocity();\n        coords.push([particle.x, particle.y]);\n        particle.acceleration = new Vector(0, 0);\n    }\n    return coords;\n};\n","import { TAU } from './math';\nimport { create2dNoise, create3dNoise, randomNumberBetween } from './random';\n\nexport const simplexNoise2d = (x, y, f = 0.0005) => create2dNoise(x, y, 1, f) * TAU;\nexport const simplexNoise3d = (x, y, t, f = 0.002) => create3dNoise(x, y, t, 1, f) * TAU;\nexport const diagLines = (x, y) => (x + y) * 0.01 * TAU;\n// From https://medium.com/@bit101/flow-fields-part-i-3ebebc688fd8\nexport const sinField = (x, y) => (Math.sin(x * 0.01) + Math.sin(y * 0.01)) * TAU;\n\nconst attractorScale = 0.01;\nconst attractorVarA = randomNumberBetween(-2, 2);\nconst attractorVarB = randomNumberBetween(-2, 2);\nconst attractorVarC = randomNumberBetween(-2, 2);\nconst attractorVarD = randomNumberBetween(-2, 2);\n\n// http://paulbourke.net/fractals/clifford/\nexport const cliffordAttractor = (width, height, x, y, scale) => {\n    scale = scale || attractorScale;\n    x = (x - width / 2) * scale;\n    y = (y - height / 2) * scale;\n    const x1 = Math.sin(attractorVarA * y) + attractorVarC * Math.cos(attractorVarA * x);\n    const y1 = Math.sin(attractorVarB * x) + attractorVarD * Math.cos(attractorVarB * y);\n    return Math.atan2(y1 - y, x1 - x);\n};\n\n// http://paulbourke.net/fractals/peterdejong/\nexport const jongAttractor = (width, height, x, y, scale) => {\n    scale = scale || attractorScale;\n    x = (x - width / 2) * scale;\n    y = (y - height / 2) * scale;\n    const x1 = Math.sin(attractorVarA * y) - Math.cos(attractorVarB * x);\n    const y1 = Math.sin(attractorVarC * x) - Math.cos(attractorVarD * y);\n    return Math.atan2(y1 - y, x1 - x);\n};\n\nconst simplex2d = (x, y) => simplexNoise2d(x, y, 0.002);\nconst simplex3d = (x, y) => simplexNoise3d(x, y, time, 0.0005);\nconst clifford = (x, y, scale) => cliffordAttractor(canvas.width, canvas.height, x, y, scale);\nconst jong = (x, y, scale) => jongAttractor(canvas.width, canvas.height, x, y, scale);\n","import tinycolor from 'tinycolor2';\nimport * as nicepalettes from 'nice-color-palettes';\nimport { mapRange } from '../math/math';\nimport { oneOf, randomNormalNumberBetween, randomWholeBetween } from '../math/random';\n\nexport const arrayToTinyColor = (arry) => arry.map((c) => tinycolor(c));\n\n/*\nTODO - fn for this from grid-dither-image\nconst grey = image.averageGreyFromCell(p[0], p[1], grid.columnWidth, grid.rowHeight);\nconst amount = mapRange(0, 255, 1, 10, 255 - grey);\n */\n\n// hslFromRange(50, 90,270, v);\nexport const hslFromRange = (y1, x2, y2, v) => {\n    const h = mapRange(0, y1, x2, y2, v);\n    const s = 100;\n    const l = 50;\n    return tinycolor(`hsl(${h},${s}%,${l}%)`);\n};\n\nexport const brightest = (arry) => {\n    const colors = arrayToTinyColor(arry);\n    return colors.reduce((acc, c) => {\n        if (c.getBrightness() > acc.getBrightness()) {\n            acc = c;\n        }\n        return acc;\n    }, colors[0]);\n};\n\nexport const darkest = (arry) => {\n    const colors = arrayToTinyColor(arry);\n    return colors.reduce((acc, c) => {\n        if (c.getBrightness() < acc.getBrightness()) {\n            acc = c;\n        }\n        return acc;\n    }, colors[0]);\n};\n\nexport const bicPenBlue = tinycolor('hsl(250,79,29)').clone();\nexport const paperWhite = tinycolor('hsl(53,3,100)').clone();\n\n// hsl(46, 45%, 85%)\nexport const warmWhite = tinycolor('hsl(42, 14%, 86%)').clone();\nexport const warmPink = tinycolor('hsl(29, 42%, 86%)').clone();\n\nexport const coolGreyDark = tinycolor('#1f2933').clone();\n// hsl(43, 57%, 11%)\nexport const warmGreyDark = tinycolor('#27241d').clone();\n\nexport const palettes = {\n    greyWarm: [\n        '#faf97f',\n        '#e8e6e1',\n        '#d3cec4',\n        '#b8b2a7',\n        '#a39e93',\n        '#857f72',\n        '#625d52',\n        '#504a40',\n        '#423d33',\n        '#27241d',\n    ],\n    greyCool: [\n        '#f5f7fa',\n        '#e4e7eb',\n        '#cbd2d9',\n        '#9aa5b1',\n        '#7b8794',\n        '#616e7c',\n        '#52606d',\n        '#3e4c59',\n        '#323f4b',\n        '#1f2933',\n    ],\n    pop: ['#ed3441', '#ffd630', '#329fe3', '#154296', '#303030'],\n    '60s_psyc': ['#ffeb00', '#fc0019', '#01ff4f', '#ff01d7', '#5600cc', '#00edf5'],\n    '70s': ['#73BFA3', '#F2DBAE', '#F29829', '#D9631E', '#593C2C'],\n    '80s_pastells': ['#FF3F3F', '#FF48C4', '#F3EA5F', '#C04DF9', '#2BD1FC', '#38CEF6'],\n    '80s_pop': ['#FF82E2', '#70BAFF', '#FED715', '#0037B3', '#FE0879'],\n    '90s': ['#42C8B0', '#4575F3', '#6933B0', '#D36F88', '#FC8D45'],\n    retro_sunset: ['#FFD319', '#FF2975', '#F222FF', '#8C1EFF', '#FF901F'],\n    vapor_wave: ['#F6A3EF', '#50D8EC', '#DD6DFB', '#EECD69', '#6FEAE6'],\n    // https://www.colourlovers.com/palette/694737/Thought_Provoking\n    thought_provoking: [\n        'hsl(46, 75%, 70%)',\n        'hsl(10, 66%, 56%)',\n        'hsl(350, 65%, 46%)',\n        'hsl(336, 40%, 24%)',\n        'hsl(185, 19%, 40%)',\n    ],\n};\n\nexport const nicePalette = (_) => nicepalettes[randomWholeBetween(0, 99)];\nexport const palette = (_) => palettes[oneOf(Object.keys(palettes))];\n\nexport const get2Tone = (l = 10, d = 25) => {\n    const pal = nicePalette();\n    const light = brightest(pal).clone().lighten(l);\n    const dark = darkest(pal).clone().darken(d);\n    const text = light.clone().darken(15).desaturate(20);\n    return { palette, light, dark, text };\n};\n\n// Original implementation idea from Sebastian @void43544164\n// https://twitter.com/void43544164/status/1408133809384591366\n// Returns Tinycolors https://github.com/bgrins/TinyColor\nexport class Palette {\n    constructor(colorsArray) {\n        this.colors = arrayToTinyColor(colorsArray || nicePalette());\n    }\n\n    get brightest() {\n        return brightest(this.colors);\n    }\n\n    get darkest() {\n        return darkest(this.colors);\n    }\n\n    get length() {\n        return this.colors.length;\n    }\n\n    // TODO weighted random\n\n    oneOf() {\n        return oneOf(this.colors);\n    }\n\n    getAtIndex(index) {\n        const n = Math.abs(Math.round(index)) % this.colors.length;\n        return this.colors[n].clone();\n    }\n\n    get(index, variance = 0, alpha = 1) {\n        const c = this.getAtIndex(index);\n        if (variance > 0) {\n            c.spin(randomNormalNumberBetween(variance * -1, variance));\n        }\n        // TODO if a > 255 => a/255 ?\n        if (alpha < 1) {\n            c.setAlpha(alpha);\n        }\n        return c;\n    }\n}\n","module.exports = JSON.parse(\"[[\\\"#69d2e7\\\",\\\"#a7dbd8\\\",\\\"#e0e4cc\\\",\\\"#f38630\\\",\\\"#fa6900\\\"],[\\\"#fe4365\\\",\\\"#fc9d9a\\\",\\\"#f9cdad\\\",\\\"#c8c8a9\\\",\\\"#83af9b\\\"],[\\\"#ecd078\\\",\\\"#d95b43\\\",\\\"#c02942\\\",\\\"#542437\\\",\\\"#53777a\\\"],[\\\"#556270\\\",\\\"#4ecdc4\\\",\\\"#c7f464\\\",\\\"#ff6b6b\\\",\\\"#c44d58\\\"],[\\\"#774f38\\\",\\\"#e08e79\\\",\\\"#f1d4af\\\",\\\"#ece5ce\\\",\\\"#c5e0dc\\\"],[\\\"#e8ddcb\\\",\\\"#cdb380\\\",\\\"#036564\\\",\\\"#033649\\\",\\\"#031634\\\"],[\\\"#490a3d\\\",\\\"#bd1550\\\",\\\"#e97f02\\\",\\\"#f8ca00\\\",\\\"#8a9b0f\\\"],[\\\"#594f4f\\\",\\\"#547980\\\",\\\"#45ada8\\\",\\\"#9de0ad\\\",\\\"#e5fcc2\\\"],[\\\"#00a0b0\\\",\\\"#6a4a3c\\\",\\\"#cc333f\\\",\\\"#eb6841\\\",\\\"#edc951\\\"],[\\\"#e94e77\\\",\\\"#d68189\\\",\\\"#c6a49a\\\",\\\"#c6e5d9\\\",\\\"#f4ead5\\\"],[\\\"#3fb8af\\\",\\\"#7fc7af\\\",\\\"#dad8a7\\\",\\\"#ff9e9d\\\",\\\"#ff3d7f\\\"],[\\\"#d9ceb2\\\",\\\"#948c75\\\",\\\"#d5ded9\\\",\\\"#7a6a53\\\",\\\"#99b2b7\\\"],[\\\"#ffffff\\\",\\\"#cbe86b\\\",\\\"#f2e9e1\\\",\\\"#1c140d\\\",\\\"#cbe86b\\\"],[\\\"#efffcd\\\",\\\"#dce9be\\\",\\\"#555152\\\",\\\"#2e2633\\\",\\\"#99173c\\\"],[\\\"#343838\\\",\\\"#005f6b\\\",\\\"#008c9e\\\",\\\"#00b4cc\\\",\\\"#00dffc\\\"],[\\\"#413e4a\\\",\\\"#73626e\\\",\\\"#b38184\\\",\\\"#f0b49e\\\",\\\"#f7e4be\\\"],[\\\"#ff4e50\\\",\\\"#fc913a\\\",\\\"#f9d423\\\",\\\"#ede574\\\",\\\"#e1f5c4\\\"],[\\\"#99b898\\\",\\\"#fecea8\\\",\\\"#ff847c\\\",\\\"#e84a5f\\\",\\\"#2a363b\\\"],[\\\"#655643\\\",\\\"#80bca3\\\",\\\"#f6f7bd\\\",\\\"#e6ac27\\\",\\\"#bf4d28\\\"],[\\\"#00a8c6\\\",\\\"#40c0cb\\\",\\\"#f9f2e7\\\",\\\"#aee239\\\",\\\"#8fbe00\\\"],[\\\"#351330\\\",\\\"#424254\\\",\\\"#64908a\\\",\\\"#e8caa4\\\",\\\"#cc2a41\\\"],[\\\"#554236\\\",\\\"#f77825\\\",\\\"#d3ce3d\\\",\\\"#f1efa5\\\",\\\"#60b99a\\\"],[\\\"#5d4157\\\",\\\"#838689\\\",\\\"#a8caba\\\",\\\"#cad7b2\\\",\\\"#ebe3aa\\\"],[\\\"#8c2318\\\",\\\"#5e8c6a\\\",\\\"#88a65e\\\",\\\"#bfb35a\\\",\\\"#f2c45a\\\"],[\\\"#fad089\\\",\\\"#ff9c5b\\\",\\\"#f5634a\\\",\\\"#ed303c\\\",\\\"#3b8183\\\"],[\\\"#ff4242\\\",\\\"#f4fad2\\\",\\\"#d4ee5e\\\",\\\"#e1edb9\\\",\\\"#f0f2eb\\\"],[\\\"#f8b195\\\",\\\"#f67280\\\",\\\"#c06c84\\\",\\\"#6c5b7b\\\",\\\"#355c7d\\\"],[\\\"#d1e751\\\",\\\"#ffffff\\\",\\\"#000000\\\",\\\"#4dbce9\\\",\\\"#26ade4\\\"],[\\\"#1b676b\\\",\\\"#519548\\\",\\\"#88c425\\\",\\\"#bef202\\\",\\\"#eafde6\\\"],[\\\"#5e412f\\\",\\\"#fcebb6\\\",\\\"#78c0a8\\\",\\\"#f07818\\\",\\\"#f0a830\\\"],[\\\"#bcbdac\\\",\\\"#cfbe27\\\",\\\"#f27435\\\",\\\"#f02475\\\",\\\"#3b2d38\\\"],[\\\"#452632\\\",\\\"#91204d\\\",\\\"#e4844a\\\",\\\"#e8bf56\\\",\\\"#e2f7ce\\\"],[\\\"#eee6ab\\\",\\\"#c5bc8e\\\",\\\"#696758\\\",\\\"#45484b\\\",\\\"#36393b\\\"],[\\\"#f0d8a8\\\",\\\"#3d1c00\\\",\\\"#86b8b1\\\",\\\"#f2d694\\\",\\\"#fa2a00\\\"],[\\\"#2a044a\\\",\\\"#0b2e59\\\",\\\"#0d6759\\\",\\\"#7ab317\\\",\\\"#a0c55f\\\"],[\\\"#f04155\\\",\\\"#ff823a\\\",\\\"#f2f26f\\\",\\\"#fff7bd\\\",\\\"#95cfb7\\\"],[\\\"#b9d7d9\\\",\\\"#668284\\\",\\\"#2a2829\\\",\\\"#493736\\\",\\\"#7b3b3b\\\"],[\\\"#bbbb88\\\",\\\"#ccc68d\\\",\\\"#eedd99\\\",\\\"#eec290\\\",\\\"#eeaa88\\\"],[\\\"#b3cc57\\\",\\\"#ecf081\\\",\\\"#ffbe40\\\",\\\"#ef746f\\\",\\\"#ab3e5b\\\"],[\\\"#a3a948\\\",\\\"#edb92e\\\",\\\"#f85931\\\",\\\"#ce1836\\\",\\\"#009989\\\"],[\\\"#300030\\\",\\\"#480048\\\",\\\"#601848\\\",\\\"#c04848\\\",\\\"#f07241\\\"],[\\\"#67917a\\\",\\\"#170409\\\",\\\"#b8af03\\\",\\\"#ccbf82\\\",\\\"#e33258\\\"],[\\\"#aab3ab\\\",\\\"#c4cbb7\\\",\\\"#ebefc9\\\",\\\"#eee0b7\\\",\\\"#e8caaf\\\"],[\\\"#e8d5b7\\\",\\\"#0e2430\\\",\\\"#fc3a51\\\",\\\"#f5b349\\\",\\\"#e8d5b9\\\"],[\\\"#ab526b\\\",\\\"#bca297\\\",\\\"#c5ceae\\\",\\\"#f0e2a4\\\",\\\"#f4ebc3\\\"],[\\\"#607848\\\",\\\"#789048\\\",\\\"#c0d860\\\",\\\"#f0f0d8\\\",\\\"#604848\\\"],[\\\"#b6d8c0\\\",\\\"#c8d9bf\\\",\\\"#dadabd\\\",\\\"#ecdbbc\\\",\\\"#fedcba\\\"],[\\\"#a8e6ce\\\",\\\"#dcedc2\\\",\\\"#ffd3b5\\\",\\\"#ffaaa6\\\",\\\"#ff8c94\\\"],[\\\"#3e4147\\\",\\\"#fffedf\\\",\\\"#dfba69\\\",\\\"#5a2e2e\\\",\\\"#2a2c31\\\"],[\\\"#fc354c\\\",\\\"#29221f\\\",\\\"#13747d\\\",\\\"#0abfbc\\\",\\\"#fcf7c5\\\"],[\\\"#cc0c39\\\",\\\"#e6781e\\\",\\\"#c8cf02\\\",\\\"#f8fcc1\\\",\\\"#1693a7\\\"],[\\\"#1c2130\\\",\\\"#028f76\\\",\\\"#b3e099\\\",\\\"#ffeaad\\\",\\\"#d14334\\\"],[\\\"#a7c5bd\\\",\\\"#e5ddcb\\\",\\\"#eb7b59\\\",\\\"#cf4647\\\",\\\"#524656\\\"],[\\\"#dad6ca\\\",\\\"#1bb0ce\\\",\\\"#4f8699\\\",\\\"#6a5e72\\\",\\\"#563444\\\"],[\\\"#5c323e\\\",\\\"#a82743\\\",\\\"#e15e32\\\",\\\"#c0d23e\\\",\\\"#e5f04c\\\"],[\\\"#edebe6\\\",\\\"#d6e1c7\\\",\\\"#94c7b6\\\",\\\"#403b33\\\",\\\"#d3643b\\\"],[\\\"#fdf1cc\\\",\\\"#c6d6b8\\\",\\\"#987f69\\\",\\\"#e3ad40\\\",\\\"#fcd036\\\"],[\\\"#230f2b\\\",\\\"#f21d41\\\",\\\"#ebebbc\\\",\\\"#bce3c5\\\",\\\"#82b3ae\\\"],[\\\"#b9d3b0\\\",\\\"#81bda4\\\",\\\"#b28774\\\",\\\"#f88f79\\\",\\\"#f6aa93\\\"],[\\\"#3a111c\\\",\\\"#574951\\\",\\\"#83988e\\\",\\\"#bcdea5\\\",\\\"#e6f9bc\\\"],[\\\"#5e3929\\\",\\\"#cd8c52\\\",\\\"#b7d1a3\\\",\\\"#dee8be\\\",\\\"#fcf7d3\\\"],[\\\"#1c0113\\\",\\\"#6b0103\\\",\\\"#a30006\\\",\\\"#c21a01\\\",\\\"#f03c02\\\"],[\\\"#000000\\\",\\\"#9f111b\\\",\\\"#b11623\\\",\\\"#292c37\\\",\\\"#cccccc\\\"],[\\\"#382f32\\\",\\\"#ffeaf2\\\",\\\"#fcd9e5\\\",\\\"#fbc5d8\\\",\\\"#f1396d\\\"],[\\\"#e3dfba\\\",\\\"#c8d6bf\\\",\\\"#93ccc6\\\",\\\"#6cbdb5\\\",\\\"#1a1f1e\\\"],[\\\"#f6f6f6\\\",\\\"#e8e8e8\\\",\\\"#333333\\\",\\\"#990100\\\",\\\"#b90504\\\"],[\\\"#1b325f\\\",\\\"#9cc4e4\\\",\\\"#e9f2f9\\\",\\\"#3a89c9\\\",\\\"#f26c4f\\\"],[\\\"#a1dbb2\\\",\\\"#fee5ad\\\",\\\"#faca66\\\",\\\"#f7a541\\\",\\\"#f45d4c\\\"],[\\\"#c1b398\\\",\\\"#605951\\\",\\\"#fbeec2\\\",\\\"#61a6ab\\\",\\\"#accec0\\\"],[\\\"#5e9fa3\\\",\\\"#dcd1b4\\\",\\\"#fab87f\\\",\\\"#f87e7b\\\",\\\"#b05574\\\"],[\\\"#951f2b\\\",\\\"#f5f4d7\\\",\\\"#e0dfb1\\\",\\\"#a5a36c\\\",\\\"#535233\\\"],[\\\"#8dccad\\\",\\\"#988864\\\",\\\"#fea6a2\\\",\\\"#f9d6ac\\\",\\\"#ffe9af\\\"],[\\\"#2d2d29\\\",\\\"#215a6d\\\",\\\"#3ca2a2\\\",\\\"#92c7a3\\\",\\\"#dfece6\\\"],[\\\"#413d3d\\\",\\\"#040004\\\",\\\"#c8ff00\\\",\\\"#fa023c\\\",\\\"#4b000f\\\"],[\\\"#eff3cd\\\",\\\"#b2d5ba\\\",\\\"#61ada0\\\",\\\"#248f8d\\\",\\\"#605063\\\"],[\\\"#ffefd3\\\",\\\"#fffee4\\\",\\\"#d0ecea\\\",\\\"#9fd6d2\\\",\\\"#8b7a5e\\\"],[\\\"#cfffdd\\\",\\\"#b4dec1\\\",\\\"#5c5863\\\",\\\"#a85163\\\",\\\"#ff1f4c\\\"],[\\\"#9dc9ac\\\",\\\"#fffec7\\\",\\\"#f56218\\\",\\\"#ff9d2e\\\",\\\"#919167\\\"],[\\\"#4e395d\\\",\\\"#827085\\\",\\\"#8ebe94\\\",\\\"#ccfc8e\\\",\\\"#dc5b3e\\\"],[\\\"#a8a7a7\\\",\\\"#cc527a\\\",\\\"#e8175d\\\",\\\"#474747\\\",\\\"#363636\\\"],[\\\"#f8edd1\\\",\\\"#d88a8a\\\",\\\"#474843\\\",\\\"#9d9d93\\\",\\\"#c5cfc6\\\"],[\\\"#046d8b\\\",\\\"#309292\\\",\\\"#2fb8ac\\\",\\\"#93a42a\\\",\\\"#ecbe13\\\"],[\\\"#f38a8a\\\",\\\"#55443d\\\",\\\"#a0cab5\\\",\\\"#cde9ca\\\",\\\"#f1edd0\\\"],[\\\"#a70267\\\",\\\"#f10c49\\\",\\\"#fb6b41\\\",\\\"#f6d86b\\\",\\\"#339194\\\"],[\\\"#ff003c\\\",\\\"#ff8a00\\\",\\\"#fabe28\\\",\\\"#88c100\\\",\\\"#00c176\\\"],[\\\"#ffedbf\\\",\\\"#f7803c\\\",\\\"#f54828\\\",\\\"#2e0d23\\\",\\\"#f8e4c1\\\"],[\\\"#4e4d4a\\\",\\\"#353432\\\",\\\"#94ba65\\\",\\\"#2790b0\\\",\\\"#2b4e72\\\"],[\\\"#0ca5b0\\\",\\\"#4e3f30\\\",\\\"#fefeeb\\\",\\\"#f8f4e4\\\",\\\"#a5b3aa\\\"],[\\\"#4d3b3b\\\",\\\"#de6262\\\",\\\"#ffb88c\\\",\\\"#ffd0b3\\\",\\\"#f5e0d3\\\"],[\\\"#fffbb7\\\",\\\"#a6f6af\\\",\\\"#66b6ab\\\",\\\"#5b7c8d\\\",\\\"#4f2958\\\"],[\\\"#edf6ee\\\",\\\"#d1c089\\\",\\\"#b3204d\\\",\\\"#412e28\\\",\\\"#151101\\\"],[\\\"#9d7e79\\\",\\\"#ccac95\\\",\\\"#9a947c\\\",\\\"#748b83\\\",\\\"#5b756c\\\"],[\\\"#fcfef5\\\",\\\"#e9ffe1\\\",\\\"#cdcfb7\\\",\\\"#d6e6c3\\\",\\\"#fafbe3\\\"],[\\\"#9cddc8\\\",\\\"#bfd8ad\\\",\\\"#ddd9ab\\\",\\\"#f7af63\\\",\\\"#633d2e\\\"],[\\\"#30261c\\\",\\\"#403831\\\",\\\"#36544f\\\",\\\"#1f5f61\\\",\\\"#0b8185\\\"],[\\\"#aaff00\\\",\\\"#ffaa00\\\",\\\"#ff00aa\\\",\\\"#aa00ff\\\",\\\"#00aaff\\\"],[\\\"#d1313d\\\",\\\"#e5625c\\\",\\\"#f9bf76\\\",\\\"#8eb2c5\\\",\\\"#615375\\\"],[\\\"#ffe181\\\",\\\"#eee9e5\\\",\\\"#fad3b2\\\",\\\"#ffba7f\\\",\\\"#ff9c97\\\"],[\\\"#73c8a9\\\",\\\"#dee1b6\\\",\\\"#e1b866\\\",\\\"#bd5532\\\",\\\"#373b44\\\"],[\\\"#805841\\\",\\\"#dcf7f3\\\",\\\"#fffcdd\\\",\\\"#ffd8d8\\\",\\\"#f5a2a2\\\"]]\");","/*\nConvenience canvas sketch runner. Based on p5js\n\n\nconst variation = () => {\n    const config = {};\n\n    const setup = ({canvas, context}) => {\n        // create initial state\n    };\n\n    // will run every frame\n    const draw = ({canvas, context, mouse}) => {\n        // draw on every frame\n        return 1; // -1 to exit animation loop\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n\nTODO\n- [ ] merge screen shot code\n- [ ] Canvas Recorder  https://xosh.org/canvas-recorder/\n- [ ] coords of a mouse down to variation?\n- [ ] better touch input\n- [ ] svg https://github.com/canvg/canvg\n- [ ] great ideas here http://paperjs.org/features/\n*/\n\nimport Stats from 'stats.js';\nimport { isHiDPICanvas, resizeCanvas } from './canvas/canvas';\nimport { defaultValue } from './utils';\nimport { getRandomSeed } from './math/random';\nimport { roundToNearest, sin } from './math/math';\nimport { CanvasRecorder } from './canvas/CanvasRecorder';\n\nexport const orientation = {\n    portrait: 0,\n    landscape: 1,\n};\n\nexport const ratio = {\n    a4: 0.773, // 8.5x11\n    a3: 11 / 17, // 11x17\n    a3plus: 13 / 19, // 13x19\n    archd: 24 / 36, // arch d 24x36\n    golden: 0.6180339887498948482,\n    square: -1,\n    auto: 1,\n};\n\nexport const scale = {\n    standard: 1,\n    hidpi: 2,\n};\n\nexport const sketchSizeMode = {\n    js: 0,\n    css: 1,\n    sketch: 2,\n};\n\nexport const largePrint = {\n    ratio: ratio.a3plus,\n    scale: scale.hidpi,\n    multiplier: 1,\n    orientation: orientation.landscape,\n};\n\nexport const instagram = {\n    ratio: ratio.square,\n    scale: scale.standard,\n};\n\nexport const sketch = (canvasElId, smode = 0, debug) => {\n    const mouse = {\n        x: undefined,\n        y: undefined,\n        isDown: false,\n        radius: 100,\n    };\n\n    const sizeMode = smode;\n    const debugMode = debug;\n    let statsJS = null;\n    let hasStarted = false;\n    let fps = 0;\n    let drawRuns = 0;\n    let currentVariationFn;\n    let currentVariationRes;\n    let animationId;\n    let canvasRecorder;\n    let isRecording = false;\n    const pauseOnWindowBlur = true;\n    let isPaused = false;\n\n    const canvasSizeMultiple = 2;\n    const canvasSizeMultiplier = 0.9;\n    const canvas = document.getElementById(canvasElId);\n    const context = canvas.getContext('2d');\n\n    const getCanvas = (_) => canvas;\n    const getContext = (_) => context;\n    const getMouse = (_) => mouse;\n\n    const mouseDown = (evt) => {\n        mouse.isDown = true;\n    };\n\n    const mouseMove = (evt) => {\n        const mult = isHiDPICanvas() ? 2 : 1;\n        const canvasFrame = canvas.getBoundingClientRect();\n        mouse.x = (evt.x - canvasFrame.x) * mult;\n        mouse.y = (evt.y - canvasFrame.y) * mult;\n    };\n\n    const mouseUp = (evt) => {\n        mouse.isDown = false;\n    };\n\n    const mouseOut = (evt) => {\n        mouse.x = undefined;\n        mouse.y = undefined;\n        mouse.isDown = false;\n    };\n\n    const applyCanvasSize = (config, fraction) => {\n        if (sizeMode === sketchSizeMode.css) {\n            // const s = canvas.getBoundingClientRect();\n            // resizeCanvas(canvas, context, s.width, s.height, 1);\n            return;\n        }\n        if (sizeMode === sketchSizeMode.sketch) {\n            return;\n        }\n\n        const width = defaultValue(config, 'width', window.innerWidth);\n        const height = defaultValue(config, 'height', window.innerHeight);\n        let finalWidth = width;\n        let finalHeight = height;\n\n        const cfgMultiplier = defaultValue(config, 'multiplier', fraction);\n        const cfgOrientation = defaultValue(config, 'orientation', orientation.landscape);\n        const cfgRatio = defaultValue(config, 'ratio', ratio.auto);\n        const cfgScale = defaultValue(config, 'scale', scale.standard);\n\n        if (cfgRatio === ratio.auto) {\n            finalWidth = width;\n            finalHeight = height;\n        } else if (cfgRatio === ratio.square) {\n            const smallestWindowSize = Math.min(width, height) * cfgMultiplier;\n            finalWidth = smallestWindowSize;\n            finalHeight = smallestWindowSize;\n        } else if (cfgOrientation === orientation.landscape) {\n            let w = width;\n            let h = Math.round(cfgRatio * width);\n            const delta = h - height;\n            if (delta > 0) {\n                w -= delta;\n                h -= delta;\n            }\n            finalWidth = w * cfgMultiplier;\n            finalHeight = h * cfgMultiplier;\n        } else if (cfgOrientation === orientation.portrait) {\n            let w = Math.round(cfgRatio * height);\n            let h = height;\n            const delta = w - width;\n            if (delta > 0) {\n                w -= delta;\n                h -= delta;\n            }\n            finalWidth = w * cfgMultiplier;\n            finalHeight = h * cfgMultiplier;\n        }\n\n        finalWidth = roundToNearest(canvasSizeMultiple, finalWidth);\n        finalHeight = roundToNearest(canvasSizeMultiple, finalHeight);\n\n        resizeCanvas(canvas, context, finalWidth, finalHeight, cfgScale);\n\n        console.log(`Canvas size ${finalWidth} x ${finalHeight} at ${window.devicePixelRatio}dpr`);\n    };\n\n    /*\n    Passing in the sketch instance is jank. Refactor this to a class and just pass this\n     */\n    const run = (variation, sinstance) => {\n        currentVariationFn = variation;\n        currentVariationRes = currentVariationFn();\n        const sketchInstance = sinstance;\n\n        if (!statsJS && debugMode) {\n            statsJS = new Stats();\n            statsJS.showPanel(0); // 0: fps, 1: ms, 2: mb, 3+: custom\n            document.body.appendChild(statsJS.dom);\n        }\n\n        addEvents();\n\n        drawRuns = 0;\n        let currentDrawLimit;\n        let rendering = true;\n        let targetFpsInterval = 1000 / fps;\n        let lastAnimationFrameTime;\n\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        if (currentVariationRes.hasOwnProperty('config')) {\n            const { config } = currentVariationRes;\n            applyCanvasSize(config, canvasSizeMultiplier);\n            if (config.fps) {\n                fps = config.fps;\n                targetFpsInterval = 1000 / fps;\n            }\n            if (config.drawLimit > 0) {\n                currentDrawLimit = config.drawLimit;\n            }\n        } else {\n            // TODO check for sizeMode\n            resizeCanvas(canvas, context, window.innerWidth, window.innerHeight);\n        }\n\n        const checkDrawLimit = () => {\n            if (currentDrawLimit) {\n                return drawRuns < currentDrawLimit;\n            }\n            return true;\n        };\n\n        const startSketch = () => {\n            window.removeEventListener('load', startSketch);\n            hasStarted = true;\n\n            // default 1080p bps, 30fps\n            canvasRecorder = new CanvasRecorder(canvas);\n\n            currentVariationRes.setup({ canvas, context, sketchInstance });\n\n            const drawFrame = () => {\n                if (pauseOnWindowBlur && isPaused) {\n                    return 1;\n                }\n                drawRuns++;\n                if (statsJS) statsJS.begin();\n                const res = currentVariationRes.draw({ canvas, context, mouse });\n                if (statsJS) statsJS.end();\n                return res;\n            };\n\n            const render = () => {\n                const result = drawFrame();\n                if (result !== -1 && checkDrawLimit()) {\n                    animationId = requestAnimationFrame(render);\n                }\n            };\n\n            const renderAtFps = () => {\n                if (rendering) {\n                    animationId = window.requestAnimationFrame(renderAtFps);\n                }\n\n                const now = Date.now();\n                const elapsed = now - lastAnimationFrameTime;\n\n                if (elapsed > targetFpsInterval) {\n                    lastAnimationFrameTime = now - (elapsed % targetFpsInterval);\n                    const result = drawFrame();\n                    if (result === -1 || (currentDrawLimit && drawRuns >= currentDrawLimit)) {\n                        rendering = false;\n                    }\n                }\n            };\n\n            if (!fps) {\n                animationId = window.requestAnimationFrame(render);\n            } else {\n                lastAnimationFrameTime = Date.now();\n                animationId = window.requestAnimationFrame(renderAtFps);\n            }\n        };\n\n        if (!hasStarted) {\n            window.addEventListener('load', startSketch);\n        } else {\n            startSketch();\n        }\n    };\n\n    const stop = () => {\n        removeEvents();\n        window.cancelAnimationFrame(animationId);\n    };\n\n    const windowResize = (evt) => {\n        // clear and rerun to avoid artifacts\n        if (animationId) {\n            stop();\n            run(currentVariationFn);\n        }\n    };\n\n    const windowFocus = (evt) => {\n        if (pauseOnWindowBlur) isPaused = false;\n    };\n\n    const windowBlur = (evt) => {\n        if (pauseOnWindowBlur) isPaused = true;\n    };\n\n    const addEvents = (_) => {\n        window.addEventListener('mousedown', mouseDown);\n        window.addEventListener('touchstart', mouseDown);\n        window.addEventListener('mousemove', mouseMove);\n        window.addEventListener('touchmove', mouseMove);\n        window.addEventListener('mouseup', mouseUp);\n        window.addEventListener('touchend', mouseUp);\n        window.addEventListener('mouseout', mouseOut);\n        window.addEventListener('touchcancel', mouseOut);\n        window.addEventListener('resize', windowResize);\n        window.addEventListener('blur', windowBlur);\n        window.addEventListener('focus', windowFocus);\n    };\n\n    const removeEvents = (_) => {\n        window.removeEventListener('mousedown', mouseDown);\n        window.removeEventListener('touchstart', mouseDown);\n        window.removeEventListener('mousemove', mouseMove);\n        window.removeEventListener('touchmove', mouseMove);\n        window.removeEventListener('mouseup', mouseUp);\n        window.removeEventListener('touchend', mouseUp);\n        window.removeEventListener('mouseout', mouseOut);\n        window.removeEventListener('touchcancel', mouseOut);\n        window.removeEventListener('resize', windowResize);\n        window.removeEventListener('blur', windowBlur);\n        window.removeEventListener('focus', windowFocus);\n    };\n\n    const getVariationName = () => {\n        const seed = getRandomSeed();\n        let name = 'untitled';\n        if (\n            currentVariationRes &&\n            currentVariationRes.hasOwnProperty('config') &&\n            currentVariationRes.config.hasOwnProperty('name')\n        ) {\n            name = currentVariationRes.config.name;\n        }\n        return `sketch-${name}-${seed}`;\n    };\n\n    const saveCanvasCapture = (evt) => {\n        console.log('Saving capture', evt);\n        const imageURI = canvas.toDataURL('image/png');\n        evt.target.setAttribute('download', `${getVariationName()}.png`);\n        evt.target.href = imageURI;\n        evt.stopPropagation();\n        return false;\n    };\n\n    // https://xosh.org/canvas-recorder/\n    const saveCanvasRecording = (evt) => {\n        if (!canvasRecorder) {\n            console.error('No canvas recorder defined!');\n            return false;\n        }\n        if (isRecording) {\n            isRecording = false;\n            canvasRecorder.stop();\n            canvasRecorder.save(`${getVariationName()}.webm`);\n            console.log('Stopping recording');\n        } else {\n            isRecording = true;\n            canvasRecorder.start();\n            console.log('Starting recording');\n        }\n        evt.stopPropagation();\n        return false;\n    };\n\n    const onCanvasDragOver = (evt) => {\n        evt.preventDefault();\n    };\n\n    const onCanvasDragDrop = (imageDataHandler) => (evt) => {\n        evt.preventDefault();\n        evt.stopPropagation();\n        // console.log('drag drop', evt);\n        const dt = evt.dataTransfer;\n        const src = dt.files[0];\n        // loadImage(files[0], imageDataHandler);\n\n        //\tPrevent any non-image file type from being read.\n        if (!src.type.match(/image.*/)) {\n            console.error('The dropped file is not an image: ', src.type);\n            return;\n        }\n        const reader = new FileReader();\n        reader.onload = function (e) {\n            imageDataHandler(e.target.result);\n        };\n        reader.readAsDataURL(src);\n    };\n\n    const enableDragUpload = (imageDataHandler) => {\n        console.log('enabling drag upload!');\n        if (!canvas) {\n            console.warn('You need to init with a canvas el first!');\n            return;\n        }\n        // handling drag over is required to prevent browser from displaying dropped image\n        canvas.addEventListener('dragover', onCanvasDragOver, true);\n        canvas.addEventListener('drop', onCanvasDragDrop(imageDataHandler), true);\n    };\n\n    const disableDragUpload = (_) => {\n        canvas.removeEventListener('dragover', onCanvasDragOver);\n        canvas.removeEventListener('drop', onCanvasDragDrop(imageDataHandler));\n    };\n\n    return {\n        variationName: getVariationName,\n        canvas: getCanvas,\n        context: getContext,\n        mouse: getMouse,\n        run,\n        stop,\n        saveCanvasCapture,\n        saveCanvasRecording,\n        enableDragUpload,\n        disableDragUpload,\n    };\n};\n","// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n","// CanvasRecorder.js - smusamashah\n// To record canvas effitiently using MediaRecorder\n// https://webrtc.github.io/samples/src/content/capture/canvas-record/\n// Tweaks Matt Perkins, hello@mattperkins.me\n// - FPS option\n// - more Bitrates\n\n// https://stackoverflow.com/questions/65800159/how-do-you-determine-bitspersecond-for-media-recording\n// https://support.google.com/youtube/answer/1722171?hl=en#zippy=%2Cbitrate\nexport const bps = {\n    '4k': 40000000,\n    '2k': 16000000,\n    '1080p': 8000000,\n    '720p': 5000000,\n    '480p': 2500000,\n    '360p': 1000000,\n};\n\n// BITRATE = SCREEN_SIZE_VERTICAL x SCREEN_SIZE_HORIZONTAL X FPS X PIXEL_COLOR_DEPTH\n\nexport function CanvasRecorder(canvas, fps, video_bits_per_sec) {\n    this.start = startRecording;\n    this.stop = stopRecording;\n    this.save = download;\n\n    let recordedBlobs = [];\n    let supportedType = null;\n    let mediaRecorder = null;\n    const captureFPS = fps || 30;\n    const captureBPS = video_bits_per_sec || bps['1080p'];\n\n    const actualBPS = canvas.width * canvas.height * captureFPS * screen.colorDepth;\n\n    const stream = canvas.captureStream(captureFPS);\n    if (typeof stream === undefined || !stream) {\n        return;\n    }\n\n    const video = document.createElement('video');\n    video.style.display = 'none';\n\n    // console.log(`Canvas record, full ${actualBPS / 1000}kbps`);\n\n    function startRecording() {\n        const types = [\n            'video/webm',\n            'video/webm,codecs=vp9',\n            'video/vp8',\n            'video/webm;codecs=vp8',\n            'video/webm;codecs=daala',\n            'video/webm;codecs=h264',\n            'video/mpeg',\n        ];\n\n        for (const i in types) {\n            if (MediaRecorder.isTypeSupported(types[i])) {\n                supportedType = types[i];\n                break;\n            }\n        }\n        if (supportedType == null) {\n            console.log('No supported type found for MediaRecorder');\n        }\n\n        // https://w3c.github.io/mediacapture-record/MediaRecorder.html#mediarecorderoptions-section\n        const options = {\n            mimeType: supportedType,\n            videoBitsPerSecond: captureBPS,\n        };\n\n        recordedBlobs = [];\n        try {\n            mediaRecorder = new MediaRecorder(stream, options);\n        } catch (e) {\n            console.error('MediaRecorder is not supported by this browser.');\n            console.error('Exception while creating MediaRecorder:', e);\n            return;\n        }\n\n        // console.log('Created MediaRecorder', mediaRecorder, 'with options', options);\n        mediaRecorder.onstop = handleStop;\n        mediaRecorder.ondataavailable = handleDataAvailable;\n        mediaRecorder.start(100); // collect 100ms of data blobs\n        console.log(`MediaRecorder started at ${captureBPS / 1000}kbps, ${captureFPS}fps`);\n    }\n\n    function handleDataAvailable(event) {\n        if (event.data && event.data.size > 0) {\n            recordedBlobs.push(event.data);\n        }\n    }\n\n    function handleStop(event) {\n        // console.log('Recorder stopped: ', event);\n        const superBuffer = new Blob(recordedBlobs, { type: supportedType });\n        video.src = window.URL.createObjectURL(superBuffer);\n    }\n\n    function stopRecording() {\n        mediaRecorder.stop();\n        // console.log('Recorded Blobs: ', recordedBlobs);\n        video.controls = true;\n    }\n\n    function download(file_name) {\n        const name = file_name || 'recording.webm';\n        const blob = new Blob(recordedBlobs, { type: supportedType });\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.style.display = 'none';\n        a.href = url;\n        a.download = name;\n        document.body.appendChild(a);\n        a.click();\n        setTimeout(() => {\n            document.body.removeChild(a);\n            window.URL.revokeObjectURL(url);\n        }, 100);\n    }\n}\n","import { background, currentContextScale } from '../rndrgen/canvas/canvas';\nimport { round2 } from '../rndrgen/math/math';\nimport { brightest, darkest, nicePalette } from '../rndrgen/color/palettes';\nimport { ratio, scale } from '../rndrgen/sketch';\nimport { textFilled, setTextAlignLeftTop, textStyles } from '../rndrgen/canvas/text';\nimport { getGridCells } from '../rndrgen/math/grids';\nimport { create2dNoiseAbs, oneOf, randomWholeBetween } from '../rndrgen/math/random';\nimport { rect, pixel } from '../rndrgen/canvas/primatives';\nimport { pointDistance } from '../rndrgen/math/points';\n\nclass Curve {\n    constructor(x, y, radius, angle, speed, noise) {\n        this.x = x;\n        this.y = y;\n        this.originX = x;\n        this.originY = y;\n        this.radius = radius;\n        this.speed = speed || 1;\n        this.angle = angle || 0;\n        this.noise = noise;\n\n        // Randomize some noise possibilities\n        this.xa = oneOf([randomWholeBetween(1, 5), round2(this.noise)]);\n        this.xb = oneOf([randomWholeBetween(1, 5), round2(this.noise)]);\n        this.ya = oneOf([randomWholeBetween(1, 5), round2(this.noise)]);\n        this.yb = oneOf([randomWholeBetween(1, 5), round2(this.noise)]);\n    }\n\n    get size() {\n        return this.radius * 2;\n    }\n\n    get centerX() {\n        return this.originX + this.radius;\n    }\n\n    get centerY() {\n        return this.originY + this.radius;\n    }\n\n    get distFromCenter() {\n        return pointDistance({ x: this.centerX, y: this.centerY }, { x: this.x, y: this.y });\n    }\n}\n\nexport const lissajous01 = () => {\n    const config = {\n        name: 'lissajous01',\n        ratio: ratio.square,\n        scale: scale.hidpi,\n    };\n\n    const renderBatch = 10;\n    const curves = [];\n    let canvasCenterX;\n    let canvasCenterY;\n    let centerRadius;\n    const columns = 3;\n    let margin;\n    const palette = nicePalette();\n    const colorBackground = brightest(palette).clone().lighten(10);\n    const colorCurve = darkest(palette).clone().darken(25);\n    const colorText = colorBackground.clone().darken(15).desaturate(20);\n    let tick = 0;\n    let grid;\n\n    const setup = ({ canvas, context }) => {\n        canvasCenterX = canvas.width / 2;\n        canvasCenterY = canvas.height / 2;\n        centerRadius = canvas.height / 4;\n        margin = 50 * currentContextScale();\n        if (columns === 1) {\n            curves.push(new Curve(canvasCenterX, canvasCenterY, centerRadius, 0, 0.05));\n        } else {\n            grid = getGridCells(canvas.width, canvas.width, columns, columns, margin, margin / 2);\n            grid.points.forEach((point) => {\n                const x = point[0];\n                const y = point[1];\n                curves.push(new Curve(x, y, grid.columnWidth / 2, 0, 0.05, create2dNoiseAbs(x, y)));\n            });\n        }\n\n        background(canvas, context)(colorBackground);\n    };\n\n    // k is # of petals\n    // https://en.wikipedia.org/wiki/Rose_(mathematics)\n    // http://xahlee.info/SpecialPlaneCurves_dir/Rose_dir/rose.html\n    const roseX = (curve, k = 1, a = 1, b = 1) =>\n        curve.radius * Math.cos(k * curve.angle * a) * Math.cos(curve.angle * b);\n    const roseY = (curve, k = 1, a = 1, b = 1) =>\n        curve.radius * Math.cos(k * curve.angle * a) * Math.sin(curve.angle * b);\n\n    const linearYDown = (curve) => {\n        let { y } = curve;\n        if (++y > curve.size) y = 0;\n        return y;\n    };\n\n    const draw = ({ context }) => {\n        grid.points.forEach((point) => {\n            rect(context)(point[0], point[1], grid.columnWidth, grid.rowHeight, 1, colorText);\n        });\n        for (let b = 0; b < renderBatch; b++) {\n            for (let i = 0; i < curves.length; i++) {\n                // const idx = i + 1;\n                // const pointRad = 1;\n                const c = curves[i];\n\n                const k = round2(((i + 1) * 2) / 9);\n\n                const { xa } = c;\n                const { xb } = c;\n                const { ya } = c;\n                const { yb } = c;\n\n                // c.x = circleX(c);\n                // c.y = circleY(c);\n                c.x = roseX(c, k, xa, xb);\n                c.y = roseY(c, k, ya, yb);\n                // c.y = linearYDown(c);\n\n                // TODO, put a/b on the canvas so i can remember them!\n\n                c.angle += c.speed;\n\n                // const h = mapRange(0, c.radius, 180, 270, c.distFromCenter);\n                // const s = 100;\n                // const l = 30;\n                // const a = 0.75;\n                // const color = `hsla(${h},${s}%,${l}%,${a})`;\n\n                pixel(context)(c.x + c.centerX, c.y + c.centerY, colorCurve);\n\n                setTextAlignLeftTop(context);\n                textFilled(context)(\n                    `k=${k}, ${xa}, ${xb}, ${ya}, ${yb}`,\n                    c.originX,\n                    c.originY + c.size + 10,\n                    colorText,\n                    textStyles.size(10)\n                );\n            }\n            tick++;\n        }\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import tinycolor from 'tinycolor2';\nimport { currentContextScale } from './canvas';\n\nexport const setTextAlignLeftTop = (context) => {\n    context.textAlign = 'left';\n    context.textBaseline = 'top';\n};\nexport const setTextAlignAllCenter = (context) => {\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n};\n// https://www.cssfontstack.com/\nexport const textStyles = {\n    size: (s) => `${s * currentContextScale()}px \"Helvetica Neue\",Helvetica,Arial,sans-serif`,\n    sansHelvetica: (s) => `${s * currentContextScale()}px \"Helvetica Neue\",Helvetica,Arial,sans-serif`,\n    monoCourier: (s) =>\n        `${\n            s * currentContextScale()\n        }px \"Courier New\", Courier, \"Lucida Sans Typewriter\", \"Lucida Typewriter\", monospace`,\n    monoLucidia: (s) =>\n        `${\n            s * currentContextScale()\n        }px \"Lucida Sans Typewriter\", \"Lucida Console\", monaco, \"Bitstream Vera Sans Mono\", monospace`,\n    serifGeorgia: (s) => `${s * currentContextScale()}px Georgia, Times, \"Times New Roman\", serif`,\n    default: '16px \"Helvetica Neue\",Helvetica,Arial,sans-serif',\n    small: '12px \"Helvetica Neue\",Helvetica,Arial,sans-serif',\n};\n\nexport const textFilled = (context) => (text, x, y, color, style) => {\n    context.fillStyle = tinycolor(color).toRgbString();\n    context.font = style || textStyles.sansHelvetica(16);\n    context.fillText(text, x, y);\n    // https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics\n    return context.measureText(text);\n};\n","// [[x,y], ...]\nimport { point } from './points';\nimport { TAU } from './math';\n\n// use chaikinSmooth2 and check close and end offsets\nexport const circlePointsPA = (cx, cy, radius, step, startRot = 0, close = false) => {\n    step = step || Math.PI / 20;\n    const points = [];\n    for (let r = 0; r < TAU; r += step) {\n        const x = Math.cos(r + startRot) * radius + cx;\n        const y = Math.sin(r + startRot) * radius + cy;\n        points.push([x, y]);\n    }\n    if (close) {\n        const x = Math.cos(startRot) * radius + cx;\n        const y = Math.sin(startRot) * radius + cy;\n        points.push([x, y]);\n    }\n    return points;\n};\n\nexport const getPointsOnCircleOld = (offsetX, offsetY, radius, steps, close = false) => {\n    const startAngle = 270;\n    const maxAngle = 360 + startAngle;\n    const points = [];\n    for (let angle = startAngle; angle < maxAngle; angle += steps) {\n        const theta = angle * (Math.PI / 180);\n        const x = Math.cos(theta) * radius + offsetX;\n        const y = Math.sin(theta) * radius + offsetY;\n        points.push([x, y]);\n    }\n    if (close) {\n        const theta = maxAngle - 1 * (Math.PI / 180);\n        const x = Math.cos(theta) * radius + offsetX;\n        const y = Math.sin(theta) * radius + offsetY;\n        points.push([x, y]);\n    }\n    return points;\n};\n\nexport const getGridCells = (width, height, columns, rows, margin = 0, gutter = 0) => {\n    const points = [];\n\n    const colStep = Math.ceil((width - margin * 2 - gutter * (columns - 1)) / columns);\n    const rowStep = Math.ceil((height - margin * 2 - gutter * (rows - 1)) / rows);\n\n    for (let row = 0; row < rows; row++) {\n        const y = margin + row * rowStep + gutter * row;\n        for (let col = 0; col < columns; col++) {\n            const x = margin + col * colStep + gutter * col;\n            points.push([x, y]);\n        }\n    }\n\n    return { points, columnWidth: colStep, rowHeight: rowStep };\n};\n\nexport const getPointGrid = (x, y, w, h, cols = 2, rows = 2) => {\n    const points = [];\n    const colw = Math.round(w / (cols - 1));\n    const rowh = Math.round(h / (rows - 1));\n\n    for (let i = 0; i < cols; i++) {\n        for (let j = 0; j < rows; j++) {\n            const rx = i * colw + x;\n            const ry = j * rowh + y;\n            points.push(point(rx, ry));\n        }\n    }\n\n    return points;\n};\n","import tinycolor from 'tinycolor2';\nimport { mapRange, uvFromAngle, snapNumber, quantize } from '../rndrgen/math/math';\nimport { edgeWrap, Particle, createRandomParticleValues } from '../rndrgen/systems/Particle';\nimport { background } from '../rndrgen/canvas/canvas';\nimport { ratio, scale } from '../rndrgen/sketch';\nimport { Vector } from '../rndrgen/math/Vector';\nimport { simplexNoise3d } from '../rndrgen/math/attractors';\nimport { hslFromRange } from '../rndrgen/color/palettes';\nimport { randomWholeBetween } from '../rndrgen/math/random';\nimport { circleFilled } from '../rndrgen/canvas/primatives';\n\nexport const flowFieldParticles = () => {\n    const config = {\n        name: 'flowFieldParticles',\n        ratio: ratio.square,\n        scale: scale.standard,\n    };\n\n    const numParticles = 400;\n    const particlesArray = [];\n    const maxSize = 3;\n\n    let time = 0;\n\n    const createRandomParticle = (canvas) => {\n        const props = createRandomParticleValues(canvas);\n        props.x = randomWholeBetween(0, canvas.width);\n        props.y = randomWholeBetween(0, canvas.height);\n        props.velocityX = 0;\n        props.velocityY = 0;\n        return new Particle(props);\n    };\n\n    const setup = ({ canvas, context }) => {\n        for (let i = 0; i < numParticles; i++) {\n            particlesArray.push(createRandomParticle(canvas));\n        }\n\n        background(canvas, context)('rgba(50,50,50,1)');\n    };\n\n    const drawPixel = (canvas, context, force, particle, color, rad = 1) => {\n        particle.applyForce(force);\n        particle.velocity = particle.velocity.limit(1);\n        particle.updatePosWithVelocity();\n        edgeWrap(canvas, particle);\n        const pcolor = color || particle.color;\n        const x = snapNumber(maxSize * 2, particle.x);\n        const y = snapNumber(maxSize * 2, particle.y);\n        circleFilled(context)(x, y, rad, pcolor);\n        return true;\n    };\n\n    const drawParticles = ({ canvas, context }) => {\n        for (let i = 0; i < numParticles; i++) {\n            const particle = particlesArray[i];\n            const sNoise3d = simplexNoise3d(particle.x, particle.y, time, 0.002);\n            const theta = quantize(3, sNoise3d);\n            const force = uvFromAngle(theta);\n            const clr = hslFromRange(5, 270, 360, Math.abs(theta)).setAlpha(0.25);\n            const size = mapRange(0, 5, 1, maxSize, Math.abs(theta));\n\n            drawPixel(canvas, context, force, particle, clr, size);\n\n            particle.acceleration = new Vector(0, 0);\n        }\n    };\n\n    const drawFibers = ({ canvas, context }) => {\n        const particle = createRandomParticle(canvas);\n        const length = 200;\n        for (let i = 0; i < length; i++) {\n            const sNoise3d = simplexNoise3d(particle.x, particle.y, time, 0.002);\n            const theta = sNoise3d;\n            const force = uvFromAngle(theta);\n            const clr = 'rgba(0,0,0,.05)';\n\n            drawPixel(canvas, context, force, particle, clr, 1);\n\n            particle.acceleration = new Vector(0, 0);\n        }\n    };\n\n    const draw = ({ canvas, context }) => {\n        drawFibers({ canvas, context });\n        drawParticles({ canvas, context });\n        time += 0.01;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import tinycolor from 'tinycolor2';\n\nimport { background } from '../rndrgen/canvas/canvas';\nimport { ratio, scale } from '../rndrgen/sketch';\nimport { nicePalette, hslFromRange } from '../rndrgen/color/palettes';\nimport {\n    simplexNoise2d,\n    simplexNoise3d,\n    sinField,\n    cliffordAttractor,\n    jongAttractor,\n    diagLines,\n} from '../rndrgen/math/attractors';\nimport { mapRange, snapNumber } from '../rndrgen/math/math';\nimport { lineAtAngle } from '../rndrgen/canvas/primatives';\n\nconst TAU = Math.PI * 2;\n\nconst arc = (context, x, y, size, thick, color, theta) => {\n    const startR = snapNumber(Math.PI / 2, theta);\n    const endR = startR + Math.PI / 2;\n    const clockWise = true;\n    context.strokeStyle = tinycolor(color).toRgbString();\n    context.lineCap = 'round';\n    context.lineWidth = thick;\n    context.beginPath();\n    context.arc(x + size, y + size, size, startR, endR, clockWise);\n    context.stroke();\n};\n\nconst circle = (context, x, y, size, color, theta) => {\n    const startR = 0; // snapNumber(Math.PI / 2, theta);\n    const endR = TAU; // startR + Math.PI / 2;\n    const clockWise = true;\n    const rad = mapRange(0, 5, size * 0.2, size * 0.6, Math.abs(theta));\n\n    context.beginPath();\n    context.arc(x + size, y + size, rad, startR, endR, clockWise);\n    context.fillStyle = tinycolor(color).toRgbString();\n    context.fill();\n};\n\nconst line = (context, x, y, size, thick, color, theta) => {\n    const startR = snapNumber(Math.PI / 2, theta) + Math.PI / 2;\n    context.strokeStyle = tinycolor(color).toRgbString();\n    lineAtAngle(context)(x + size, y + size, startR, size * 2, thick, 'round');\n};\n\nexport const flowFieldArcs = () => {\n    const config = {\n        name: 'flowFieldArcs',\n        ratio: ratio.square,\n        scale: scale.standard,\n    };\n\n    let time = 0;\n    const palette = nicePalette();\n    const colorBackground = tinycolor('rgba(50,50,50,1)');\n\n    const setup = ({ canvas, context }) => {\n        background(canvas, context)(colorBackground);\n    };\n\n    const renderField = ({ width, height }, context, fn, cell) => {\n        const mid = cell / 2;\n        for (let x = 0; x < width; x += cell) {\n            for (let y = 0; y < height; y += cell) {\n                const theta = fn(x, y);\n                const arcColor = hslFromRange(5, 270, 360, Math.abs(theta));\n                const lineColor = hslFromRange(5, 180, 270, Math.abs(theta)).darken(10);\n                line(context, x, y, mid, mid * 0.5, lineColor, theta);\n                circle(context, x, y, mid, lineColor, theta);\n                arc(context, x, y, mid, mid * 0.5, arcColor, theta);\n                arc(context, x, y, mid, mid * 0.1, 'yellow', theta);\n            }\n        }\n    };\n\n    const draw = ({ canvas, context }) => {\n        background(canvas, context)(colorBackground.setAlpha(0.1));\n\n        // const clifford = (x, y) => cliffordAttractor(canvas.width, canvas.height, x, y);\n        // const jong = (x, y) => jongAttractor(canvas.width, canvas.height, x, y);\n        const noise = (x, y) => simplexNoise3d(x, y, time, 0.001);\n\n        renderField(canvas, context, noise, Math.round(canvas.width / 20));\n        time += 0.25;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import tinycolor from 'tinycolor2';\nimport { mapRange, uvFromAngle, snapNumber, quantize } from '../rndrgen/math/math';\nimport { Particle, createRandomParticleValues } from '../rndrgen/systems/Particle';\nimport { background } from '../rndrgen/canvas/canvas';\nimport { ratio, scale } from '../rndrgen/sketch';\nimport { Vector } from '../rndrgen/math/Vector';\nimport { hslFromRange, warmWhite } from '../rndrgen/color/palettes';\nimport { Bitmap } from '../rndrgen/canvas/Bitmap';\nimport sourcePng from '../../media/images/kristijan-arsov-woman-400.png';\nimport { renderField } from '../rndrgen/canvas/fields';\nimport { randomNumberBetween, randomWholeBetween } from '../rndrgen/math/random';\nimport { circleFilled } from '../rndrgen/canvas/primatives';\nimport { pointDistance } from '../rndrgen/math/points';\n\n/*\nhttps://marcteyssier.com/projects/flowfield/\nhttps://larrycarlson.com/collections/wavy-art-prints\n */\n\nconst TAU = Math.PI * 2;\n\nconst splatter = (context) => (x, y, color, size, amount = 3, range = 20) => {\n    for (let i = 0; i < amount; i++) {\n        const s = randomWholeBetween(size * 0.25, size * 3);\n        // circleOld dist\n        const radius = randomWholeBetween(0, range);\n        const angle = randomNumberBetween(0, TAU);\n        const xoff = radius * Math.cos(angle);\n        const yoff = radius * Math.sin(angle);\n        // square dist\n        // const xoff = randomWholeBetween(-range, range);\n        // const yoff = randomWholeBetween(-range, range);\n        circleFilled(context)(x + xoff, y + yoff, s, color);\n    }\n};\n\nconst createRandomParticle = (canvas) => {\n    const props = createRandomParticleValues(canvas);\n    props.x = randomWholeBetween(0, canvas.width);\n    props.y = randomWholeBetween(0, canvas.height);\n    props.velocityX = 0;\n    props.velocityY = 0;\n    return new Particle(props);\n};\n\nexport const flowFieldImage = () => {\n    const config = {\n        name: 'flowFieldImage',\n        ratio: ratio.square,\n        scale: scale.standard,\n    };\n\n    const maxSize = 5;\n    let time = 0;\n    const backgroundColor = warmWhite;\n    const image = new Bitmap(sourcePng);\n\n    const imageFlow = (x, y) => image.pixelThetaFromCanvas(x, y) * TAU;\n\n    const setup = ({ canvas, context }) => {\n        image.init(canvas, context);\n        background(canvas, context)(backgroundColor);\n        renderField(canvas, context, imageFlow, 'rgba(0,0,0,.15)', 50, 10);\n    };\n\n    const drawPixel = (canvas, context, particle, color, rad = 1) => {\n        const pcolor = color || particle.color;\n        const { x } = particle;\n        const { y } = particle;\n        circleFilled(context)(x, y, rad, pcolor);\n        return true;\n    };\n\n    const drawParticle = ({ canvas, context }, particle) => {\n        const theta = imageFlow(particle.x, particle.y);\n        const force = uvFromAngle(theta);\n        particle.applyForce(force);\n        particle.velocity = particle.velocity.limit(3);\n        particle.updatePosWithVelocity();\n\n        const fromCenter = pointDistance(particle, { x: canvas.width / 2, y: canvas.height / 2 });\n\n        const imagePixelColor = image.pixelColorFromCanvas(particle.x, particle.y);\n        const imagePixelBrightness = 256 - imagePixelColor.getBrightness();\n        const hslColor = hslFromRange(canvas.width, 90, 270, particle.x).spin(time);\n        const particleColor = tinycolor.mix(hslColor, imagePixelColor, 90);\n        particleColor.desaturate(mapRange(canvas.width / 3, canvas.width / 2, 0, 10, fromCenter));\n\n        const size = mapRange(0, 255, 0, maxSize, imagePixelBrightness);\n        const sizeMult = mapRange(canvas.width / 3, canvas.width / 2, 1, 5, fromCenter);\n\n        drawPixel(canvas, context, particle, particleColor, size * sizeMult);\n\n        if (Math.abs(theta) >= 5.7) {\n            splatter(context)(particle.x, particle.y, particleColor.brighten(10), 1, 3, 100);\n        }\n\n        particle.acceleration = new Vector(0, 0);\n    };\n\n    const drawFibers = ({ canvas, context }) => {\n        const particle = createRandomParticle(canvas);\n        const length = randomWholeBetween(50, 1000);\n        for (let i = 0; i < length; i++) {\n            drawParticle({ canvas, context }, particle);\n        }\n    };\n\n    const draw = ({ canvas, context }) => {\n        drawFibers({ canvas, context });\n        time += 0.05;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import tinycolor from 'tinycolor2';\nimport { clear } from './canvas';\nimport { mapRange } from '../math/math';\nimport { point } from '../math/points';\nimport { averageNumArray } from '../utils';\nimport { pixel, rectFilled } from './primatives';\nimport { initialize } from './EdgeDetect';\n\n/*\nimport sourcePng from '../../media/images/kristijan-arsov-woman-400.png';\nimport { Bitmap } from '../rndrgen/canvas/Bitmap';\n\nconst image = new Bitmap(sourcePng);\n\nimage.init(canvas, context); // in setup\n\n */\n\n// const createColorArrayFromImageData = (imageData) => {\n//     const data = [];\n//     for (let y = 0, { height } = imageData; y < height; y++) {\n//         for (let x = 0, { width } = imageData; x < width; x++) {\n//             data.push({ x, y, ...getImageColor(imageData, x, y) });\n//         }\n//     }\n//     return data;\n// };\n\n// const renderImage = () => {\n//     for (let x = startX; x < maxX; x++) {\n//         for (let y = startY; y < maxY; y++) {\n//             const color = image.pixelColorFromCanvas(x, y);\n//             pixel(ctx)(x, y, color, 'square', 1);\n//         }\n//     }\n// };\n\nexport class Bitmap {\n    constructor(src) {\n        this.scaleX = 1;\n        this.scaleY = 1;\n\n        this.image = new Image();\n        this.image.src = src;\n        this.imageData = undefined;\n    }\n\n    get width() {\n        return this.imageData.width;\n    }\n\n    get height() {\n        return this.imageData.height;\n    }\n\n    get data() {\n        return this.imageData;\n    }\n\n    toCanvasX(x) {\n        return Math.round(x * this.scaleX);\n    }\n\n    toCanvasY(y) {\n        return Math.round(y * this.scaley);\n    }\n\n    init(canvas, context, wipe = true) {\n        this.canvas = canvas;\n        this.context = context;\n        this.context.drawImage(this.image, 0, 0);\n\n        this.imageWidth = this.image.width || this.canvas.width;\n        this.imageHeight = this.image.height || this.canvas.height;\n\n        this.rawImageData = this.context.getImageData(0, 0, this.imageWidth, this.imageHeight);\n        this.refreshImageData();\n\n        this.scaleX = this.canvas.width / this.imageWidth;\n        this.scaleY = this.canvas.height / this.imageHeight;\n        if (wipe) clear(this.canvas, this.context);\n    }\n\n    refreshImageData() {\n        this.imageData = this.context.getImageData(0, 0, this.imageWidth, this.imageHeight);\n    }\n\n    resetImageData() {\n        this.context.putImageData(this.rawImageData, 0, 0);\n        this.refreshImageData();\n    }\n\n    pixelColorRaw(x, y) {\n        if (x < 0) x = 0;\n        if (y < 0) y = 0;\n        if (x >= this.width) x = this.width - 1;\n        if (y >= this.height) y = this.height - 1;\n        return {\n            r: this.imageData.data[y * 4 * this.imageData.width + x * 4],\n            g: this.imageData.data[y * 4 * this.imageData.width + x * 4 + 1],\n            b: this.imageData.data[y * 4 * this.imageData.width + x * 4 + 2],\n            a: this.imageData.data[y * 4 * this.imageData.width + x * 4 + 3],\n        };\n    }\n\n    pixelColor(x, y) {\n        return tinycolor(this.pixelColorRaw(x, y));\n    }\n\n    /*\n    Gray = 0.21R + 0.72G + 0.07B // Luminosity\n    Gray = (R + G + B) ÷ 3 // Average Brightness\n    Gray = 0.299R + 0.587G + 0.114B // rec601 standard\n    Gray = 0.2126R + 0.7152G + 0.0722B // ITU-R BT.709 standard\n    Gray = 0.2627R + 0.6780G + 0.0593B // ITU-R BT.2100 standard\n     */\n    // https://sighack.com/post/averaging-rgb-colors-the-right-way\n    pixelAverageGrey(x, y) {\n        const color = this.pixelColorRaw(x, y);\n        return Math.sqrt((color.r * color.r + color.g * color.g + color.b * color.b) / 3);\n    }\n\n    pixelTheta(x, y) {\n        // return this.pixelColor(x, y).getBrightness() / 256;\n        return this.pixelAverageGrey(x, y) / 256;\n    }\n\n    pixelColorFromCanvas(x, y) {\n        return this.pixelColor(Math.round(x / this.scaleX), Math.round(y / this.scaleY));\n    }\n\n    pixelAverageGreyFromCanvas(x, y) {\n        return this.pixelAverageGrey(Math.round(x / this.scaleX), Math.round(y / this.scaleY));\n    }\n\n    pixelThetaFromCanvas(x, y) {\n        return this.pixelTheta(Math.round(x / this.scaleX), Math.round(y / this.scaleY));\n    }\n\n    sizeFromPixelBrightness(x, y, size = 5, low = 0, max = 255) {\n        const pixelColor = this.pixelColorFromCanvas(x, y);\n        const brightness = 256 - pixelColor.getBrightness();\n        return mapRange(low, max, 0, size, brightness);\n    }\n\n    averageGreyFromCell(x, y, w, h, res = 2) {\n        const points = [];\n        for (let i = x; i < x + w; i += res) {\n            for (let k = y; k < y + h; k += res) {\n                points.push(this.pixelAverageGrey(Math.round(i / this.scaleX), Math.round(k / this.scaleY)));\n            }\n        }\n        return averageNumArray(points);\n    }\n\n    showToCanvas(res) {\n        const { width, height } = this.canvas;\n\n        res = res || width / 4;\n\n        const colw = width / res;\n        const rowh = height / res;\n\n        for (let i = 0; i < res; i++) {\n            for (let j = 0; j < res; j++) {\n                const x = i * colw;\n                const y = j * rowh;\n                rectFilled(this.context)(x, y, colw, rowh, this.pixelColorFromCanvas(x, y));\n            }\n        }\n    }\n\n    thresholdAsPoints(res, threshold = 128, inv = false) {\n        const testFn = (g) => (inv ? g < threshold : g > threshold);\n\n        const points = [];\n        const { width, height } = this.canvas;\n\n        const colw = width / res;\n        const rowh = height / res;\n\n        for (let i = 0; i < res; i++) {\n            for (let j = 0; j < res; j++) {\n                const x = i * colw;\n                const y = j * rowh;\n                if (testFn(this.pixelAverageGreyFromCanvas(x, y))) {\n                    points.push(point(x, y));\n                }\n            }\n        }\n\n        return points;\n    }\n\n    loadImageData(src, wipe = true) {\n        // const MAX_HEIGHT = 100;\n        this.image = new Image();\n        this.image.onload = function () {\n            console.log(this, this.context);\n            this.context.drawImage(this.image, 0, 0);\n            // TODO update raw as well\n            this.imageData = this.context.getImageData(0, 0, this.image.width, this.image.width);\n            this.scaleX = this.canvas.width / this.imageData.width;\n            this.scaleY = this.canvas.height / this.imageData.height;\n            if (wipe) clear(this.canvas, this.context);\n            // const canvas = document.getElementById('myCanvas');\n            // if (dropImage.height > MAX_HEIGHT) {\n            //     dropImage.width *= MAX_HEIGHT / dropImage.height;\n            //     dropImage.height = MAX_HEIGHT;\n            // }\n            // const ctx = canvas.getContext('2d');\n            // ctx.clearRect(0, 0, canvas.width, canvas.height);\n            // canvas.width = dropImage.width;\n            // canvas.height = dropImage.height;\n            // ctx.drawImage(dropImage, 0, 0, dropImage.width, dropImage.height);\n        };\n        this.image.src = src;\n    }\n\n    findEdgesCabbage(method = 0, blur = false) {\n        this.edge = initialize(this.canvas);\n\n        if (blur) {\n            this.edge.blur();\n            this.edge.greyScale();\n        }\n\n        switch (method) {\n            case 1:\n                this.edge.prewitt();\n                break;\n            case 2:\n                this.edge.roberts();\n                break;\n            default:\n                this.edge.sobel();\n        }\n        this.refreshImageData();\n    }\n\n    findEdges(threshold = 30, edgeColor = 'white', backColor = 'black') {\n        const test = (current, other) => current > other + threshold || current < other - threshold;\n\n        const showEdge = (x, y, diff) => {\n            const color = tinycolor.mix(edgeColor, backColor, mapRange(0, 255, 0, 100, diff));\n            pixel(this.context)(x, y, color);\n            // pixel(this.context)(x, y, edgeColor);\n        };\n\n        for (let y = 0; y < this.imageData.height; y++) {\n            for (let x = 0; x < this.imageData.width; x++) {\n                const current = this.pixelAverageGrey(x, y);\n\n                const left = this.pixelAverageGrey(x - 1, y);\n                const right = this.pixelAverageGrey(x + 1, y);\n                const top = this.pixelAverageGrey(x, y - 1);\n                const bottom = this.pixelAverageGrey(x, y + 1);\n\n                // if (test(current, left) || test(current, right) || test(current, top) || test(current, bottom)) {\n\n                if (current > left + threshold || current < left - threshold) {\n                    const diff = Math.abs(current - left);\n                    showEdge(x, y, diff);\n                } else if (current > right + threshold || current < right - threshold) {\n                    const diff = Math.abs(current - right);\n                    showEdge(x, y, diff);\n                } else if (current > top + threshold || current < top - threshold) {\n                    const diff = Math.abs(current - top);\n                    showEdge(x, y, diff);\n                } else if (current > bottom + threshold || current < bottom - threshold) {\n                    const diff = Math.abs(current - bottom);\n                    showEdge(x, y, diff);\n                } else {\n                    pixel(this.context)(x, y, backColor);\n                }\n            }\n        }\n\n        this.refreshImageData();\n    }\n}\n","/*\n\nOriginally from https://github.com/cmisenas/canny-edge-detection\nDemo http://canny-edge-detection.herokuapp.com/\n\nWorks the following way:\n1. Convert the canvas image to grayscale\n2. Smooth the image to reduce noise as much as possible. In this implementation, Gaussian filter can be applied\n    (max kernel size is 21).\n3. Determine the gradient intensity (amount of change) and direction for each pixel. This is done by convolving image\n    with the chosen filter. Currently, there are 3 operators you may choose from: Sobel, Prewitts, Cross\n4. Thin the resulting edges with non-maximum suppression.\n5. Remove weak/false edges. A process called hysteresis is used where there are two thresholds--high and low--to be\n    compared to each pixel.\n\nModifications from 7/15/21, Matt Perkins\n* Merged to one file\n* conversion to ES6 classes\n* bootstrap functions (bottom of file)\n */\n\nimport { Cabbage } from './Cabbage';\n\n// helpers.js\n\nconst sumArr = function (arr) {\n    // receives an array and returns sum\n    let result = 0;\n    arr.map(function (el, idx) {\n        result += /^\\s*function Array/.test(String(el.constructor)) ? sumArr(el) : el;\n    });\n    return result;\n};\n\nconst COLORS = {\n    RED: { r: 255, g: 0, b: 0 },\n    GREEN: { r: 0, g: 255, b: 0 },\n    BLUE: { r: 0, g: 0, b: 255 },\n    YELLOW: { r: 255, g: 255, b: 0 },\n    PINK: { r: 255, g: 0, b: 255 },\n    AQUA: { r: 0, g: 255, b: 255 },\n};\n\nconst roundDir = function (deg) {\n    // rounds degrees to 4 possible orientations: horizontal, vertical, and 2 diagonals\n    var deg = deg < 0 ? deg + 180 : deg;\n\n    if ((deg >= 0 && deg <= 22.5) || (deg > 157.5 && deg <= 180)) {\n        return 0;\n    }\n    if (deg > 22.5 && deg <= 67.5) {\n        return 45;\n    }\n    if (deg > 67.5 && deg <= 112.5) {\n        return 90;\n    }\n    if (deg > 112.5 && deg <= 157.5) {\n        return 135;\n    }\n};\n\nconst getPixelNeighbors = function (dir) {\n    const degrees = {\n        0: [\n            { x: 1, y: 2 },\n            { x: 1, y: 0 },\n        ],\n        45: [\n            { x: 0, y: 2 },\n            { x: 2, y: 0 },\n        ],\n        90: [\n            { x: 0, y: 1 },\n            { x: 2, y: 1 },\n        ],\n        135: [\n            { x: 0, y: 0 },\n            { x: 2, y: 2 },\n        ],\n    };\n    return degrees[dir];\n};\n\nconst getEdgeNeighbors = function (i, imgData, threshold, includedEdges) {\n    const neighbors = [];\n    const pixel = new Pixel(i, imgData.width, imgData.height);\n    for (let j = 0; j < pixel.neighbors.length; j++)\n        if (\n            imgData.data[pixel.neighbors[j]] >= threshold &&\n            (includedEdges === undefined || includedEdges.indexOf(pixel.neighbors[j]) === -1)\n        )\n            neighbors.push(pixel.neighbors[j]);\n\n    return neighbors;\n};\n\nconst createHistogram = function (cvs) {\n    const histogram = { g: [] };\n    let size = 256;\n    let total = 0;\n    const imgData = cvs.getCurrentImg();\n    while (size--) histogram.g[size] = 0;\n    cvs.map(function (x, y, pixelIndex, cvsIndex) {\n        histogram.g[imgData.data[cvsIndex]]++;\n        total++;\n    });\n    histogram.length = total;\n    return histogram;\n};\n\n// mean threshold works better than median threshold\n// however is sensitive to noise\n// works best when Gaussian blur is applied first\nconst calcMeanThreshold = function (cvs) {\n    const histogram = createHistogram(cvs);\n    let sum = 0;\n    const total = histogram.length;\n    histogram.g.forEach(function (e, i) {\n        sum += e * (i + 1);\n    });\n    return sum / total;\n};\n\n// does not work that well\n// median value is almost always 0 (black)\n// if background is bigger than foreground\nconst calcMedianThreshold = function (cvs) {\n    const histogram = createHistogram(cvs);\n    const m = Math.round(histogram.length / 2);\n    let n = 0;\n    let median;\n    histogram.g.some(function (e, i) {\n        n += e;\n        if (n >= m) {\n            median = i;\n            return true;\n        }\n        return false;\n    });\n    return median;\n};\n\nconst calcWeight = function (histogram, s, e) {\n    const total = histogram.reduce(function (i, j) {\n        return i + j;\n    }, 0);\n    const partHist = s === e ? [histogram[s]] : histogram.slice(s, e);\n    const part = partHist.reduce(function (i, j) {\n        return i + j;\n    }, 0);\n    return parseFloat(part, 10) / total;\n};\n\nconst calcMean = function (histogram, s, e) {\n    const partHist = s === e ? [histogram[s]] : histogram.slice(s, e);\n    let val = (total = 0);\n    partHist.forEach(function (el, i) {\n        val += (s + i) * el;\n        total += el;\n    });\n    return parseFloat(val, 10) / total;\n};\n\nconst calcBetweenClassVariance = function (weight1, mean1, weight2, mean2) {\n    return weight1 * weight2 * (mean1 - mean2) * (mean1 - mean2);\n};\n\nconst fastOtsu = function (canvas) {\n    const histogram = createHistogram(canvas);\n    const start = 0;\n    const end = histogram.g.length - 1;\n    let leftWeight;\n    let rightWeight;\n    let leftMean;\n    let rightMean;\n    const betweenClassVariances = [];\n    let max = -Infinity;\n    let threshold;\n\n    histogram.g.forEach(function (el, i) {\n        leftWeight = calcWeight(histogram.g, start, i);\n        rightWeight = calcWeight(histogram.g, i, end + 1);\n        leftMean = calcMean(histogram.g, start, i);\n        rightMean = calcMean(histogram.g, i, end + 1);\n        betweenClassVariances[i] = calcBetweenClassVariance(leftWeight, leftMean, rightWeight, rightMean);\n        if (betweenClassVariances[i] > max) {\n            max = betweenClassVariances[i];\n            threshold = i;\n        }\n    });\n\n    return threshold;\n};\n\n// filters.js\n\nconst calculateGray = function (pixel) {\n    return 0.3 * pixel.r + 0.59 * pixel.g + 0.11 * pixel.b;\n};\n\nconst generateKernel = function (sigma, size) {\n    const kernel = [];\n    const E = 2.718; // Euler's number rounded of to 3 places\n    for (let y = -(size - 1) / 2, i = 0; i < size; y++, i++) {\n        kernel[i] = [];\n        for (let x = -(size - 1) / 2, j = 0; j < size; x++, j++) {\n            // create kernel round to 3 decimal places\n            kernel[i][j] =\n                (1 / (2 * Math.PI * Math.pow(sigma, 2))) *\n                Math.pow(E, -(Math.pow(Math.abs(x), 2) + Math.pow(Math.abs(y), 2)) / (2 * Math.pow(sigma, 2)));\n        }\n    }\n    // normalize the kernel to make its sum 1\n    const normalize = 1 / sumArr(kernel);\n    for (let k = 0; k < kernel.length; k++) {\n        for (let l = 0; l < kernel[k].length; l++) {\n            kernel[k][l] = Math.round(normalize * kernel[k][l] * 1000) / 1000;\n        }\n    }\n    return kernel;\n};\n\nexport class Filters {\n    constructor(cvs) {\n        this.cabbageCnvs = cvs;\n    }\n\n    grayscale() {\n        const that = this;\n        let grayLevel;\n\n        console.time('Grayscale Time');\n        this.cabbageCnvs.map(function (x, y, pixelIndex, cvsIndex) {\n            grayLevel = calculateGray(that.cabbageCnvs.getPixel(cvsIndex));\n            that.cabbageCnvs.setPixel({ x, y }, grayLevel);\n        });\n        this.cabbageCnvs.setImg();\n        console.timeEnd('Grayscale Time');\n    }\n\n    gaussianBlur(sigma, size) {\n        const that = this;\n        const kernel = generateKernel(sigma, size);\n\n        console.time('Blur Time');\n        this.cabbageCnvs.convolve(function (neighbors, x, y, pixelIndex, cvsIndex) {\n            // ignore edges\n            // TODO: make this faster!\n            if (x !== 0 && y !== 0 && x !== that.cabbageCnvs.width - 1 && y !== that.cabbageCnvs.height - 1) {\n                let resultR = 0;\n                let resultG = 0;\n                let resultB = 0;\n                let pixel;\n                for (let i = 0; i < size; i++) {\n                    for (let j = 0; j < size; j++) {\n                        pixel = that.cabbageCnvs.getPixel(neighbors[i][j]);\n                        // return the existing pixel value multiplied by the kernel\n                        resultR += pixel.r * kernel[i][j];\n                        resultG += pixel.g * kernel[i][j];\n                        resultB += pixel.b * kernel[i][j];\n                    }\n                }\n                that.cabbageCnvs.setPixel({ x, y }, { r: resultR, g: resultG, b: resultB });\n            }\n        }, size);\n        this.cabbageCnvs.setImg();\n        console.timeEnd('Blur Time');\n    }\n\n    invertColors() {\n        const that = this;\n        let pixel;\n\n        console.time('Invert Colors Time');\n        this.cabbageCnvs.map(function (x, y, pixelIndex, cvsIndex) {\n            pixel = that.cabbageCnvs.getPixel(cvsIndex);\n            that.cabbageCnvs.setPixel({ x, y }, { r: 255 - pixel.r, g: 255 - pixel.g, b: 255 - pixel.b });\n        });\n        this.cabbageCnvs.setImg();\n        console.timeEnd('Invert Colors Time');\n    }\n}\n\n// canny.js\n\nconst SOBEL_X_FILTER = [\n    [-1, 0, 1],\n    [-2, 0, 2],\n    [-1, 0, 1],\n];\nconst SOBEL_Y_FILTER = [\n    [1, 2, 1],\n    [0, 0, 0],\n    [-1, -2, -1],\n];\nconst ROBERTS_X_FILTER = [\n    [1, 0],\n    [0, -1],\n];\nconst ROBERTS_Y_FILTER = [\n    [0, 1],\n    [-1, 0],\n];\nconst PREWITT_X_FILTER = [\n    [-1, 0, 1],\n    [-1, 0, 1],\n    [-1, 0, 1],\n];\nconst PREWITT_Y_FILTER = [\n    [-1, -1, -1],\n    [0, 0, 0],\n    [1, 1, 1],\n];\n\nconst OPERATORS = {\n    sobel: {\n        x: SOBEL_X_FILTER,\n        y: SOBEL_Y_FILTER,\n        len: SOBEL_X_FILTER.length,\n    },\n    roberts: {\n        x: ROBERTS_X_FILTER,\n        y: ROBERTS_Y_FILTER,\n        len: ROBERTS_Y_FILTER.length,\n    },\n    prewitt: {\n        x: PREWITT_X_FILTER,\n        y: PREWITT_Y_FILTER,\n        len: PREWITT_Y_FILTER.length,\n    },\n};\n\nexport class EdgeDetect {\n    constructor(canvElem) {\n        this.cabbageCnvs = canvElem;\n    }\n\n    // find intensity gradient of image\n    gradient(op) {\n        const imgDataCopy = this.cabbageCnvs.getCurrentImg();\n        const dirMap = [];\n        const gradMap = [];\n        const that = this;\n\n        console.time('Sobel Filter Time');\n        this.cabbageCnvs.convolve(function (neighbors, x, y, pixelIndex, cvsIndex) {\n            let edgeX = 0;\n            let edgeY = 0;\n\n            if (!that.cabbageCnvs.isBorder({ x, y })) {\n                for (let i = 0; i < OPERATORS[op].len; i++) {\n                    for (let j = 0; j < OPERATORS[op].len; j++) {\n                        if (!neighbors[i][j]) continue;\n                        edgeX += imgDataCopy.data[neighbors[i][j]] * OPERATORS[op].x[i][j];\n                        edgeY += imgDataCopy.data[neighbors[i][j]] * OPERATORS[op].y[i][j];\n                    }\n                }\n            }\n\n            dirMap[cvsIndex] = roundDir(Math.atan2(edgeY, edgeX) * (180 / Math.PI));\n            gradMap[cvsIndex] = Math.round(Math.sqrt(edgeX * edgeX + edgeY * edgeY));\n\n            that.cabbageCnvs.setPixel({ x, y }, gradMap[cvsIndex]);\n        }, 3);\n        this.cabbageCnvs.setImg();\n        console.timeEnd('Sobel Filter Time');\n\n        this.cabbageCnvs.dirMap = dirMap;\n        this.cabbageCnvs.gradMap = gradMap;\n    }\n\n    nonMaximumSuppress() {\n        const that = this;\n\n        console.time('NMS Time');\n        this.cabbageCnvs.convolve(function (neighbors, x, y, pixelIndex, cvsIndex) {\n            const pixNeighbors = getPixelNeighbors(that.cabbageCnvs.dirMap[cvsIndex]);\n\n            // pixel neighbors to compare\n            const pix1 = that.cabbageCnvs.gradMap[neighbors[pixNeighbors[0].x][pixNeighbors[0].y]];\n            const pix2 = that.cabbageCnvs.gradMap[neighbors[pixNeighbors[1].x][pixNeighbors[1].y]];\n\n            if (\n                pix1 > that.cabbageCnvs.gradMap[cvsIndex] ||\n                pix2 > that.cabbageCnvs.gradMap[cvsIndex] ||\n                (pix2 === that.cabbageCnvs.gradMap[cvsIndex] && pix1 < that.cabbageCnvs.gradMap[cvsIndex])\n            ) {\n                that.cabbageCnvs.setPixel({ x, y }, 0);\n            }\n        }, 3);\n        this.cabbageCnvs.setImg();\n        console.timeEnd('NMS Time');\n    }\n\n    // TODO: Do not use sparse array for storing real edges\n    // mark strong and weak edges, discard others as false edges; only keep weak edges that are connected to strong edges\n    hysteresis() {\n        const that = this;\n        const imgDataCopy = this.cabbageCnvs.getCurrentImg();\n        const realEdges = []; // where real edges will be stored with the 1st pass\n        const t1 = fastOtsu(this.cabbageCnvs); // high threshold value\n        const t2 = t1 / 2; // low threshold value\n\n        // first pass\n        console.time('Hysteresis Time');\n        this.cabbageCnvs.map(function (x, y, pixelIndex, cvsIndex) {\n            if (imgDataCopy.data[cvsIndex] > t1 && realEdges[cvsIndex] === undefined) {\n                // accept as a definite edge\n                const group = that._traverseEdge(cvsIndex, imgDataCopy, t2, []);\n                for (let i = 0; i < group.length; i++) {\n                    realEdges[group[i]] = true;\n                }\n            }\n        });\n\n        // second pass\n        this.cabbageCnvs.map(function (x, y, pixelIndex, cvsIndex) {\n            if (realEdges[cvsIndex] === undefined) {\n                that.cabbageCnvs.setPixel({ x, y }, 0);\n            } else {\n                that.cabbageCnvs.setPixel({ x, y }, 255);\n            }\n        });\n\n        this.cabbageCnvs.setImg();\n        console.timeEnd('Hysteresis Time');\n    }\n\n    // just a quick function to look at the direction results\n    showDirMap() {\n        const that = this;\n        this.cabbageCnvs.map(function (x, y, pixelIndex, cvsIndex) {\n            switch (that.cabbageCnvs.dirMap[cvsIndex]) {\n                case 0:\n                    that.cabbageCnvs.setPixel({ x, y }, COLORS.RED);\n                    break;\n                case 45:\n                    that.cabbageCnvs.setPixel({ x, y }, COLORS.GREEN);\n                    break;\n                case 90:\n                    that.cabbageCnvs.setPixel({ x, y }, COLORS.BLUE);\n                    break;\n                case 135:\n                    that.cabbageCnvs.setPixel({ x, y }, COLORS.YELLOW);\n                    break;\n                default:\n                    that.cabbageCnvs.setPixel({ x, y }, COLORS.PINK);\n            }\n        });\n        this.cabbageCnvs.setImg();\n    }\n\n    // TODO: Evaluate function use/fulness\n    showGradMap() {\n        const that = this;\n        this.cabbageCnvs.map(function (x, y, pixelIndex, cvsIndex) {\n            if (that.cabbageCnvs.gradMap[cvsIndex] < 0) {\n                that.cabbageCnvs.setPixel({ x, y }, COLORS.RED);\n            } else if (that.cabbageCnvs.gradMap[cvsIndex] < 200) {\n                that.cabbageCnvs.setPixel({ x, y }, COLORS.GREEN);\n            } else if (that.cabbageCnvs.gradMap[cvsIndex] < 400) {\n                that.cabbageCnvs.setPixel({ x, y }, COLORS.BLUE);\n            } else if (that.cabbageCnvs.gradMap[cvsIndex] < 600) {\n                that.cabbageCnvs.setPixel({ x, y }, COLORS.YELLOW);\n            } else if (that.cabbageCnvs.gradMap[cvsIndex] < 800) {\n                that.cabbageCnvs.setPixel({ x, y }, COLORS.AQUA);\n            } else {\n                that.cabbageCnvs.setPixel({ x, y }, COLORS.PINK);\n            }\n        });\n        this.cabbageCnvs.setImg();\n    }\n\n    // TODO: Optimize prime!\n    // traverses the current pixel until a length has been reached\n    _traverseEdge(current, imgData, threshold, traversed) {\n        // initialize the group from the current pixel's perspective\n        let group = [current];\n        // pass the traversed group to the getEdgeNeighbors so that it will not include those anymore\n        const neighbors = getEdgeNeighbors(current, imgData, threshold, traversed);\n        for (let i = 0; i < neighbors.length; i++) {\n            // recursively get the other edges connected\n            group = group.concat(this._traverseEdge(neighbors[i], imgData, threshold, traversed.concat(group)));\n        }\n        return group;\n        // if the pixel group is not above max length,\n        // it will return the pixels included in that small pixel group\n    }\n}\n\n// ---------------------------------------------------------------------------------------------------------------------\n// ---------------------------------------------------------------------------------------------------------------------\n// ---------------------------------------------------------------------------------------------------------------------\n\nexport const initialize = (canvas, sz = 3, sg = 1.5) => {\n    const cabbageCanvas = new Cabbage(canvas);\n    const edgeDetect = new EdgeDetect(cabbageCanvas);\n    const filters = new Filters(cabbageCanvas);\n\n    cabbageCanvas.setImg();\n\n    let size;\n    let sigma;\n\n    const setSize = (s) => (size = s <= 1 || s > 21 ? 3 : s % 2 === 0 ? s - 1 : s);\n    const setSigma = (s) => (sigma = s < 1 || s > 10 ? 1.5 : s);\n\n    size = setSize(sz);\n    sigma = setSigma(sg);\n\n    const resetImage = (_) => cabbageCanvas.resetImageData();\n\n    const greyScale = (_) => filters.grayscale();\n    const blur = (_) => filters.gaussianBlur(sigma, size);\n    const invert = (_) => filters.invertColors();\n\n    const sobel = (_) => edgeDetect.gradient('sobel');\n    const roberts = (_) => edgeDetect.gradient('roberts');\n    const prewitt = (_) => edgeDetect.gradient('prewitt');\n\n    /*\n    edgeDetect.nonMaximumSuppress();\n    edgeDetect.hysteresis();\n    edgeDetect.showDirMap();\n    edgeDetect.showGradMap();\n     */\n\n    return {\n        setSize,\n        setSigma,\n        greyScale,\n        blur,\n        invert,\n        resetImage,\n        sobel,\n        roberts,\n        prewitt,\n    };\n};\n","/* Used by edge detect\n\nOriginally from https://github.com/cmisenas/cabbage.js/blob/master/cabbage.js\n\nModifications from 7/15/21, Matt Perkins\n* conversion to ES6 classes\n* Change constructor to use passed canvas element\n*/\nconst DIRECTIONS = ['n', 'e', 's', 'w', 'ne', 'nw', 'se', 'sw'];\nconst VALS = ['r', 'g', 'b', 'a'];\n\n// Pixel is a dumb object that does not know about image data\n// It is only meant to be used by Cabbage directly for:\n// manipulating canvas values, storing and easy retrieval of rgba\n\nclass Pixel {\n    constructor(x, y, vals) {\n        const self = this;\n        this.x = x;\n        this.y = y;\n        this.neighbors = {};\n\n        if (vals) {\n            VALS.forEach(function (d) {\n                self[d] = vals.shift();\n            });\n        }\n\n        DIRECTIONS.forEach(function (d) {\n            self.neighbors[d] = self[d]();\n        });\n    }\n\n    n() {\n        return { x: this.x, y: this.y - 1 };\n    }\n\n    e() {\n        return { x: this.x + 1, y: this.y };\n    }\n\n    s() {\n        return { x: this.x, y: this.y + 1 };\n    }\n\n    w() {\n        return { x: this.x - 1, y: this.y };\n    }\n\n    ne() {\n        return { x: this.x + 1, y: this.y - 1 };\n    }\n\n    nw() {\n        return { x: this.x - 1, y: this.y - 1 };\n    }\n\n    se() {\n        return { x: this.x + 1, y: this.y - 1 };\n    }\n\n    sw() {\n        return { x: this.x + 1, y: this.y - 1 };\n    }\n}\n\nconst doc = window.document;\nconst COORDS = 'coordinate';\nconst PIXIDX = 'pixel index';\nconst IDIDX = 'image data index';\n\nexport class Cabbage {\n    // Original\n    // constructor(id, w, h, doc) {\n    //     doc = doc || doc;\n    //     this.width = w || 600;\n    //     this.height = h || 400;\n    //     this.elem = doc.getElementById(id) || this._createCanvas(id);\n    //     this.ctx = this.elem.getContext('2d');\n    //     this.origImg = {};\n    //     this.currImg = {};\n    // }\n\n    constructor(canvas) {\n        this.width = canvas.width;\n        this.height = canvas.height;\n        this.elem = canvas;\n        this.ctx = this.elem.getContext('2d');\n        this.origImg = this.getCurrentImg();\n        this.currImg = this.getCurrentImg();\n        this.setImg();\n    }\n\n    loadImg(img, sx, sy) {\n        const self = this;\n        if (typeof img === 'string') {\n            this._createImage(img, function (usrImg) {\n                self._img = usrImg;\n                if (usrImg.width !== self.width || usrImg.height !== self.height) {\n                    self.width = usrImg.width;\n                    self.height = usrImg.height;\n                    self.elem.width = self.width;\n                    self.elem.height = self.height;\n                }\n                self.drawImage(sx, sy);\n            });\n        } else if (/HTMLImageElement/.test(img.constructor)) {\n            this._img = img;\n            this.drawImage(sx, sy);\n        }\n        return this;\n    }\n\n    _createImage(imgSrc, fn) {\n        const self = this;\n        usrImg = new Image();\n        usrImg.onload = function () {\n            fn(usrImg);\n        };\n        usrImg.src = imgSrc;\n    }\n\n    _createCanvas(id) {\n        let elem;\n        elem = doc.createElement('canvas');\n        elem.id = id;\n        elem.width = this.width;\n        elem.height = this.height;\n        doc.body.insertBefore(elem, doc.body.firstChild);\n        return elem;\n    }\n\n    drawImage(sx, sy) {\n        this.ctx.drawImage(this._img, sx || 0, sy || 0);\n        this.refreshCurrImageData();\n        this.origImg = this.getCurrentImg();\n    }\n\n    // TODO: This looks sort of confusing\n    // rethink its use/name\n    setImg() {\n        this.putImageData(this.currImg, 0, 0);\n    }\n\n    /*\n        // Delete image data; leave canvas blank\n        deleteImg = function() {\n        };\n        */\n\n    // Reset to original data\n    resetImageData() {\n        // put back the original image to the canvas\n        this.putImageData(this.origImg);\n    }\n\n    // returns the actual current image data\n    getCurrentImg() {\n        return this.ctx.getImageData(0, 0, this.width, this.height);\n    }\n\n    // returns a copy of original image data\n    originalImg() {\n        return this.ctx.createImageData(this.origImg);\n    }\n\n    map(fn) {\n        let x;\n        let y;\n        let cvsIndex;\n        let pixelIndex;\n        for (y = 0; y < this.height; y++) {\n            for (x = 0; x < this.width; x++) {\n                pixelIndex = y * this.width + x;\n                cvsIndex = x * 4 + y * this.width * 4;\n                fn(x, y, pixelIndex, cvsIndex);\n            }\n        }\n    }\n\n    convolve(fn, size) {\n        let x;\n        let y;\n        let cvsIndex;\n        let pixelIndex;\n        let matrix;\n        size = size || 3;\n        for (y = 0; y < this.height; y++) {\n            for (x = 0; x < this.width; x++) {\n                pixelIndex = y * this.width + x;\n                cvsIndex = x * 4 + y * this.width * 4;\n                matrix = this._buildMatrix(x, y, size);\n                fn(matrix, x, y, pixelIndex, cvsIndex);\n            }\n        }\n    }\n\n    // returns the pixel object if it exists\n    // otherwise throws an error\n    getPixel(loc) {\n        let index;\n        let coords;\n        let rgba;\n\n        if (typeof loc === 'number') {\n            if (!this._checkValidIDIndex(loc)) {\n                this._throwValidationError(IDIDX, COORDS);\n            }\n            index = loc;\n            coords = this._convertIDIndexToCoords(loc);\n        } else {\n            if (!this._checkValidCoords(loc)) {\n                this._throwValidationError(COORDS, IDIDX);\n            }\n            index = this._convertCoordsToIDIndex(loc);\n            coords = loc;\n        }\n        rgba = Array.prototype.slice.call(this.currImg.data, index, index + 4);\n        return new Pixel(coords.x, coords.y, rgba);\n    }\n\n    // Modifies the current image data pixels\n    // Does not modify the canvas image\n    // That is the job of setImg\n    setPixel(pixel, val) {\n        const i = this._convertCoordsToIDIndex(pixel);\n\n        if (typeof val === 'number') {\n            this.currImg.data[i] = val;\n            this.currImg.data[i + 1] = val;\n            this.currImg.data[i + 2] = val;\n        } else {\n            this.currImg.data[i] = val.r;\n            this.currImg.data[i + 1] = val.g;\n            this.currImg.data[i + 2] = val.b;\n            this.currImg.data[i + 3] = val.a || 255;\n        }\n        // this._drawPixel(pixel, r, g, b, a);\n    }\n\n    _drawPixel(pixel, r, g, b, a) {\n        this.ctx.fillStyle = `rgba(${[r, g, b, a].join(', ')})`;\n        this.ctx.fillRect(pixel.x, pixel.y, 1, 1);\n    }\n\n    isBorder(coords) {\n        return (\n            (coords.x === 0 && coords.y < this.height && coords.y >= 0) ||\n            (coords.y === 0 && coords.x < this.width && coords.x >= 0) ||\n            (coords.x === this.width - 1 && coords.y < this.height && coords.y >= 0) ||\n            (coords.y === this.height - 1 && coords.x < this.width && coords.x >= 0)\n        );\n    }\n\n    isOutOfBounds(coords) {\n        return coords.x < 0 || coords.x > this.width - 1 || coords.y < 0 || coords.y > this.height - 1;\n    }\n\n    // Every putImageData done via object\n    // stores current image for faster access later\n    putImageData(id, x, y) {\n        this.ctx.putImageData(id, x || 0, y || 0);\n        this.refreshCurrImageData();\n    }\n\n    refreshCurrImageData() {\n        this.currImg = this.getCurrentImg();\n    }\n\n    _buildMatrix(cx, cy, size) {\n        const matrix = [];\n        let nx;\n        let ny;\n        const min = 3;\n        const max = Math.max(this.width, this.height); // temp max value\n\n        size = size || 3;\n        size = size % 2 === 0 ? size + 1 : size;\n\n        // TODO make it so that max size is dictated by the dimensions of the image\n        if (size < min || size > max) size = min;\n\n        for (let i = 0, y = -(size - 1) / 2; i < size; i++, y++) {\n            matrix[i] = [];\n            for (let j = 0, x = -(size - 1) / 2; j < size; j++, x++) {\n                nx = cx + x;\n                ny = cy + y;\n                if (nx < 0 || nx >= this.width || ny < 0 || ny >= this.height) {\n                    matrix[i][j] = undefined;\n                } else {\n                    matrix[i][j] = this._convertCoordsToIDIndex({ x: nx, y: ny });\n                }\n            }\n        }\n        return matrix;\n    }\n\n    _convertCoordsToIDIndex(coords) {\n        const m = 4;\n        return (coords.y * this.width + coords.x) * m;\n    }\n\n    _convertCoordsToPixIndex(coords) {\n        return coords.y * this.width + coords.x;\n    }\n\n    _checkValidCoords(coords) {\n        return (\n            !!coords &&\n            coords.x === parseInt(coords.x, 10) &&\n            coords.y === parseInt(coords.y, 10) &&\n            coords.x >= 0 &&\n            coords.x < this.width &&\n            coords.y >= 0 &&\n            coords.y < this.height\n        );\n    }\n\n    _checkValidPIndex(pIdx) {\n        return pIdx === parseInt(pIdx, 10) && pIdx >= 0 && pIdx < this.width * this.height;\n    }\n\n    _checkValidIDIndex(pIdx) {\n        return pIdx === parseInt(pIdx, 10) && pIdx >= 0 && pIdx < this.width * this.height * 4;\n    }\n\n    _convertIDIndexToCoords(idIdx) {\n        const m = 4;\n        if (idIdx % 4 > 0) idIdx -= idIdx % 4;\n        return {\n            x: (idIdx % (this.width * m)) / m,\n            y: Math.floor(idIdx / (this.width * m)),\n        };\n    }\n\n    _convertIDIndexToPixIndex(idIdx) {\n        const m = 4;\n        return Math.floor(idIdx / m);\n    }\n\n    _convertPixIndexToCoords(pIdx) {\n        return { x: pIdx % this.width, y: Math.floor(pIdx / this.width) };\n    }\n\n    _convertPixIndexToIDIndex(pIdx) {\n        return pIdx * 4;\n    }\n\n    _throwValidationError(from, to) {\n        const msg = `Invalid ${from}. Unable to convert to ${to}`;\n        throw new Error(msg);\n    }\n}\n","module.exports = require('./bundle-url').getBundleURL() + \"kristijan-arsov-woman-400.56b3ea5d.png\"","import tinycolor from 'tinycolor2';\nimport { mapRange, uvFromAngle, isValueInRange } from '../math/math';\nimport { randomWholeBetween } from '../math/random';\nimport { pixelAtPoints } from './primatives';\n\nexport const renderField = ({ width, height }, context, fn, color = 'black', resolution = '50', length = 10) => {\n    const xStep = Math.round(width / resolution);\n    const yStep = Math.round(height / resolution);\n    const xMid = xStep / 2;\n    const yMid = yStep / 2;\n    for (let x = 0; x < width; x += xStep) {\n        for (let y = 0; y < height; y += yStep) {\n            const theta = fn(x, y);\n            const vect = uvFromAngle(theta).setMag(length || xMid);\n            const x1 = x + xMid;\n            const y1 = y + yMid;\n            const x2 = x1 + vect.x;\n            const y2 = y1 + vect.y;\n            context.strokeStyle = tinycolor(color);\n            context.lineWidth = 1;\n            context.beginPath();\n            context.moveTo(x1, y1);\n            context.lineTo(x2, y2);\n            context.stroke();\n        }\n    }\n};\n\nexport const renderFieldColor = (\n    { width, height },\n    context,\n    fn,\n    resolution = '50',\n    lowColor,\n    highColor,\n    noiseMax = 5\n) => {\n    const xStep = Math.round(width / resolution);\n    const yStep = Math.round(height / resolution);\n    for (let x = 0; x < width; x += xStep) {\n        for (let y = 0; y < height; y += yStep) {\n            const theta = fn(x, y);\n            const colorMix = mapRange(0, noiseMax * 2, 0, 100, theta + noiseMax);\n            const fillColor = tinycolor.mix(lowColor, highColor, colorMix);\n            context.fillStyle = tinycolor(fillColor).toRgbString();\n            context.fillRect(x, y, x + xStep, y + yStep);\n        }\n    }\n};\n\n// https://codepen.io/crummy/pen/RWRWQe?editors=0010\n// http://bl.ocks.org/blinsay/c8bcfeff0b6159f44aec\n// https://github.com/anvaka/streamlines\nexport const renderFieldContour = (\n    { width, height },\n    context,\n    fn,\n    min = -8,\n    max = 8,\n    steps = 30,\n    lowColor = 'black',\n    highColor = 'white',\n    varience = 0.025\n) => {\n    const nsteps = (max - min) / steps;\n    const rpoints = 100000;\n\n    for (let n = min; n < max; n += nsteps) {\n        const lowPoints = [];\n        const highPoints = [];\n        for (let i = 0; i < rpoints; i++) {\n            const px = randomWholeBetween(0, width);\n            const py = randomWholeBetween(0, height);\n            const nheight = fn(px, py);\n            if (isValueInRange(n, nheight, varience)) {\n                if (nheight <= 0) lowPoints.push([px, py]);\n                else highPoints.push([px, py]);\n\n                // const vect = uvFromAngle(nheight).setMag(5);\n                // const x2 = px + vect.x;\n                // const y2 = py + vect.y;\n                // context.strokeStyle = tinycolor(lowColor);\n                // context.lineWidth = 1;\n                // context.beginPath();\n                // context.moveTo(px, py);\n                // context.lineTo(x2, y2);\n                // context.stroke();\n            }\n        }\n        pixelAtPoints(context)(lowPoints, lowColor, 1);\n        pixelAtPoints(context)(highPoints, highColor, 1);\n    }\n};\n\n// https://thingonitsown.blogspot.com/2019/02/finding-perlin-contours.html\n/*\nfunction renderNoiseContour(startX, startY, borderVal, fn) {\n    const lookRad = 2;\n    let nextX = startX;\n    let nextY = startY;\n    const coords = [];\n    // set color\n    // start shape\n\n    let distance = 0;\n    for (let i = 0; i < 50000; i++) {\n        const lastDistance = distance;\n        const lastX = nextX;\n        const lastY = nextY;\n        for (\n            distance = lastDistance + Math.PI / 2;\n            (distance > lastDistance - Math.PI / 2 && !isValueInRange(borderVal, fn(startX, startY), 0.0035)) ||\n            distance === lastDistance + Math.PI / 2;\n            distance -= 0.17\n        ) {\n            nextX = lastX + lookRad * Math.cos(distance);\n            nextY = lastY - lookRad * Math.sin(distance);\n        }\n        coords.push([nextX, nextY]);\n        // vertex(nextX - mx + windowWidth / 2, nextY - my + windowHeight / 2)\n\n        if (pointDistance({ x: nextX, y: nextY }, { x: startX, y: startY }) < lookRad && i > 1) {\n            if (i > 4) {\n                // endShape(CLOSE)\n                return coords;\n            }\n            break;\n        }\n    }\n}\n*/\n","import tinycolor from 'tinycolor2';\nimport { degreesToRadians } from '../rndrgen/math/math';\nimport { background } from '../rndrgen/canvas/canvas';\nimport { ratio, scale } from '../rndrgen/Sketch';\nimport { brightest, darkest, hslFromRange, nicePalette } from '../rndrgen/color/palettes';\nimport { simplexNoise2d, simplexNoise3d } from '../rndrgen/math/attractors';\nimport { randomPointAround, randomWholeBetween } from '../rndrgen/math/random';\nimport { circleFilled } from '../rndrgen/canvas/primatives';\n\n/*\nStarted here but took a detour\nhttps://www.reddit.com/r/creativecoding/comments/lx9prx/audiovisual_sound_of_space_solar_system_david/\n */\n\nconst TAU = Math.PI * 2;\n\nexport const radialNoise = () => {\n    const config = {\n        name: 'radialNoise',\n        ratio: ratio.square,\n        scale: scale.standard,\n    };\n\n    let canvasMidX;\n    let canvasMidY;\n    let maxRadius;\n    let radiusScale;\n    let currentRadiusSize = 360;\n\n    let originX;\n    let originY;\n    let time = 0;\n    let angle = 0;\n\n    const history = {};\n\n    const palette = nicePalette();\n    const backgroundColor = brightest(palette).clone().lighten(10);\n    const imageColor = darkest(palette).clone();\n\n    // let imageZoomFactor;\n    // const png = new Image();\n    // png.src = sourcePng;\n    // let imageData;\n\n    const setup = ({ canvas, context }) => {\n        canvasMidX = canvas.width / 2;\n        canvasMidY = canvas.height / 2;\n        maxRadius = canvas.width * 0.4;\n        radiusScale = currentRadiusSize / maxRadius;\n\n        originX = canvasMidX;\n        originY = canvasMidY;\n\n        // imageData = getImageDataFromImage(context)(png);\n        // clear(canvas, context)();\n        // imageZoomFactor = 360 / imageData.width;\n\n        background(canvas, context)(backgroundColor);\n    };\n\n    const drawPixel = (context, x, y, color, size = 1, heading = 0) => {\n        circleFilled(context)(x, y, size, color);\n    };\n\n    const drawLine = (context, x1, y1, x2, y2, color, strokeWidth = 1) => {\n        context.strokeStyle = tinycolor(color).toRgbString();\n        context.lineWidth = strokeWidth;\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n    };\n\n    const circleX = (r, a, v = 1) => r * Math.cos(a * v);\n    const circleY = (r, a, v = 1) => r * Math.sin(a * v);\n\n    const draw = ({ canvas, context }) => {\n        for (let radius = 0; radius < currentRadiusSize; radius++) {\n            let ox;\n            let oy;\n\n            if (history.hasOwnProperty(radius)) {\n                ox = history[radius].x;\n                oy = history[radius].y;\n            }\n\n            const radScaled = radius / radiusScale;\n            const a = 1;\n            const b = 1;\n            const radians = degreesToRadians(angle) - Math.PI / 8;\n            let x = originX + circleX(radScaled, radians, a);\n            let y = originY + circleY(radScaled, radians, b);\n\n            const noise = simplexNoise3d(x, y, time, 0.02);\n            x += noise;\n            y += noise;\n\n            const monoColor = imageColor.clone().spin(time * 0.1);\n\n            if (ox !== undefined && oy !== undefined) {\n                drawLine(context, ox, oy, x, y, monoColor, 0.5);\n            }\n\n            history[radius] = { x, y };\n\n            time += 0.01;\n        }\n\n        angle += 3;\n\n        if (angle > 360) {\n            angle = 0;\n\n            currentRadiusSize = randomWholeBetween(100, 360);\n            radiusScale = 1; // currentRadiusSize / maxRadius;\n\n            const offs = randomPointAround((canvas.width - maxRadius) * 0.75);\n            originX = canvasMidX + offs.x;\n            originY = canvasMidY + offs.y;\n            background(canvas, context)(backgroundColor.setAlpha(0.25));\n        }\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import tinycolor from 'tinycolor2';\nimport random from 'canvas-sketch-util/random';\nimport { uvFromAngle, quantize } from '../rndrgen/math/math';\nimport { Particle } from '../rndrgen/systems/Particle';\nimport { background } from '../rndrgen/canvas/canvas';\nimport { ratio, scale } from '../rndrgen/sketch';\nimport { palettes } from '../rndrgen/color/palettes';\nimport { Vector } from '../rndrgen/math/Vector';\nimport { simplexNoise2d, simplexNoise3d, cliffordAttractor, jongAttractor } from '../rndrgen/math/attractors';\nimport { renderField } from '../rndrgen/canvas/fields';\nimport { oneOf, randomBoolean, randomPointAround, randomWholeBetween } from '../rndrgen/math/random';\n\n/*\nBased on\nhttps://tylerxhobbs.com/essays/2020/flow-fields\n */\n\nconst drawRibbonPoint = (context, point, i, thickness = 0, height = 0) => {\n    const x = point[0];\n    const y = point[1];\n    context.lineTo(x + thickness, y + thickness);\n};\n\nconst drawRibbon = (context) => (sideA, sideB, color, stroke = false, thickness = 1) => {\n    const startx = sideA[0][0];\n    const starty = sideA[0][1];\n    const endx = sideB[0][0] + thickness;\n    const endy = sideB[0][1] + thickness;\n\n    const rColor = tinycolor(color).clone();\n    const gradient = context.createLinearGradient(0, starty - thickness, 0, endy + thickness);\n    gradient.addColorStop(0, rColor.toRgbString());\n    gradient.addColorStop(1, rColor.clone().darken(20).toRgbString());\n\n    context.beginPath();\n    context.moveTo(startx, starty);\n    sideA.forEach((w, i) => {\n        drawRibbonPoint(context, w, i, 0, thickness * 0.1);\n    });\n    sideB.forEach((w, i) => {\n        drawRibbonPoint(context, w, i, thickness, thickness * 0.1);\n    });\n    context.lineTo(startx, starty);\n\n    if (stroke) {\n        context.strokeStyle = rColor.darken(70).toRgbString();\n        context.lineWidth = 0.75;\n        context.stroke();\n    }\n\n    context.fillStyle = gradient;\n    context.fill();\n};\n\nexport const flowFieldRibbons = () => {\n    const config = {\n        name: 'flowFieldRibbons',\n        ratio: ratio.square,\n        scale: scale.standard,\n    };\n\n    let canvasWidth;\n    let canvasHeight;\n    let canvasMidX;\n    let canvasMidY;\n    const palette = palettes.pop;\n    const backgroundColor = tinycolor('white');\n\n    let time = 0;\n\n    const createRibbon = (fieldFn, startX, startY, length, vlimit = 1) => {\n        const props = {\n            x: startX,\n            y: startY,\n            velocityX: 0,\n            velocityY: 0,\n            mass: 1,\n        };\n        const particle = new Particle(props);\n        const coords = [];\n        for (let i = 0; i < length; i++) {\n            const theta = fieldFn(particle.x, particle.y);\n            // theta = quantize(360, theta);\n            const force = uvFromAngle(theta);\n            particle.applyForce(force);\n            particle.velocity = particle.velocity.limit(vlimit);\n            particle.updatePosWithVelocity();\n            coords.push([particle.x, particle.y]);\n            particle.acceleration = new Vector(0, 0);\n        }\n        return coords;\n    };\n\n    const simplex2d = (x, y) => simplexNoise2d(x, y, 0.0005);\n    const simplex3d = (x, y) => simplexNoise3d(x, y, time, 0.0005);\n    const clifford = (x, y) => cliffordAttractor(canvasWidth, canvasHeight, x, y);\n    const jong = (x, y) => jongAttractor(canvasWidth, canvasHeight, x, y);\n    const noise = randomBoolean() ? clifford : jong;\n\n    let maxRadius;\n\n    const setup = ({ canvas, context }) => {\n        canvasWidth = canvas.width;\n        canvasHeight = canvas.height;\n        canvasMidX = canvas.width / 2;\n        canvasMidY = canvas.height / 2;\n        maxRadius = canvas.width * 0.4;\n\n        background(canvas, context)(backgroundColor);\n\n        renderField(canvas, context, noise, 'rgba(0,0,0,.15)', canvas.width / 10, 5);\n    };\n\n    const ribbonLen = randomWholeBetween(50, 1000);\n    const ribbonThickness = randomWholeBetween(3, 30);\n\n    const draw = ({ canvas, context }) => {\n        const color = oneOf(palette);\n        const len = maxRadius * 2; // ribbonLen;\n\n        const rpoint = random.onCircle(maxRadius); // randomPointAround(maxRadius * 0.4);\n\n        const x = rpoint[0] + canvasMidX;\n        const y = rpoint[1] + canvasMidY;\n        const x2 = x + 2;\n        const y2 = y;\n\n        const sideA = createRibbon(noise, x, y, len, 1);\n        const sideB = createRibbon(noise, x2, y2, len, 1).reverse();\n\n        drawRibbon(context)(sideA, sideB, color, false, ribbonThickness);\n\n        time += 0.01;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import tinycolor from 'tinycolor2';\nimport random from 'canvas-sketch-util/random';\nimport { uvFromAngle } from '../rndrgen/math/math';\nimport { Particle } from '../rndrgen/systems/Particle';\nimport { background } from '../rndrgen/canvas/canvas';\nimport { ratio, scale } from '../rndrgen/sketch';\nimport { palettes } from '../rndrgen/color/palettes';\nimport { Vector } from '../rndrgen/math/Vector';\nimport { simplexNoise2d, simplexNoise3d, cliffordAttractor, jongAttractor } from '../rndrgen/math/attractors';\nimport { renderField } from '../rndrgen/canvas/fields';\nimport { oneOf, randomBoolean, randomPointAround, randomWholeBetween } from '../rndrgen/math/random';\n\n/*\nBased on\nhttps://tylerxhobbs.com/essays/2020/flow-fields\n */\n\nconst drawRibbonPoint = (context, point, i, thickness = 0, height = 0) => {\n    const x = point[0];\n    const y = point[1];\n    const jitterX = 0; // Math.cos(i * 0.05) * height;\n    const jitterY = 0; // Math.sin(i * 0.05) * height;\n    context.lineTo(x + thickness + jitterX, y + thickness + jitterY);\n};\n\nconst drawRibbonSegment = (context, sideA, sideB, color, stroke = false, thickness = 1) => {\n    const segStartX = sideA[0][0];\n    const segStartY = sideA[0][1];\n    const segEndX = sideB[0][0] + thickness;\n    const segEndY = sideB[0][1] + thickness;\n\n    const rColor = tinycolor(color).clone();\n    const gradient = context.createLinearGradient(0, segStartY - thickness, 0, segEndY + thickness);\n    gradient.addColorStop(0, rColor.toRgbString());\n    gradient.addColorStop(0.5, rColor.toRgbString());\n    gradient.addColorStop(1, rColor.clone().darken(20).saturate(50).toRgbString());\n\n    context.beginPath();\n    context.moveTo(segStartX, segStartY);\n    sideA.forEach((w, i) => {\n        drawRibbonPoint(context, w, i, 0, thickness * 0.1);\n    });\n    sideB.forEach((w, i) => {\n        drawRibbonPoint(context, w, i, thickness, thickness * 0.1);\n    });\n    context.lineTo(segStartX, segStartY);\n\n    if (stroke) {\n        context.strokeStyle = rColor.darken(70).toRgbString();\n        context.lineWidth = 0.75;\n        context.stroke();\n    }\n\n    context.fillStyle = gradient;\n    context.fill();\n};\n\nconst drawRibbon = (context) => (sideA, sideB, color, stroke = false, thickness = 1) => {\n    const segmentGap = 1; // randomWholeBetween(1, 4);\n    const segments = randomWholeBetween(1, 3);\n    // const segmentsStep = Math.ceil((sideA.length - segmentGap * (segments - 1)) / segments);\n    const segmentData = [];\n\n    let left = sideA.length;\n    let start = 0;\n\n    for (let i = 0; i < segments; i++) {\n        const len = randomWholeBetween(1, left / 2);\n        // const start = i * segmentsStep + segmentGap * i;\n        // const len = segmentsStep;\n        segmentData.push({\n            sideA: sideA.slice(start, start + len),\n            sideB: sideB.slice(start, start + len).reverse(),\n        });\n        start += len + segmentGap;\n        left -= len + segmentGap;\n    }\n    segmentData.forEach((s) => {\n        drawRibbonSegment(context, s.sideA, s.sideB, color, stroke, thickness);\n    });\n\n    // drawRibbonSegment(context, segmentStart, segmentLen, sideA, sideB, color, stroke, thickness);\n};\n\nexport const flowFieldRibbons2 = () => {\n    const config = {\n        name: 'flowFieldRibbons',\n        ratio: ratio.square,\n        scale: scale.standard,\n    };\n\n    let canvasMidX;\n    let canvasMidY;\n    const palette = palettes['80s_pop'];\n    const backgroundColor = tinycolor('white');\n\n    let time = 0;\n\n    const createRibbon = (fieldFn, startX, startY, length, vlimit = 1) => {\n        const props = {\n            x: startX,\n            y: startY,\n            velocityX: 0,\n            velocityY: 0,\n            mass: 1,\n        };\n        const particle = new Particle(props);\n        const coords = [];\n        for (let i = 0; i < length; i++) {\n            const theta = fieldFn(particle.x, particle.y);\n            // theta = quantize(4, theta);\n            const force = uvFromAngle(theta);\n            particle.applyForce(force);\n            particle.velocity = particle.velocity.limit(vlimit);\n            particle.updatePosWithVelocity();\n            coords.push([particle.x, particle.y]);\n            particle.acceleration = new Vector(0, 0);\n        }\n        return coords;\n    };\n\n    const simplex2d = (x, y) => simplexNoise2d(x, y, 0.0001);\n    const simplex3d = (x, y) => simplexNoise3d(x, y, time, 0.0005);\n    const clifford = (x, y) => cliffordAttractor(canvas.width, canvas.height, x, y);\n    const jong = (x, y) => jongAttractor(canvas.width, canvas.height, x, y);\n    const noise = randomBoolean() ? clifford : jong;\n\n    let maxRadius;\n\n    const setup = ({ canvas, context }) => {\n        canvasMidX = canvas.width / 2;\n        canvasMidY = canvas.height / 2;\n        maxRadius = canvas.width * 0.4;\n\n        background(canvas, context)(backgroundColor);\n\n        // renderField(\n        //     canvas,\n        //     context,\n        //     noise,\n        //     tinycolor(oneOf(palette)).lighten(30),\n        //     canvas.width / 10,\n        //     canvas.width / 20\n        // );\n    };\n\n    const ribbonLen = randomWholeBetween(200, 500);\n    const ribbonThickness = randomWholeBetween(100, 300);\n\n    const maxItterations = randomWholeBetween(10, 30);\n    let currentItteration = 0;\n\n    const draw = ({ canvas, context }) => {\n        const color = oneOf(palette);\n        const len = ribbonLen;\n\n        // const rpoint = random.onCircle(maxRadius); // randomPointAround(maxRadius * 0.4);\n        const rpoint = [randomWholeBetween(0, canvas.width), randomWholeBetween(0, canvas.height)];\n\n        const x = rpoint[0];\n        const y = rpoint[1];\n        const x2 = x + 2;\n        const y2 = y;\n\n        const sideA = createRibbon(noise, x, y, len, 1);\n        const sideB = createRibbon(noise, x2, y2, len, 1);\n        drawRibbon(context)(sideA, sideB, color, false, ribbonThickness);\n\n        time += 0.01;\n\n        if (++currentItteration > maxItterations) return -1;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import tinycolor from 'tinycolor2';\nimport { Particle, createRandomParticleValues } from '../rndrgen/systems/Particle';\nimport { background, resetContext } from '../rndrgen/canvas/canvas';\nimport { mapRange, uvFromAngle } from '../rndrgen/math/math';\nimport { ratio, scale } from '../rndrgen/sketch';\nimport { palettes, warmGreyDark, warmWhite, warmPink, paperWhite, bicPenBlue } from '../rndrgen/color/palettes';\nimport { Box } from '../rndrgen/systems/Box';\nimport { simplexNoise3d } from '../rndrgen/math/attractors';\nimport { Vector } from '../rndrgen/math/Vector';\nimport { textureRectZigZag, textureRectStipple, textureRect } from '../rndrgen/canvas/textures';\nimport { connectParticles, particlePoint } from '../rndrgen/canvas/particles';\nimport { getGridCells } from '../rndrgen/math/grids';\nimport { oneOf } from '../rndrgen/math/random';\nimport { pixel } from '../rndrgen/canvas/primatives';\n\nexport const shadedBoxes = () => {\n    const config = {\n        name: 'shadedBoxes',\n        ratio: ratio.square,\n        scale: scale.standard,\n    };\n\n    const numParticles = 30;\n\n    let canvasCenterX;\n    let canvasCenterY;\n    let centerRadius;\n    let grid;\n    const boxes = [];\n    const palette = palettes.pop;\n    let time = 0;\n\n    const setup = ({ canvas, context }) => {\n        canvasCenterX = canvas.width / 2;\n        canvasCenterY = canvas.height / 2;\n        centerRadius = canvas.height / 4;\n\n        background(canvas, context)(paperWhite);\n\n        const boxwhite = paperWhite.clone().darken(10).saturate(10);\n        const boxbg = [boxwhite, bicPenBlue];\n        const boxfg = [bicPenBlue, boxwhite];\n\n        const gridMargin = Math.round(canvas.width / 10);\n        const gridGutter = Math.round(gridMargin / 4);\n\n        grid = getGridCells(canvas.width, canvas.height, 1, 10, gridMargin, gridGutter);\n\n        grid.points.forEach((p, i) => {\n            boxes.push(\n                new Box({\n                    canvas,\n                    context,\n                    x: p[0],\n                    y: p[1],\n                    width: grid.columnWidth,\n                    height: grid.rowHeight,\n                })\n            );\n        });\n\n        let freq = 0.0001;\n\n        boxes.forEach((b, bidx) => {\n            const particles = [];\n            const clr = bidx % 2 === 0 ? 0 : 1;\n            b.backgroundColor = bicPenBlue.clone(); // boxbg[clr];\n            b.flowField = (x, y, t) => simplexNoise3d(x, y, t, freq);\n            freq += 0.0005;\n            for (let i = 0; i < numParticles; i++) {\n                const props = createRandomParticleValues(canvas);\n                const coords = b.translateInto(b.randomPointInside('normal'));\n                props.x = coords.x;\n                props.y = coords.y;\n                props.velocityX = 0;\n                props.velocityY = 0;\n                props.radius = 1;\n                props.color = bidx <= 4 ? bicPenBlue.clone() : paperWhite.clone(); // tinycolor(boxfg[clr]).clone().setAlpha(0.5);\n                particles.push(new Particle(props));\n            }\n            b.children = particles;\n\n            textureRectStipple(context)(b.x, b.y, b.width, b.height, b.backgroundColor, bidx + 1);\n        });\n\n        // boxes.forEach((b) => {\n        //     b.fill();\n        // });\n\n        return -1;\n    };\n\n    const draw = ({ canvas, context }) => {\n        boxes.forEach((box) => {\n            box.createClip();\n            box.children.forEach((particle) => {\n                const theta = box.flowField(particle.x, particle.y, time);\n                const force = uvFromAngle(theta);\n                particle.applyForce(force);\n                particle.velocity = particle.velocity.limit(1);\n                particle.updatePosWithVelocity();\n                particle.acceleration = new Vector(0, 0);\n                box.particleEdgeWrap(particle);\n                pixel(context)(particle.x, particle.y, particle.color, 'circle', 0.5);\n            });\n            box.removeClip();\n        });\n        time += 0.1;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","/*\nFlow field inside?\nParticle physics inside\nBorder\nClip to no overflow?\n */\n\nimport tinycolor from 'tinycolor2';\nimport { defaultValue } from '../utils';\nimport { randomNormalWholeBetween, randomWholeBetween } from '../math/random';\nimport { rectFilled } from '../canvas/primatives';\n\nconst defaultMP = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n};\n\nconst defaultFlow = (x, y) => 0;\n\nlet boxIndex = 0;\n\nclass Point {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    get toArray() {\n        return [this.x, this.y, this.z];\n    }\n\n    get toObject() {\n        return {\n            x: this.x,\n            y: this.y,\n            z: this.z,\n        };\n    }\n\n    clone() {\n        return new Point(this.x, this.y, this.z);\n    }\n}\n\nexport class Box {\n    #backgroundColor;\n\n    constructor(props, children = []) {\n        this.name = `box${boxIndex++}`;\n        this.canvas = props.canvas;\n        this.context = props.context;\n        this.x = props.x;\n        this.y = props.y;\n        this.width = props.width;\n        this.height = props.height;\n        this.rotation = defaultValue(props, 'rotation', 0);\n        this.#backgroundColor = tinycolor(defaultValue(props, 'backgroundColor', 'white'));\n        this.padding = defaultValue(props, 'padding', defaultMP);\n        this.clip = defaultValue(props, 'clip', true);\n        this.flowField = defaultValue(props, 'flowField', defaultFlow);\n        this.children = children;\n    }\n\n    get x2() {\n        return this.x + this.width;\n    }\n\n    get y2() {\n        return this.y + this.height;\n    }\n\n    get innerWidth() {\n        return this.width - this.padding.left - this.padding.right;\n    }\n\n    get innerHeight() {\n        return this.height - this.padding.top - this.padding.bottom;\n    }\n\n    get centerPoint() {\n        return new Point(this.x + Math.round(this.width / 2), this.y + Math.round(this.height / 2));\n    }\n\n    get backgroundColor() {\n        return this.#backgroundColor.clone();\n    }\n\n    set backgroundColor(c) {\n        this.#backgroundColor = tinycolor(c);\n    }\n\n    fill(color) {\n        color = color || this.backgroundColor;\n        rectFilled(this.context)(this.x, this.y, this.width, this.height, color);\n    }\n\n    erase() {\n        this.context.clearRect(this.x, this.y, this.width, this.height);\n    }\n\n    outline(thickness, color) {\n        this.context.strokeStyle = tinycolor(color).toRgbString();\n        this.context.lineWidth = thickness;\n        this.context.rect(this.x, this.y, this.width, this.height);\n        this.context.stroke();\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/clip\n    // https://dustinpfister.github.io/2019/08/14/canvas-save/\n    // https://dustinpfister.github.io/2019/10/08/canvas-clip/\n    createClip() {\n        this.context.save();\n        const region = new Path2D();\n        region.rect(this.x, this.y, this.width, this.height);\n        this.context.clip(region);\n    }\n\n    removeClip() {\n        this.context.restore();\n    }\n\n    translateX(x) {\n        return this.x + x;\n    }\n\n    translateY(y) {\n        return this.y + y;\n    }\n\n    translateInto(point) {\n        return new Point(this.translateX(point.x), this.translateY(point.y));\n    }\n\n    translateOut(point) {\n        return new Point(point.x - this.x, point.y - this.y);\n    }\n\n    randomPointInside(distribution = 'whole') {\n        const edgeBuffer = 10;\n        let point = new Point(\n            randomWholeBetween(edgeBuffer, this.width - edgeBuffer),\n            randomWholeBetween(edgeBuffer, this.height - edgeBuffer)\n        );\n        if (distribution === 'normal') {\n            point = new Point(\n                randomNormalWholeBetween(edgeBuffer, this.width - edgeBuffer),\n                randomNormalWholeBetween(edgeBuffer, this.height - edgeBuffer)\n            );\n        }\n        return point;\n    }\n\n    isInside(point) {\n        return point.x >= this.x && point.x <= this.x2 && point.y >= this.y && point.y <= this.y2;\n    }\n\n    isOutside(point) {\n        return !this.isInside(point);\n    }\n\n    clipPoint(point) {\n        const np = new Point(point.x, point.y);\n        if (point.x < this.x) np.x = this.x;\n        if (point.x > this.x2) np.x = this.x2;\n        if (point.y < this.y) np.y = this.y;\n        if (point.y > this.y2) np.y = this.y2;\n        return np;\n    }\n\n    wrapPoint(point) {\n        const np = new Point(point.x, point.y);\n        if (point.x < this.x) np.x = this.x2;\n        if (point.x > this.x2) np.x = this.x;\n        if (point.y < this.y) np.y = this.y2;\n        if (point.y > this.y2) np.y = this.y;\n        return np;\n    }\n\n    particleEdgeBounce = (particle) => {\n        const psize = particle.radius;\n        if (particle.x + psize > this.x2) {\n            particle.x = this.x2 - psize;\n            particle.reverseVelocityX();\n        }\n        if (particle.x - psize < this.x) {\n            particle.x = this.x + psize;\n            particle.reverseVelocityX();\n        }\n        if (particle.y + psize > this.y2) {\n            particle.y = this.y2 - psize;\n            particle.reverseVelocityY();\n        }\n        if (particle.y - psize < this.y) {\n            particle.y = this.y + psize;\n            particle.reverseVelocityY();\n        }\n    };\n\n    particleEdgeWrap = (particle) => {\n        const psize = particle.radius;\n        if (particle.x + psize > this.x2) {\n            particle.x = this.x + psize;\n        }\n        if (particle.x - psize < this.x) {\n            particle.x = this.x2 - psize;\n        }\n        if (particle.y + psize > this.y2) {\n            particle.y = this.y + psize;\n        }\n        if (particle.y - psize < this.y) {\n            particle.y = this.y2 - psize;\n        }\n    };\n}\n","// More detailed implementation https://blog.wolfram.com/2016/05/06/computational-stippling-can-machines-do-as-well-as-humans/\nimport tinycolor from 'tinycolor2';\nimport { logInterval, mapRange, TAU } from '../math/math';\nimport { last } from '../utils';\nimport { randomNormalWholeBetween, randomNumberBetween, randomSign, randomWholeBetween } from '../math/random';\n\nconst intervals = logInterval(10, 1, 10);\n\nlet clipping = true;\n\nexport const setTextureClippingMaskEnabled = (v = true) => {\n    clipping = v;\n};\n\nconst getRotatedXYCoords = (x, y, length, theta) => ({\n    x1: x,\n    y1: y,\n    x2: x + length * Math.cos(theta),\n    y2: y + length * Math.sin(theta),\n});\n\nconst getRotatedYCoords = (x, y, length, theta) => ({\n    x1: x,\n    y1: y,\n    x2: x + length, // * Math.cos(theta),\n    y2: y + length * Math.sin(theta),\n});\n\nconst pointLine = (context) => (points, color = 'black', width = 1) => {\n    context.beginPath();\n    context.strokeStyle = tinycolor(color).toRgbString();\n    context.lineWidth = width;\n    context.lineCap = 'butt';\n    context.lineJoin = 'miter';\n\n    points.forEach((coords, i) => {\n        if (i === 0) {\n            context.moveTo(coords[0], coords[1]);\n        } else {\n            context.lineTo(coords[0], coords[1]);\n        }\n    });\n    context.stroke();\n};\n\n// TODO split this fn up\nexport const textureRect = (context) => (\n    x,\n    y,\n    width,\n    height,\n    color = 'black',\n    amount = 5,\n    mode = 'circles2',\n    mult = 1\n) => {\n    if (amount <= 0) return;\n\n    if (clipping) {\n        context.save();\n        const region = new Path2D();\n        region.rect(x, y, width, height);\n        context.clip(region);\n    }\n\n    const quarter = width / 4;\n    const strokeColor = tinycolor(color).toRgbString();\n    const lineWidth = 1;\n    // const numIttr = mapRange(1, 10, 2, 200, amount) * mult;\n    const endValue = mode === 'xhatch' ? 100 : 25;\n    const numIttr = intervals[Math.round(amount) - 1] * mapRange(1, 10, 1, endValue, amount) * mult;\n\n    const maxDim = Math.max(width, height);\n    const maxRadius = maxDim * 0.7;\n\n    for (let i = 0; i < numIttr; i++) {\n        let tx = randomWholeBetween(x, x + width);\n        let ty = randomWholeBetween(y, y + height);\n        let size = randomWholeBetween(quarter, width);\n\n        context.strokeStyle = strokeColor;\n        context.lineWidth = lineWidth;\n        context.beginPath();\n\n        if (mode === 'circles') {\n            context.arc(tx, ty, size, 0, Math.PI * 2, false);\n        } else if (mode === 'circles2') {\n            tx = randomNormalWholeBetween(x, x + width);\n            ty = randomNormalWholeBetween(y, y + height);\n            size = randomWholeBetween(1, maxRadius);\n            context.arc(tx, ty, size, 0, Math.PI * 2, false);\n        } else if (mode === 'xhatch') {\n            const tx2 = tx + size * randomSign();\n            const ty2 = ty + size * randomSign();\n            context.moveTo(tx, ty);\n            context.lineTo(tx2, ty2);\n        }\n\n        context.stroke();\n    }\n    if (clipping) {\n        context.restore();\n    }\n};\n\nexport const textureRectSprials = (context) => (x, y, width, height, color = 'black', amount = 5, mult = 1) => {\n    if (amount <= 0) return;\n\n    const maxDim = Math.max(width, height);\n    const maxRadius = maxDim * 0.7;\n\n    const fillamount = mapRange(1, 10, 30, 150, amount) * mult;\n\n    const numIttr = fillamount; // maxDim * (amount * 0.8);\n    const radIncr = maxRadius / numIttr;\n\n    const thetaIncr = TAU / 50; // Math.floor(amount) * 0.05; // TAU / (Math.floor(amount) * 0.05);\n\n    if (clipping) {\n        context.save();\n        const region = new Path2D();\n        region.rect(x, y, width, height);\n        context.clip(region);\n    }\n\n    const strokeColor = tinycolor(color).toRgbString();\n    const lineWidth = 1;\n\n    context.strokeStyle = strokeColor;\n    context.lineWidth = lineWidth;\n\n    const spirals = intervals[Math.round(amount) - 1] * mapRange(1, 10, 1, 15, amount) * mult;\n    for (let s = 0; s < spirals; s++) {\n        const ox = randomNormalWholeBetween(x, x + width);\n        const oy = randomNormalWholeBetween(y, y + height);\n        let theta = randomNumberBetween(0, TAU);\n        let radius = 0;\n\n        context.beginPath();\n        context.moveTo(ox, oy);\n\n        for (let i = 0; i < numIttr; i++) {\n            radius += radIncr; // + Math.sin(i / 2);\n            theta += thetaIncr;\n            const px = ox + radius * Math.cos(theta);\n            const py = oy + radius * Math.sin(theta);\n            context.lineTo(px, py);\n        }\n\n        context.stroke();\n    }\n    if (clipping) {\n        context.restore();\n    }\n};\n\nexport const textureRectStipple = (context) => (x, y, width, height, color = 'black', amount = 5, theta) => {\n    if (amount <= 0) return;\n    // amount = Math.min(amount, 10);\n    if (clipping) {\n        context.save();\n        const region = new Path2D();\n        region.rect(x, y, width, height);\n        context.clip(region);\n    }\n\n    const strokeColor = tinycolor(color).toRgbString();\n    const size = 3;\n\n    const colStep = width / mapRange(1, 10, 3, width / 3, amount);\n    const rowStep = height / mapRange(1, 10, 3, height / 3, amount);\n\n    context.strokeStyle = strokeColor;\n    context.lineWidth = 2;\n    context.lineCap = 'round';\n\n    theta = theta === undefined ? Math.PI / 3 : theta;\n\n    for (let i = 0; i < width; i += colStep) {\n        for (let j = 0; j < height; j += rowStep) {\n            // about the middle of the cell\n            const tx = x + randomNormalWholeBetween(i, i + colStep);\n            const ty = y + randomNormalWholeBetween(j, j + rowStep);\n\n            const coords = getRotatedYCoords(tx, ty, size, theta);\n\n            const tx2 = coords.x2; // tx + size;\n            const ty2 = coords.y2; // ty + size * -1;\n            context.beginPath();\n            context.moveTo(tx, ty);\n            context.lineTo(tx2, ty2);\n            context.stroke();\n        }\n    }\n\n    if (clipping) {\n        context.restore();\n    }\n};\n\n// TODO needs to getLineIntersectPoint \"nicely\" at the rect area boundaries\n// needs to do a turtle plot since this was based on a plotter effect\nexport const textureRectZigZag = (context) => (\n    x,\n    y,\n    width,\n    height,\n    color = 'black',\n    amount = 5,\n    theta = 0,\n    mult = 1\n) => {\n    if (amount <= 0) return;\n\n    if (clipping) {\n        context.save();\n        const region = new Path2D();\n        region.rect(x, y, width, height);\n        context.clip(region);\n    }\n\n    const points = [];\n\n    const strokeColor = tinycolor(color).toRgbString();\n    const lineWidth = 1;\n\n    const yDelta = width * Math.sin(theta); // height of angle line\n    const yIncrement = height / amount / 2;\n\n    let yincr = 0;\n    const loops = height / yIncrement;\n\n    // keep centered\n    const yOff = yIncrement / 2 - yDelta / 2;\n    let connectSide = 1;\n    let coords = { x1: x, y1: y, x2: x, y2: y };\n    let lastCoords = { x1: x, y1: Math.min(y, y + yOff), x2: x, y2: Math.min(y, y + yOff) };\n\n    // rectFilled(context)(x, y, width, height, '#ddd');\n\n    for (let i = 0; i < loops; i++) {\n        coords = getRotatedYCoords(x, yOff + y + yincr, width, theta);\n\n        // draw bar\n\n        if (yincr === 0) {\n            // line to the top\n            if (coords.y1 > y) {\n                points.push([coords.x1, y]);\n            }\n            points.push([coords.x1, coords.y1]);\n        }\n\n        if (connectSide === 1) {\n            // right\n            points.push([coords.x2, coords.y2]);\n            points.push([coords.x2, coords.y2 + yIncrement]);\n        } else {\n            // left\n            points.push([coords.x1, coords.y1]);\n            points.push([coords.x1, coords.y1 + yIncrement]);\n        }\n\n        yincr += yIncrement;\n        connectSide *= -1;\n        lastCoords = coords;\n    }\n\n    // line to the bottom\n    if (last(points)[1] < y + height) {\n        last(points)[1] = y + height;\n    }\n\n    pointLine(context)(points, strokeColor, lineWidth);\n\n    if (clipping) {\n        context.restore();\n    }\n};\n","import tinycolor from 'tinycolor2';\nimport { mapRange } from '../rndrgen/math/math';\nimport { background } from '../rndrgen/canvas/canvas';\nimport { ratio, scale, orientation } from '../rndrgen/Sketch';\nimport { paperWhite } from '../rndrgen/color/palettes';\nimport { Bitmap } from '../rndrgen/canvas/Bitmap';\nimport sourcePng from '../../media/images/alexander-krivitskiy-2wOEPBkaH7o-unsplash.png';\nimport { pixel } from '../rndrgen/canvas/primatives';\n\n/*\nhttps://larrycarlson.com/collections/wavy-art-prints\n */\n\nexport const larrycarlson02 = () => {\n    const config = {\n        name: 'larrycarlson2',\n        ratio: ratio.square,\n        // orientation: orientation.portrait,\n        scale: scale.standard,\n    };\n\n    let ctx;\n    let canvasWidth;\n    let canvasHeight;\n    let canvasCenterX;\n    let canvasCenterY;\n    let centerRadius;\n    let imageWidth;\n    let imageHeight;\n    let startX;\n    let maxX;\n    let startY;\n    let maxY;\n    const margin = 50;\n    const ribbonThickness = 10;\n\n    const backgroundColor = paperWhite.clone();\n    const image = new Bitmap(sourcePng);\n\n    const colorImageTop = tinycolor('#ffeb00');\n    const colorImageBottom = tinycolor('#01ff4f');\n\n    const colorLinesTop = tinycolor('#ff01d7');\n    const colorLinesBottom = tinycolor('#5600cc');\n\n    const setup = ({ canvas, context }) => {\n        image.init(canvas, context);\n\n        ctx = context;\n        canvasWidth = canvas.width;\n        canvasHeight = canvas.height;\n        canvasCenterX = canvas.width / 2;\n        canvasCenterY = canvas.height / 2;\n        centerRadius = canvas.height / 4;\n\n        imageWidth = canvas.width - margin * 2;\n        imageHeight = canvas.height - margin * 2;\n\n        startX = margin;\n        maxX = canvas.width - margin;\n        startY = margin;\n        maxY = canvas.height - margin;\n\n        background(canvas, context)(backgroundColor);\n    };\n\n    // const circleX = (theta, amp, freq) => Math.cos(theta / freq) * amp;\n    // const circleY = (theta, amp, freq) => Math.sin(theta / freq) * amp;\n\n    const renderImage = () => {\n        const resolution = ribbonThickness / 2;\n        const border = margin / -2;\n        // const freq = 30;\n        // const amp = 1;\n        // let theta = 0;\n        for (let x = startX + border; x < maxX - border; x += resolution) {\n            for (let y = startY + border; y < maxY - border; y += resolution) {\n                const pxcolor = image.pixelColorFromCanvas(x, y);\n                const pxbrightness = pxcolor.getBrightness();\n                const bright = mapRange(128, 255, 0, 50, pxbrightness);\n\n                const color = tinycolor.mix(colorImageTop, colorImageBottom, mapRange(startY, maxY, 0, 100, y));\n\n                const size = resolution;\n\n                if (pxbrightness > 128) color.brighten(bright);\n\n                if (pxbrightness >= 70 && pxbrightness <= 100) {\n                    color.spin(30);\n                }\n\n                if (pxbrightness >= 120 && pxbrightness <= 220) {\n                    // color.spin(-30);\n                }\n\n                // const ox = circleX(theta, amp, freq) + x;\n                // const oy = circleY(theta, amp, freq) + y;\n\n                pixel(ctx)(x, y, color, 'circle', size);\n\n                // theta += 0.25;\n            }\n        }\n    };\n\n    const drawRibbonPoint = (point, isOtherSide) => {\n        const x = point[0];\n        const y = point[1];\n\n        // -2 +1 to keep from overlapping other ribbons and give it a min thickness of 1\n        const size = image.sizeFromPixelBrightness(x, y, ribbonThickness - 2, 128, 255) + 0.75;\n        let jitterX = 0; // size;\n        // let jitterY = 0;\n\n        if (isOtherSide) {\n            jitterX = size * -1;\n            // jitterY = size * -0.25;\n        }\n\n        ctx.lineTo(x + jitterX, y);\n    };\n\n    const drawRibbon = (sideA, color, stroke = false) => {\n        const rColor = tinycolor(color).clone();\n        const gradient = ctx.createLinearGradient(0, startY, 0, maxY);\n        gradient.addColorStop(0, colorLinesTop.toRgbString());\n        gradient.addColorStop(1, colorLinesBottom.toRgbString());\n\n        ctx.beginPath();\n        ctx.moveTo(sideA[0], sideA[0]);\n        sideA.forEach((w) => {\n            drawRibbonPoint(w, false);\n        });\n        sideA.reverse().forEach((w) => {\n            drawRibbonPoint(w, true);\n        });\n        ctx.closePath();\n\n        if (stroke) {\n            ctx.strokeStyle = rColor.darken(70).toRgbString();\n            ctx.lineWidth = 0.75;\n            ctx.stroke();\n        }\n\n        ctx.fillStyle = gradient;\n        ctx.fill();\n    };\n\n    const renderPoints = (points) => {\n        points.forEach((line) => {\n            if (line.length) {\n                drawRibbon(line, 'red', false, 0);\n            }\n        });\n    };\n\n    /*\n    https://www.desmos.com/calculator/rzwar3xxpy\n    y-x = amp * Math.sin((y+x)/freq)\n     */\n    const getPointsDiagSinWave = (xoffset, yoffset) => {\n        const freq = 40; // 30\n        const amp = 15; // 5\n        let y = 0;\n        const a = Math.PI / 3; // angle of the wave, 1 is 45\n        const points = [];\n        for (let x = 0; x < canvasWidth; x++) {\n            const b = x; // Math.sin(x / Math.PI) * 2;\n            // y = amp * Math.sin((y + b) / freq) + x * a;\n            y = amp * Math.sin((y * a + b) / freq) + x * a;\n            const px = x + xoffset;\n            const py = y + yoffset;\n            if (px > startX && px < maxX && py > startY && py < maxY) {\n                points.push([px, py]);\n            }\n        }\n        return points;\n    };\n\n    const draw = ({ canvas, context }) => {\n        const points = [];\n\n        renderImage();\n\n        for (let x = (imageWidth + 100) * -1; x < imageWidth * 2; x += ribbonThickness) {\n            points.push(getPointsDiagSinWave(x, 0));\n        }\n\n        renderPoints(points);\n\n        return -1;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","module.exports = require('./bundle-url').getBundleURL() + \"alexander-krivitskiy-2wOEPBkaH7o-unsplash.c33afb25.png\"","import tinycolor from 'tinycolor2';\nimport { background } from '../rndrgen/canvas/canvas';\nimport { orientation, ratio, scale } from '../rndrgen/sketch';\nimport { bicPenBlue, warmWhite } from '../rndrgen/color/palettes';\nimport { MeanderingRiver } from '../rndrgen/systems/MeanderingRiver';\nimport { chaikinSmooth } from '../rndrgen/math/segments';\nimport { simplexNoise2d } from '../rndrgen/math/attractors';\nimport { getPointsOnCircleOld } from '../rndrgen/math/grids';\nimport { randomNormalWholeBetween } from '../rndrgen/math/random';\nimport { createSplineFromPointArray } from '../rndrgen/math/points';\nimport { pointPathPA } from '../rndrgen/canvas/primatives';\n\n/*\nMeandering River class at ../rndrgen/MeanderingRiver\n */\n\nconst createHorizontalPath = ({ width, height }, startX, startY, steps = 20) => {\n    const coords = [];\n    const incr = Math.round(width / steps);\n    const midx = width / 2;\n    for (let i = startX; i < width; i += incr) {\n        // greater variation in the middle\n        const midDist = Math.round(midx - Math.abs(i - midx));\n        const y = randomNormalWholeBetween(startY - midDist, startY + midDist);\n\n        coords.push([i, y]);\n    }\n    coords.push([width, startY]);\n    return coords;\n};\n\nconst createVerticalPath = ({ width, height }, startX, startY, steps = 20) => {\n    const coords = [];\n    const incr = Math.round(height / steps);\n    const midy = height / 2;\n    for (let i = startY; i < height; i += incr) {\n        // greater variation in the middle\n        const midDist = Math.round(midy - Math.abs(i - midy));\n        const x = randomNormalWholeBetween(startX - midDist, startX + midDist);\n\n        coords.push([x, i]);\n    }\n    coords.push([startX, height]);\n    return coords;\n};\n\nexport const meanderingRiver02 = () => {\n    const config = {\n        name: 'meandering-river-02',\n        ratio: ratio.a3plus,\n        scale: scale.hidpi,\n        orientation: orientation.portrait,\n        // multiplier: 1,\n        // drawLimit: 100,\n    };\n\n    let ctx;\n    let canvasMidX;\n    let canvasMidY;\n    const renderScale = config.scale; // 1 or 2\n    const rivers = [];\n    let time = 0;\n\n    const backgroundColor = warmWhite;\n\n    // const simplex2d = (x, y) => simplexNoise2d(x, y, 0.002);\n    // const simplex3d = (x, y) => simplexNoise3d(x, y, time, 0.0005);\n    // const clifford = (x, y) => cliffordAttractor(canvas.width, canvas.height, x, y);\n    // const jong = (x, y) => jongAttractor(canvas.width, canvas.height, x, y);\n\n    const noise = (x, y) => simplexNoise2d(x, y, 0.002);\n    const maxHistory = 10;\n    const historyStep = 25;\n\n    const wrapped = false;\n\n    const setup = ({ canvas, context }) => {\n        ctx = context;\n        canvasMidX = canvas.width / 2;\n        canvasMidY = canvas.height / 2;\n        background(canvas, context)(backgroundColor);\n        const horizontal = createSplineFromPointArray(createHorizontalPath(canvas, 0, canvasMidY, 40));\n        const vertical = createSplineFromPointArray(createVerticalPath(canvas, canvasMidX, 0, 40));\n        const circle = getPointsOnCircleOld(canvasMidX, canvasMidY, canvasMidX / 2, Math.PI * 4, false);\n\n        const cs = {\n            mixTangentRatio: 0.45,\n            mixMagnitude: 1.25, // 1.75\n            curvemeasure: 4,\n            curvesize: 5,\n            pointremove: 5,\n            oxbowProx: 2.5,\n        };\n\n        const circleRiver = new MeanderingRiver(circle, {\n            maxHistory,\n            storeHistoryEvery: historyStep,\n            fixedEndPoints: 1,\n            influenceLimit: 0,\n            wrapEnd: true,\n            handleOxbows: true,\n\n            mixTangentRatio: cs.mixTangentRatio,\n            mixMagnitude: cs.mixMagnitude,\n            oxbowProx: cs.oxbowProx,\n            oxbowPointIndexProx: cs.curvemeasure,\n            measureCurveAdjacent: cs.curvemeasure,\n            curveSize: cs.curvesize,\n            pointRemoveProx: cs.pointremove,\n\n            // pushFlowVectorFn: flowRightToMiddle(0.5, canvasMidY),\n\n            noiseFn: noise,\n            noiseMode: 'mix',\n            noiseStrengthAffect: 0,\n            mixNoiseRatio: 0.3,\n        });\n\n        const verticalRiver = new MeanderingRiver(vertical, {\n            maxHistory,\n            storeHistoryEvery: historyStep,\n            fixedEndPoints: 1,\n            influenceLimit: 0,\n            wrapEnd: wrapped,\n            handleOxbows: true,\n\n            mixTangentRatio: cs.mixTangentRatio,\n            mixMagnitude: cs.mixMagnitude,\n            oxbowProx: cs.oxbowProx,\n            oxbowPointIndexProx: cs.curvemeasure,\n            measureCurveAdjacent: cs.curvemeasure,\n            curveSize: cs.curvesize,\n            pointRemoveProx: cs.pointremove,\n\n            // pushFlowVectorFn: flowRightToMiddle(0.5, canvasMidY),\n\n            noiseFn: noise,\n            noiseMode: 'mix',\n            noiseStrengthAffect: 0,\n            mixNoiseRatio: 0.3,\n        });\n\n        const horizontalRiver = new MeanderingRiver(horizontal, {\n            maxHistory,\n            storeHistoryEvery: historyStep,\n            fixedEndPoints: 1,\n            influenceLimit: 0,\n            wrapEnd: wrapped,\n            handleOxbows: true,\n\n            mixTangentRatio: cs.mixTangentRatio,\n            mixMagnitude: cs.mixMagnitude,\n            oxbowProx: cs.oxbowProx,\n            oxbowPointIndexProx: cs.curvemeasure,\n            measureCurveAdjacent: cs.curvemeasure,\n            curveSize: cs.curvesize,\n            pointRemoveProx: cs.pointremove,\n\n            // pushFlowVectorFn: flowRightToMiddle(0.5, canvasMidY),\n\n            noiseFn: noise,\n            noiseMode: 'mix',\n            noiseStrengthAffect: 0,\n            mixNoiseRatio: 0.3,\n        });\n\n        rivers.push(circleRiver, horizontalRiver);\n    };\n\n    const draw = ({ canvas, context }) => {\n        // background(canvas, context)(backgroundColor.clone().setAlpha(0.005));\n        // renderField(canvas, context, noise, 'rgba(0,0,0,.5)', 30, 15);\n\n        // https://colorhunt.co/palette/264684\n        const riverColor = [bicPenBlue, tinycolor('#fed049')];\n        const closed = [true, false];\n\n        // step\n        rivers.forEach((r) => {\n            for (let i = 0; i < renderScale; i++) {\n                r.step();\n            }\n        });\n\n        // main\n        rivers.forEach((r, i) => {\n            const c = riverColor[i].clone().setAlpha(0.15); // tinycolor(`hsl(${time},70,50)`);\n\n            // r.oxbows.forEach((o) => {\n            //     // const w = Math.abs(mapRange(0, o.startLength, riverWeight[i] / 2, riverWeight[i], o.points.length));\n            //     pointPathPA(ctx)(o.points, c, 1);\n            // });\n\n            const points = chaikinSmooth(r.points, 4);\n            if (points.length) pointPathPA(ctx)(points, c, 2, closed[i]);\n        });\n\n        time += 0.25;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import { chaikinSmooth, linesIntersect, mengerCurvature } from '../math/segments';\nimport { defaultValue } from '../utils';\nimport { degreesToRadians, lerp, mapRange, percentage, uvFromAngle } from '../math/math';\nimport { Vector } from '../math/Vector';\nimport { arrayPointArrayToVectorArray, pointDistance, arrayVectorToPointArray, trimPointArray } from '../math/points';\n\n/*\nBased on Meander by Robert Hodgin\nhttp://roberthodgin.com/project/meander\n\nAnd Eric's recreations\nhttps://www.reddit.com/r/generative/comments/lfsl8t/pop_art_meandering_river/\n */\n\n/*\nThe settings for the effect are very particular.  Too many points tends to result in \"mushrooming\" of the flow and\non the extreme, oxbows everywhere. But this can be very interesting! Too too few will cause the flow to flatten.\n\n    - Curve measure larger will create larger bubbles\n    - Curve size, even larger bubbles\n    - Seg curve multiplier should be <1\n    - If point remove prox is too low line will create mushrooms. Should be curve size or a few decimal points under\n    - If insertion factor is > 1, then the line will just be straight\n    - Mix mag should be incr in small sizes\n*/\n\n/*\nSettings for a nice medium high turbulence river\n\n// Convenience settings object\nconst cs = {\n    mixTangentRatio: 0.45,\n    mixMagnitude: 1.75,\n    curvemeasure: 4,\n    curvesize: 5,\n    pointremove: 5,\n    oxbowProx: 2.5,\n};\n\nconst mediumRiver = new MeanderingRiver(points, {\n    maxHistory,\n    storeHistoryEvery: historyStep,\n    fixedEndPoints: 3,\n    influenceLimit: 0,\n\n    mixTangentRatio: cs.mixTangentRatio,\n    mixMagnitude: cs.mixMagnitude,\n    oxbowProx: cs.oxbowProx,\n    oxbowPointIndexProx: cs.curvemeasure,\n    measureCurveAdjacent: cs.curvemeasure,\n    curveSize: cs.curvesize,\n    pointRemoveProx: cs.pointremove,\n\n    pushFlowVectorFn: flowRightToMiddle(0.5, canvasMidY),\n\n    noiseFn: noise,\n    noiseMode: 'mix',\n    noiseStrengthAffect: 0,\n    mixNoiseRatio: 0.3,\n});\n\n// history\nrivers.forEach((r, i) => {\n    for (let h = r.history.length - 1; h >= 0; h--) {\n        // const a = mapRange(0, maxHistory, 0.35, 0.1, h);\n        const b = mapRange(0, maxHistory, 5, 20, h);\n        const hcolor = tinycolor.mix(riverColor, backgroundColor, mapRange(0, maxHistory, 0, 100, h)).darken(b);\n        // const hcolor = riverColor.clone().darken(b);\n        const hpoints = r.history[h].channel; // smoothPoints(r.history[h].channel, 8, 3);\n        pointPathPA(ctx)(hpoints, hcolor, riverWeight[i] * 2);\n    }\n});\n\n */\n\nexport class MeanderingRiver {\n    constructor(initPoints, props) {\n        this.startingPoints = initPoints;\n        this.pointVectors = arrayPointArrayToVectorArray(initPoints);\n        this.oxbows = [];\n\n        // Toggle oxbow checking\n        this.handleOxbows = defaultValue(props, 'handleOxbows', true);\n\n        // Wrap around end points circles/closed shapes\n        this.wrapEnd = defaultValue(props, 'wrapEnd', false);\n\n        // %age of line length to fix at each end. Must be >= 1\n        // Setting to 1 will be fixing the first 1 point only, not percentage\n        this.fixedEndPoints = defaultValue(props, 'fixedEndPoints', 1);\n        // how many adjacent points to use to measure the average curvature\n        this.measureCurveAdjacent = defaultValue(props, 'measureCurveAdjacent', 30);\n        // Ineffective multiply the measured curvature vector magnitude to enhance effect\n        this.segCurveMultiplier = defaultValue(props, 'segCurveMultiplier', 1);\n\n        // How much to blend tangent and bitangent, 0 = tangent, 1 = bitangent\n        this.mixTangentRatio = defaultValue(props, 'mixTangentRatio', 0.5);\n        // Magnitude of the mixed vector, increase the effect, < slower\n        this.mixMagnitude = defaultValue(props, 'mixMagnitude', 0);\n        // Limit the influence vector,  less than 1, slower. > 1 no affect\n        this.influenceLimit = defaultValue(props, 'influenceLimit', 0);\n\n        // Additional vector to push the flow in a direction\n        this.pushFlowVectorFn = defaultValue(props, 'pushFlowVectorFn', undefined);\n\n        // Add new points if the distance between is larger\n        this.curveSize = defaultValue(props, 'curveSize', 2);\n        // Multiplier for the amount of new points to add\n        this.insertionFactor = defaultValue(props, 'insertionFactor', 1);\n        // Remove points closer than this\n        this.pointRemoveProx = defaultValue(props, 'pointRemoveProx', this.curveSize * 0.8);\n\n        // Point proximity to create a new oxbow and ...\n        this.oxbowProx = defaultValue(props, 'oxbowProx', this.curveSize);\n        // If points are not this close than create oxbow\n        this.oxbowPointIndexProx = Math.ceil(this.measureCurveAdjacent * 1.5);\n\n        // this.oxbowShrinkRate = defaultValue(props, 'oxbowShrinkRate', 25);\n\n        // Additional flow influence. mix, only, scaleMag, flowInTo\n        this.noiseMode = defaultValue(props, 'noiseMode', 'mix'); // mix or only (mix and exclude less than strength)\n        // Passed x,y returns a small -/+ value\n        this.noiseFn = defaultValue(props, 'noiseFn', undefined);\n        // Values returned from noise fn less than this will be ignored\n        this.noiseStrengthAffect = defaultValue(props, 'noiseStrengthAffect', 3); // only noise theta > will cause drift\n        // Ratio to mix in noise with the calculated influence vector. Best kept less than .3\n        this.mixNoiseRatio = defaultValue(props, 'mixNoiseRatio', 0.1);\n\n        // Store history of the past flows\n        this.steps = 0;\n        this.maxHistory = defaultValue(props, 'maxHistory', 10);\n        this.storeHistoryEvery = defaultValue(props, 'storeHistoryEvery', 2);\n        this.history = [];\n        this.running = true;\n    }\n\n    get points() {\n        return arrayVectorToPointArray(this.pointVectors);\n    }\n\n    addToHistory(ox, channel) {\n        if (this.steps % this.storeHistoryEvery === 0) {\n            this.history.unshift({ oxbows: ox, channel });\n            if (this.history.length > this.maxHistory) {\n                this.history = this.history.slice(0, this.maxHistory);\n            }\n        }\n    }\n\n    // Average Menger curvature of the segments\n    averageMCurvature(points) {\n        const sum = points.reduce((diffs, point, i) => {\n            const prev = i - 1;\n            const next = i + 1;\n            if (prev >= 0 && next < points.length) {\n                diffs += mengerCurvature(points[prev], point, points[next]);\n            }\n            return diffs;\n        }, 0);\n        return degreesToRadians(sum / points.length);\n    }\n\n    // get x# of points on either side of the given point\n    getPointsToMeasure(i, points) {\n        const len = this.measureCurveAdjacent;\n        let min = 0;\n        let max = points.length;\n        // if (this.wrapEnd) {\n        //     // Circular - resulting in poor curve values\n        //     const start = getArrayValuesFromStart(points, i, len);\n        //     const end = getArrayValuesFromEnd(points, i, len);\n        //     return start.concat(end);\n        // }\n        min = i < len ? 0 : i - len;\n        max = i > points.length - len ? points.length : i + len;\n        return points.slice(min, max);\n    }\n\n    // The main part of the effect - most important parts\n    // 1. The curvature of a portion of the points is measured and averaged\n    // 2. The angle/tangent of the current and next points is measured\n    // 3. A perpendicular bitangent is calculated and it's magnitude set to the curvature\n    // 4. A mix vector is created from a blend of the tangent and bitangent\n    curvatureInfluence(point, i, allPoints) {\n        const curvature = this.averageMCurvature(this.getPointsToMeasure(i, allPoints)) * this.segCurveMultiplier;\n        const curveDirection = curvature < 0 ? 1 : -1;\n\n        let nextPoint = allPoints[i + 1];\n\n        if (!nextPoint && this.wrapEnd) {\n            // If wrapped, the next point at the end is the start\n            nextPoint = allPoints[0];\n        }\n\n        const tangent = nextPoint.sub(point);\n        const biangle = tangent.angle() + 1.5708 * curveDirection;\n        const bitangent = uvFromAngle(biangle).setMag(Math.abs(curvature));\n\n        const a = tangent.normalize();\n        const b = bitangent.normalize();\n        let mVector = a.mix(b, this.mixTangentRatio);\n\n        // Noise to add interesting extra flows\n        if (this.noiseFn) {\n            const t = this.noiseFn(point.x, point.y);\n\n            if (this.noiseMode === 'mix' && Math.abs(t) > this.noiseStrengthAffect) {\n                // Mix the strength of the noise\n                const n = uvFromAngle(t);\n                mVector = mVector.mix(n, this.mixNoiseRatio);\n            } else if (this.noiseMode === 'flowInTo') {\n                // \"Flow\" into lower areas, zero out high areas\n                if (t < 0) {\n                    const n = uvFromAngle(t);\n                    mVector = mVector.mix(n, this.mixNoiseRatio);\n                } else {\n                    // TODO scale down based on noise, not zero\n                    mVector = new Vector(0, 0);\n                }\n            } else if (this.noiseMode === 'scaleMag') {\n                const nscale = mapRange(0, this.noiseStrengthAffect, 5, 1, 3, Math.abs(t));\n                mVector = mVector.setMag(nscale);\n            }\n        }\n\n        // Increase the strength\n        if (this.mixMagnitude) {\n            mVector = mVector.setMag(this.mixMagnitude);\n        }\n\n        // Limit the length\n        if (this.influenceLimit > 0) {\n            mVector = mVector.limit(this.influenceLimit);\n        }\n\n        return mVector;\n    }\n\n    // Move the points\n    meanderLinear(points) {\n        // Slice the array in to points to affect (mid) and to not (start and end)\n        const pct = this.fixedEndPoints === 1 ? 1 : Math.max(percentage(points.length, this.fixedEndPoints), 1);\n        const fixedPointsPct = pct;\n\n        const startIndex = fixedPointsPct;\n        const startIndexPoints = points.slice(0, startIndex);\n        const endIndex = points.length - fixedPointsPct;\n        const endIndexPoints = points.slice(endIndex, points.length);\n\n        const middlePoints = points.slice(startIndex, endIndex);\n        const influencedPoints = middlePoints.map((point, i) => {\n            const mixVector = this.curvatureInfluence(point, i + startIndex, points);\n            let infPoint = point.add(mixVector);\n            // Additional motion to the point vectors to push around the screen, sim flows in directions, keep towards\n            // the center of the screen, etc.\n            if (this.pushFlowVectorFn) {\n                const pushVector = this.pushFlowVectorFn(point, mixVector);\n                infPoint = infPoint.add(pushVector);\n            }\n            return infPoint;\n        });\n\n        return startIndexPoints.concat(influencedPoints).concat(endIndexPoints);\n    }\n\n    meanderWrapped(points) {\n        let influencedPoints = [];\n\n        if (points.length > 3) {\n            influencedPoints = points.map((point, i) => {\n                const mixVector = this.curvatureInfluence(point, i, points);\n                let infPoint = point.add(mixVector);\n                // Additional motion to the point vectors to push around the screen, sim flows in directions, keep towards\n                // the center of the screen, etc.\n                if (this.pushFlowVectorFn) {\n                    const pushVector = this.pushFlowVectorFn(point, mixVector);\n                    infPoint = infPoint.add(pushVector);\n                }\n                return infPoint;\n            });\n        } else {\n            // Lines crossed and there were cut off/oxbowed\n            this.running = false;\n            console.log('Meander crossed, stopping');\n        }\n\n        return influencedPoints;\n    }\n\n    canRemovePoint(i, points) {\n        if (this.wrapEnd) {\n            // TODO Should be able to remove the first and last?\n        }\n        const fixed = this.fixedEndPoints || 1;\n        return i > fixed && i < points.length - fixed;\n    }\n\n    // If points are too far apart, add extra points to allow for expansion\n    // If they're too close, remove them to remove uneccessary information\n    // Too many points too close together will trash performance and cause many many oxbows to form w/ short segments\n    adjustPointsSpacing(points) {\n        return points.reduce((acc, point, i) => {\n            if (i === 0 || (i === points.length - 1 && !this.wrapEnd)) {\n                acc.push(point);\n                return acc;\n            }\n\n            let next = points[i + 1];\n\n            if (this.wrapEnd && !next) next = points[0];\n\n            const distance = pointDistance(point, next);\n\n            if (distance > this.curveSize) {\n                // Add points\n                const numInsertPoints = Math.round((distance / this.curveSize) * this.insertionFactor) + 1;\n                for (let k = 0; k < numInsertPoints; k++) {\n                    const ratio = (1 / numInsertPoints) * k;\n                    const nx = lerp(point.x, next.x, ratio);\n                    const ny = lerp(point.y, next.y, ratio);\n                    acc.push(new Vector(nx, ny));\n                }\n            } else if (this.canRemovePoint(i, points) && distance < this.pointRemoveProx) {\n                // Remove points\n            } else {\n                acc.push(point);\n            }\n            return acc;\n        }, []);\n    }\n\n    checkForOxbows(points) {\n        const newPoints = [];\n        for (let i = 0; i < points.length; i++) {\n            const point = points[i];\n            newPoints.push(point);\n            for (let j = i; j < points.length; j++) {\n                // exclude first and last if it's wrapping\n                if ((this.wrapEnd && i === 0) || j === 0 || i === points.length - 1 || j === points.length - 1)\n                    continue;\n\n                const next = points[j];\n                const dist = pointDistance(point, next);\n\n                // Check the proximity of the points on the screen and their proximity in the points array\n                if (dist < this.oxbowProx && Math.abs(i - j) > this.oxbowPointIndexProx) {\n                    newPoints.push(next);\n                    let oxpoints = arrayVectorToPointArray(points.slice(i, j));\n                    oxpoints = chaikinSmooth(trimPointArray(oxpoints, 3), 3);\n                    this.oxbows.push({ points: oxpoints, startLength: oxpoints.length });\n                    // Skip i ahead to j since these points were removed\n                    i = j;\n                }\n            }\n        }\n        return newPoints;\n    }\n\n    // Shrink the oxbows so the \"evaporate\"\n    // TODO - shrink distance between points not just cut off of the end\n    shrinkOxbows(oxbowArr) {\n        return oxbowArr.reduce((oxacc, oxbow) => {\n            const oxpoints = oxbow.points;\n            if (oxpoints.length > 1) {\n                const shrinkPct = 1; // Math.ceil(this.oxbowShrinkRate / oxpoints.length);\n                oxbow.points = oxpoints.reduce((ptacc, point, i) => {\n                    // Check check each channel segment for intersection with an oxbow segment\n                    // If it intersects, remove it\n                    const intersect = this.pointVectors.reduce((acc, cp, k) => {\n                        if (!acc) {\n                            const np = this.pointVectors[k + 1];\n                            const nop = oxpoints[i + 1];\n                            if (np && nop) {\n                                acc = linesIntersect(cp.x, cp.y, np.x, np.y, point[0], point[1], nop[0], nop[1]);\n                            }\n                        }\n                        return acc;\n                    }, false);\n\n                    if (!intersect) {\n                        // remove the first and last point\n                        if (i > shrinkPct && i < oxbow.points.length - shrinkPct) {\n                            ptacc.push(point);\n                        }\n                    }\n\n                    return ptacc;\n                }, []);\n                oxacc.push(oxbow);\n            }\n            return oxacc;\n        }, []);\n    }\n\n    // Execute one step\n    step() {\n        // Running stops if the line crosses it self at the ends and the whole segment is cut ad becomes an oxbow\n        if (this.running) {\n            // influence segments to sim flow and process points\n            let newPoints = this.wrapEnd\n                ? this.meanderWrapped(this.pointVectors)\n                : this.meanderLinear(this.pointVectors);\n            newPoints = this.adjustPointsSpacing(newPoints);\n            if (this.handleOxbows) newPoints = this.checkForOxbows(newPoints);\n\n            this.pointVectors = newPoints;\n\n            if (this.handleOxbows) this.oxbows = this.shrinkOxbows(this.oxbows);\n\n            // Record history\n            this.addToHistory(this.oxbows, arrayVectorToPointArray(this.pointVectors));\n            this.steps++;\n        } else if (this.handleOxbows) this.oxbows = this.shrinkOxbows(this.oxbows);\n    }\n}\n\nexport const flowRight = (p, m) => new Vector(1, 0);\n\nexport const flowDown = (p, m) => new Vector(0, 1);\n\nexport const flowRightToMiddle = (f, mid) => (p, m) => {\n    const dist = Math.abs(mid - p.y);\n    let y = mapRange(0, mid / 2, 0, f, dist);\n    if (p.y > mid) {\n        y *= -1;\n    }\n    return new Vector(1, y);\n};\n","import { Vector } from './Vector';\nimport { midpoint, pointArrayToPointObject, pointDistance, pointsOrientation } from './points';\n\n// https://www.xarg.org/2010/02/reduce-the-length-of-a-line-segment-by-a-certain-amount/\nexport const reduceLineFromStart = (p1, p2, r) => {\n    const dx = p2.x - p1.x;\n    const dy = p2.y - p1.y;\n    const mag = Math.sqrt(dx * dx + dy * dy);\n    return {\n        x: p1.x + (r * dx) / mag,\n        y: p1.y + (r * dy) / mag,\n    };\n};\n\nexport const reduceLineFromEnd = (p1, p2, r) => {\n    const dx = p2.x - p1.x;\n    const dy = p2.y - p1.y;\n    const mag = Math.sqrt(dx * dx + dy * dy);\n    return {\n        x: p2.x - (r * dx) / mag,\n        y: p2.y - (r * dy) / mag,\n    };\n};\n\nexport const reduceLineEqually = (p1, p2, r) => {\n    const r2 = r / 2;\n    const dx = p2.x - p1.x;\n    const dy = p2.y - p1.y;\n    const mag = Math.sqrt(dx * dx + dy * dy);\n    return [\n        {\n            x: p1.x + (r2 * dx) / mag,\n            y: p1.y + (r2 * dy) / mag,\n        },\n        {\n            x: p2.x - (r2 * dx) / mag,\n            y: p2.y - (r2 * dy) / mag,\n        },\n    ];\n};\n\nexport const lineSlope = (p1, p2) => (p2.y - p1.y) / (p2.x - p1.x);\n\n// https://github.com/Jam3/chaikin-smooth/blob/master/index.js\nexport const chaikinSmooth = (input, itr = 1) => {\n    if (itr === 0) return input;\n    const output = [];\n\n    for (let i = 0; i < input.length - 1; i++) {\n        const p0 = input[i];\n        const p1 = input[i + 1];\n        const p0x = p0[0];\n        const p0y = p0[1];\n        const p1x = p1[0];\n        const p1y = p1[1];\n\n        const Q = [0.75 * p0x + 0.25 * p1x, 0.75 * p0y + 0.25 * p1y];\n        const R = [0.25 * p0x + 0.75 * p1x, 0.25 * p0y + 0.75 * p1y];\n        output.push(Q);\n        output.push(R);\n    }\n\n    return itr === 1 ? output : chaikinSmooth(output, itr - 1);\n};\n\n// For closed shapes (circles) handle the ends\nexport const chaikinSmooth2 = (input, itr = 1, endOffs = 1) => {\n    if (itr === 0) return input;\n    const output = [];\n\n    for (let i = 0; i < input.length; i++) {\n        const p0 = input[i];\n        let p1;\n        if (i === input.length - 1) {\n            p1 = input[endOffs];\n        } else {\n            p1 = input[i + 1];\n        }\n        const p0x = p0[0];\n        const p0y = p0[1];\n        const p1x = p1[0];\n        const p1y = p1[1];\n\n        const Q = [0.75 * p0x + 0.25 * p1x, 0.75 * p0y + 0.25 * p1y];\n        const R = [0.25 * p0x + 0.75 * p1x, 0.25 * p0y + 0.75 * p1y];\n        output.push(Q);\n        output.push(R);\n    }\n\n    return itr === 1 ? output : chaikinSmooth(output, itr - 1, endOffs);\n};\n\n// https://stackoverflow.com/questions/9043805/test-if-two-lines-intersect-javascript-function\n// returns true iff the line from (a,b)->(c,d) intersects with (p,q)->(r,s)\nexport const linesIntersect = (a, b, c, d, p, q, r, s) => {\n    const det = (c - a) * (s - q) - (r - p) * (d - b);\n    if (det === 0) {\n        return false;\n    }\n    const lambda = ((s - q) * (r - a) + (p - r) * (s - b)) / det;\n    const gamma = ((b - d) * (r - a) + (c - a) * (s - b)) / det;\n    return lambda > 0 && lambda < 1 && gamma > 0 && gamma < 1;\n};\n\n// line intercept math by Paul Bourke http://paulbourke.net/geometry/pointlineplane/\n// Determine the intersection point of two line segments Return FALSE if the lines don't getLineIntersectPoint\nexport const getLineIntersectPoint = (x1, y1, x2, y2, x3, y3, x4, y4) => {\n    // Check if none of the lines are of length 0\n    if ((x1 === x2 && y1 === y2) || (x3 === x4 && y3 === y4)) {\n        return false;\n    }\n\n    const denominator = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n\n    // Lines are parallel\n    if (denominator === 0) {\n        return false;\n    }\n\n    const ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator;\n    const ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denominator;\n\n    // is the intersection along the segments\n    if (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n        return false;\n    }\n\n    // Return a object with the x and y coordinates of the intersection\n    const x = x1 + ua * (x2 - x1);\n    const y = y1 + ua * (y2 - y1);\n\n    return { x, y };\n};\n\n// Menger curvature of a triple of points in n-dimensional Euclidean space Rn is the reciprocal of\n// the radius of the circleOld that passes through the three points\nexport const mengerCurvature = (p1, p2, p3) => {\n    // https://stackoverflow.com/questions/41144224/calculate-curvature-for-3-points-x-y\n    // possible alternate https://www.mathsisfun.com/geometry/herons-formula.html\n    const triangleArea2 = (a, b, c) => (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x);\n\n    const t4 = 2 * triangleArea2(p1, p2, p3);\n    const la = pointDistance(p1, p2);\n    const lb = pointDistance(p2, p3);\n    const lc = pointDistance(p3, p1);\n    return t4 / (la * lb * lc);\n};\n\n/*\nexport const segment = (p1,p2) => ({\n        start: p1,\n        end: p2,\n    });\n\nexport const segmentFromPA = (p1,p2) => segment(pointArrayToPointObject(p1), pointArrayToPointObject(p2))\n */\n\nexport const segment = (x1, y1, x2, y2) => {\n    const start = new Vector(x1, y1);\n    const end = new Vector(x2, y2);\n    const mp = midpoint(start, end);\n    const mid = new Vector(mp.x, mp.y);\n    const orientation = pointsOrientation(start, end);\n    const length = pointDistance(start, end);\n    return { start, end, orientation, mid, length };\n};\n\nexport const segmentOrientation = ({ start, end }) => pointsOrientation(start, end);\n\nexport const segmentFromPoint = (p1, p2) => segment(p1.x, p1.y, p2.x, p2.y);\n\nexport const segmentsFromPoints = (points) => {\n    const seg = [];\n    for (let i = 0; i < points.length - 1; i++) {\n        const next = i + 1;\n        seg.push(segment(points[i][0], points[i][1], points[next][0], points[next][1]));\n    }\n    return seg;\n};\n\nexport const segArrayToPointsArray = (segs) =>\n    segs.reduce((acc, s) => {\n        const p = [\n            [s.start.x, s.start.y],\n            [s.end.x, s.end.y],\n        ];\n        acc = acc.concat(p);\n        return acc;\n    }, []);\n\nexport const segmentsIntersect = (a, b) =>\n    linesIntersect(a.start.x, a.start.y, a.end.x, a.end.y, b.start.x, b.start.y, b.end.x, b.end.y);\n\n// Remove every skip points from a segment to simplify\nexport const trimSegments = (segs, skip = 2) =>\n    segs.reduce((acc, s, i) => {\n        if (i === 0 || i === segs.length - 1) {\n            acc.push(s);\n        } else if (i % skip === 0) {\n            acc.push(s);\n        }\n        return acc;\n    }, []);\n\n// export const connectSegments = (segs) =>\n//     segs.map((s, i) => {\n//         if (i === segs.length - 1) {\n//             return s;\n//         }\n//         const next = segs[i + 1];\n//\n//         const distance = pointDistance({ x: s.end.x, y: s.end.y }, { x: next.start.x, y: s.start.y });\n//         if (distance > 1) {\n//             s.end = new Vector(next.start.x, next.start.y);\n//         }\n//         return s;\n//     });\n\n// For array of points from segments, return the mid point of the segment\n// export const getSegPointsMid = (points) => {\n//     const p = [];\n//     for (let i = 0; i < points.length; i += 2) {\n//         const s = points[i];\n//         const e = points[i + 1];\n//         if (e) {\n//             const midX = s[0] + (e[0] - s[0]) * 0.5;\n//             const midY = s[1] + (e[1] - s[1]) * 0.5;\n//             p.push([midX, midY]);\n//         } else {\n//             p.push(s);\n//         }\n//     }\n//     // last end point\n//     p.push(last(points));\n//     return p;\n// };\n","import tinycolor from 'tinycolor2';\nimport { mapRange } from '../rndrgen/math/math';\nimport { background, strokeDash } from '../rndrgen/canvas/canvas';\nimport { orientation, ratio, scale } from '../rndrgen/Sketch';\nimport { bicPenBlue, warmWhite } from '../rndrgen/color/palettes';\nimport { MeanderingRiver, flowRightToMiddle } from '../rndrgen/systems/MeanderingRiver';\nimport { chaikinSmooth } from '../rndrgen/math/segments';\nimport { simplexNoise2d } from '../rndrgen/math/attractors';\nimport { getPointsOnCircleOld } from '../rndrgen/math/grids';\nimport { renderFieldColor, renderFieldContour } from '../rndrgen/canvas/fields';\nimport { randomNormalWholeBetween } from '../rndrgen/math/random';\nimport { createSplineFromPointArray } from '../rndrgen/math/points';\nimport { pointPathPA } from '../rndrgen/canvas/primatives';\nimport { renderIsolines } from '../rndrgen/systems/marchingSquares';\n\n/*\nMeandering River class at ../rndrgen/MeanderingRiver\n */\n\nconst createHorizontalPath = ({ width, height }, startX, startY, steps = 20) => {\n    const coords = [];\n    const incr = Math.round(width / steps);\n    const midx = width / 2;\n    for (let i = startX; i < width; i += incr) {\n        // greater variation in the middle\n        const midDist = Math.round(midx - Math.abs(i - midx));\n        const y = randomNormalWholeBetween(startY - midDist, startY + midDist);\n\n        coords.push([i, y]);\n    }\n    coords.push([width, startY]);\n    return coords;\n};\n\nexport const meanderingRiver01 = () => {\n    const config = {\n        name: 'meandering-river-01',\n        ratio: ratio.a3plus,\n        scale: scale.hidpi,\n        orientation: orientation.landscape,\n    };\n\n    let ctx;\n    let canvasMidX;\n    let canvasMidY;\n    const renderScale = config.scale; // 1 or 2\n    const rivers = [];\n    let time = 0;\n\n    const backgroundColor = warmWhite;\n\n    const riverColor = warmWhite.clone().brighten(20);\n    const oxbowColor = riverColor.clone();\n\n    const flatColor = backgroundColor.clone().darken(10);\n    const isolowColor = flatColor.clone().darken(2);\n    const isohighColor = backgroundColor.clone().brighten(10);\n\n    const tintingColor = tinycolor('hsl(38, 38%, 64%)');\n    const palette = [\n        tinycolor('hsl(97, 9%, 73%)'),\n        tinycolor('hsl(51, 7%, 38%)'),\n        tinycolor('hsl(19, 39%, 47%)'),\n        tinycolor('hsl(166, 39%, 59%)'),\n        tinycolor.mix('hsl(97, 9%, 73%)', tintingColor, 25),\n        tinycolor.mix('hsl(51, 7%, 38%)', tintingColor, 25),\n        tinycolor.mix('hsl(19, 39%, 47%)', tintingColor, 25),\n        tinycolor.mix('hsl(166, 39%, 59%)', tintingColor, 25),\n        tinycolor.mix('hsl(97, 9%, 73%)', tintingColor, 55),\n        tinycolor.mix('hsl(51, 7%, 38%)', tintingColor, 55),\n        tinycolor.mix('hsl(19, 39%, 47%)', tintingColor, 55),\n        tinycolor.mix('hsl(166, 39%, 59%)', tintingColor, 55),\n        tinycolor.mix('hsl(97, 9%, 73%)', tintingColor, 75),\n        tinycolor.mix('hsl(51, 7%, 38%)', tintingColor, 75),\n        tinycolor.mix('hsl(19, 39%, 47%)', tintingColor, 75),\n        tinycolor.mix('hsl(166, 39%, 59%)', tintingColor, 75),\n    ].reverse();\n\n    let noiseScale = 0.001 / renderScale;\n    const noise = (x, y) => simplexNoise2d(x, y, noiseScale);\n    const maxHistory = 15;\n    const historyStep = 15;\n\n    const setup = ({ canvas, context }) => {\n        ctx = context;\n        canvasMidX = canvas.width / 2;\n        canvasMidY = canvas.height / 2;\n\n        const horizpoints = createSplineFromPointArray(createHorizontalPath(canvas, 0, canvasMidY, 15));\n\n        const riverScale = 1.25;\n\n        noiseScale /= riverScale * 2;\n\n        const horizontal = new MeanderingRiver(horizpoints, {\n            maxHistory,\n            storeHistoryEvery: historyStep,\n            fixedEndPoints: 2,\n\n            oxbowProx: 3 * renderScale,\n            oxbowPointIndexProx: 4 * renderScale,\n\n            mixTangentRatio: 0.7,\n            mixMagnitude: 1.5 * riverScale,\n\n            measureCurveAdjacent: 6 * renderScale * riverScale,\n            curveSize: 4 * renderScale * riverScale,\n            pointRemoveProx: 4 * renderScale * riverScale,\n\n            pushFlowVectorFn: flowRightToMiddle(0.6, canvasMidY),\n\n            noiseFn: noise,\n            noiseMode: 'flowInTo',\n            noiseStrengthAffect: 0,\n            mixNoiseRatio: 0.3,\n        });\n\n        rivers.push(horizontal);\n\n        // Run some steps before render to smooth lines\n        for (let i = 0; i < 50; i++) {\n            rivers.forEach((r) => {\n                r.step();\n            });\n        }\n\n        background(canvas, context)(backgroundColor);\n        // renderFieldColor(canvas, context, noise, 100, flatColor, backgroundColor, 4);\n\n        const slices = [\n            { nmin: -7, nmax: 7, omin: -1, omax: 1, color: isohighColor },\n            { nmin: -6, nmax: -4, omin: -1, omax: 1, color: isolowColor },\n            { nmin: -4, nmax: -2, omin: -1, omax: 1, color: isolowColor },\n            { nmin: -2, nmax: 0, omin: -1, omax: 1, color: isolowColor },\n            { nmin: 0, nmax: 2, omin: -1, omax: 1, color: isohighColor },\n            { nmin: 2, nmax: 4, omin: -1, omax: 1, color: isohighColor },\n            { nmin: 4, nmax: 6, omin: -1, omax: 1, color: isohighColor },\n        ];\n\n        renderIsolines(context, canvas, noise, 50 * renderScale, 100 * renderScale, true, slices);\n    };\n\n    const outlineThickness = 3 * renderScale;\n    const riverSmoothing = 4;\n    const riverWeight = 20 * renderScale;\n\n    const draw = ({ canvas, context }) => {\n        // step\n        rivers.forEach((r) => {\n            for (let i = 0; i < renderScale; i++) {\n                r.step();\n            }\n        });\n\n        const outlineColor = palette[Math.round(time * 0.03) % palette.length]; // .clone().setAlpha(0.75);\n\n        // outline\n        rivers.forEach((r, i) => {\n            r.oxbows.forEach((o) => {\n                const w = Math.abs(mapRange(0, o.startLength, 1, riverWeight, o.points.length));\n                pointPathPA(ctx)(o.points, outlineColor, w + outlineThickness / 2);\n            });\n            const points = chaikinSmooth(r.points, riverSmoothing);\n            pointPathPA(ctx)(points, outlineColor, riverWeight + outlineThickness);\n        });\n\n        // main\n        rivers.forEach((r, i) => {\n            r.oxbows.forEach((o) => {\n                const w = Math.abs(mapRange(0, o.startLength, riverWeight / 2, riverWeight, o.points.length));\n                pointPathPA(ctx)(o.points, oxbowColor, w);\n            });\n            const points = chaikinSmooth(r.points, riverSmoothing);\n            pointPathPA(ctx)(points, riverColor, riverWeight, false, false);\n        });\n\n        time++;\n        return 1;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","// https://thecodingtrain.com/challenges/coding-in-the-cabana/005-marching-squares.html\n// https://editor.p5js.org/codingtrain/sketches/18cjVoAX1\n// http://jamie-wong.com/2014/08/19/metaballs-and-marching-squares/\n// https://en.wikipedia.org/wiki/Marching_squares#/media/File:Marching_squares_algorithm.svg\n\nimport { strokeColor } from '../canvas/canvas';\nimport { line } from '../canvas/primatives';\nimport { createRectGrid } from '../math/Rectangle';\nimport { mapRange } from '../math/math';\n\nexport const isoline = (context, rect, smooth = false) => {\n    const drawLine = (p1, p2) => line(context)(p1.x, p1.y, p2.x, p2.y);\n    const sides = rect.getSides(smooth);\n    switch (rect.cornerState) {\n        case 1:\n        case 14:\n            drawLine(sides.left, sides.bottom);\n            break;\n        case 2:\n        case 13:\n            drawLine(sides.bottom, sides.right);\n            break;\n        case 3:\n        case 12:\n            drawLine(sides.left, sides.right);\n            break;\n        case 4:\n            drawLine(sides.top, sides.right);\n            break;\n        case 5:\n            drawLine(sides.left, sides.top);\n            drawLine(sides.bottom, sides.right);\n            break;\n        case 6:\n        case 9:\n            drawLine(sides.top, sides.bottom);\n            break;\n        case 7:\n        case 8:\n            drawLine(sides.left, sides.top);\n            break;\n        case 10:\n            drawLine(sides.left, sides.bottom);\n            drawLine(sides.top, sides.right);\n            break;\n        case 11:\n            drawLine(sides.top, sides.right);\n            break;\n        case 0:\n        case 15:\n        default:\n            break;\n    }\n};\n\n/*\nconst isolowColor = flatColor.clone().darken(2);\nconst isohighColor = backgroundColor.clone().brighten(10);\n\nconst slices = [\n    { nmin: -7, nmax: 7, omin: -1, omax: 1, color: isohighColor },\n    { nmin: -6, nmax: -4, omin: -1, omax: 1, color: isolowColor },\n    { nmin: -4, nmax: -2, omin: -1, omax: 1, color: isolowColor },\n    { nmin: -2, nmax: 0, omin: -1, omax: 1, color: isolowColor },\n    { nmin: 0, nmax: 2, omin: -1, omax: 1, color: isohighColor },\n    { nmin: 2, nmax: 4, omin: -1, omax: 1, color: isohighColor },\n    { nmin: 4, nmax: 6, omin: -1, omax: 1, color: isohighColor },\n];\n\nrenderIsolines(context, canvas, noiseFn, 0, 80, true, slices);\n */\n\nexport const renderIsolines = (\n    context,\n    { width, height },\n    noiseFn2d,\n    margin = 0,\n    resolution = 50,\n    smoothing = true,\n    slices\n) => {\n    const squares = createRectGrid(margin, margin, width - margin * 2, height - margin * 2, resolution, resolution);\n    slices = slices || [{ nmin: -7, nmax: 7, omin: -1, omax: 1 }];\n    squares.forEach((s) => {\n        slices.forEach((slice) => {\n            s.corners = [s.cornerAPx, s.cornerBPx, s.cornerCPx, s.cornerDPx].map((c) => {\n                const noise = noiseFn2d(c.x, c.y);\n                return mapRange(slice.nmin, slice.nmax, slice.omin, slice.omax, noise);\n            });\n            if (slice.color) {\n                strokeColor(context)(slice.color);\n            }\n            isoline(context, s, smoothing);\n        });\n    });\n};\n","import { lerp } from './math';\nimport { point, midPoint } from './points';\nimport { randomNormalWholeBetween } from './random';\n\n// a...d are 0 or 1\nconst getStateFromCorners = (a, b, c, d) => a * 8 + b * 4 + c * 2 + d * 1;\n\n// a and b are -1 to 1\nconst lerpAmt = (a, b) => (1 - (a + 1)) / (b + 1 - (a + 1));\n\n/*\nCorners and lerps are for marching squares\n\nCorners\n  a---b\n  |   |\n  d---c\n */\nexport class Rectangle {\n    constructor(x, y, width, height, corners) {\n        this.x = x;\n        this.y = y;\n        this.w = width;\n        this.h = height;\n        this.x2 = x + width;\n        this.y2 = y + height;\n        this.mx = midPoint(this.x, this.x2);\n        this.my = midPoint(this.y, this.y2);\n\n        // -1 to 1 noise values\n        this.corners = corners || [0, 0, 0, 0];\n        // array of subdivisions, [rect]\n        this.children = [];\n        // 1 or -1\n        this.phase = 1;\n        this.depth = 0;\n    }\n\n    // 0 to 15\n    get cornerState() {\n        return getStateFromCorners(\n            Math.ceil(this.corners[0]),\n            Math.ceil(this.corners[1]),\n            Math.ceil(this.corners[2]),\n            Math.ceil(this.corners[3])\n        );\n    }\n\n    get cornerAverage() {\n        return (this.average = (this.corners[0] + this.corners[2] + this.corners[2] + this.corners[3]) / 4);\n    }\n\n    get center() {\n        return point(this.mx, this.my);\n    }\n\n    get midTop() {\n        return point(this.mx, this.y);\n    }\n\n    get midRight() {\n        return point(this.x2, this.my);\n    }\n\n    get midBottom() {\n        return point(this.mx, this.y2);\n    }\n\n    get midLeft() {\n        return point(this.x, this.my);\n    }\n\n    get lerpTop() {\n        return point(lerp(this.x, this.x2, lerpAmt(this.corners[0], this.corners[1])), this.y);\n    }\n\n    get lerpRight() {\n        return point(this.x2, lerp(this.y, this.y2, lerpAmt(this.corners[1], this.corners[2])));\n    }\n\n    get lerpBottom() {\n        return point(lerp(this.x, this.x2, lerpAmt(this.corners[3], this.corners[2])), this.y2);\n    }\n\n    get lerpLeft() {\n        return point(this.x, lerp(this.y, this.y2, lerpAmt(this.corners[0], this.corners[3])));\n    }\n\n    get cornerAPx() {\n        return point(this.x, this.y);\n    }\n\n    get cornerBPx() {\n        return point(this.x2, this.y);\n    }\n\n    get cornerCPx() {\n        return point(this.x2, this.y2);\n    }\n\n    get cornerDPx() {\n        return point(this.x, this.y2);\n    }\n\n    getSides(smooth) {\n        return {\n            top: smooth ? this.lerpTop : this.midTop,\n            right: smooth ? this.lerpRight : this.midRight,\n            bottom: smooth ? this.lerpBottom : this.midBottom,\n            left: smooth ? this.lerpLeft : this.midLeft,\n        };\n    }\n\n    randomPointInside() {\n        const x = randomNormalWholeBetween(0, this.w) + this.x;\n        const y = randomNormalWholeBetween(0, this.h) + this.y;\n        return point(x, y);\n    }\n\n    contains(p) {\n        // return p.x >= this.x - this.w && p.x < this.x + this.w && p.y >= this.y - this.h && p.y < this.y + this.h;\n        return p.x >= this.x && p.x < this.x + this.w && p.y >= this.y && p.y < this.y + this.h;\n    }\n\n    intersects(rect) {\n        return !(\n            rect.x - rect.w > this.x + this.w ||\n            rect.x + rect.w < this.x - this.w ||\n            rect.y - rect.h > this.y + this.h ||\n            rect.y + rect.h < this.y - this.h\n        );\n    }\n\n    subdivide() {\n        const halfW = this.w / 2;\n        const halfH = this.h / 2;\n\n        this.children.push(new Rectangle(this.x, this.y, halfW, halfH));\n        this.children.push(new Rectangle(this.x + halfW, this.y, halfW, halfH));\n        this.children.push(new Rectangle(this.x, this.y + halfH, halfW, halfH));\n        this.children.push(new Rectangle(this.x + halfW, this.y + halfH, halfW, halfH));\n        this.children.forEach((c) => {\n            c.phase *= -1;\n            c.parent = this;\n            c.depth = this.depth + 1;\n        });\n    }\n}\n\nexport class Square extends Rectangle {\n    constructor(x, y, size, corners = [0, 0, 0, 0]) {\n        super(x, y, size, size, corners);\n        this.size = size;\n    }\n}\n\nexport const createRectGrid = (x, y, w, h, cols = 2, rows = 2, colgap = 0, rowgap = 0) => {\n    const rects = [];\n    const colw = Math.round((w - (cols - 1) * colgap) / cols);\n    const rowh = Math.round((h - (rows - 1) * rowgap) / rows);\n\n    for (let i = 0; i < cols; i++) {\n        for (let j = 0; j < rows; j++) {\n            const rx = i * (colw + colgap) + x;\n            const ry = j * (rowh + rowgap) + y;\n            rects.push(new Rectangle(rx, ry, colw, rowh));\n        }\n    }\n\n    return rects;\n};\n","import { background } from '../rndrgen/canvas/canvas';\nimport { ratio, scale, orientation } from '../rndrgen/sketch';\nimport { bicPenBlue, paperWhite, get2Tone } from '../rndrgen/color/palettes';\n\nimport { truchet } from '../rndrgen/systems/truchetTiles';\nimport { createRectGrid, Rectangle } from '../rndrgen/math/Rectangle';\nimport { randomN, randomWholeBetween } from '../rndrgen/math/random';\nimport { point } from '../rndrgen/math/points';\nimport { flatDepthSortedAsc, quadTreeFromPoints } from '../rndrgen/math/QuadTree';\nimport { Bitmap } from '../rndrgen/canvas/Bitmap';\nimport sourcePng from '../../media/images/hi1.png';\n\nexport const truchetTiles = () => {\n    const config = {\n        name: 'multiscale-truchet-tiles',\n        ratio: ratio.square,\n        scale: scale.hidpi,\n        // fps: 1,\n    };\n\n    let canvasWidth;\n    let canvasHeight;\n\n    let margin = 100;\n\n    let quadtree;\n\n    const colors = get2Tone(5, 15);\n\n    const image = new Bitmap(sourcePng);\n\n    const setup = ({ canvas, context }) => {\n        canvasWidth = canvas.width;\n        canvasHeight = canvas.height;\n\n        image.init(canvas, context);\n\n        margin = canvasWidth / 10;\n\n        const boundary = new Rectangle(margin, margin, canvasWidth - margin * 2, canvasHeight - margin * 2);\n        // const points = [...Array(1000)].map((_) => point(randomN(canvasWidth), randomN(canvasHeight)));\n        // quadtree = quadTreeFromPoints(boundary, 4, points);\n\n        const points = image.thresholdAsPoints(150, 128);\n        quadtree = quadTreeFromPoints(boundary, 1, points);\n\n        // background(canvas, context)('white');\n    };\n\n    const draw = ({ canvas, context }) => {\n        background(canvas, context)(colors.light);\n\n        const max = randomWholeBetween(0, 15);\n\n        flatDepthSortedAsc(quadtree).forEach((q) => {\n            // assign a random pattern\n            q.boundary.motif = randomWholeBetween(0, max); // randomWholeBetween(0, 15);\n            // draw it\n            truchet(context, q.boundary, colors.dark, colors.light);\n        });\n\n        return -1;\n    };\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import tinycolor from 'tinycolor2';\nimport { line, circleFilled, rectFilled, rect, arcQuarter, circle } from '../canvas/primatives';\nimport { setContext } from '../canvas/canvas';\n\nexport const motifList = ['\\\\', '/', '-', '|', '+', '+.', 'x.', 'fnw', 'fne', 'fsw', 'fse', 'tn', 'ts', 'te', 'tw'];\n\n// http://archive.bridgesmathart.org/2018/bridges2018-39.pdf\n// https://observablehq.com/@osteele/truchet-carlson-tiles\n// https://christophercarlson.com/portfolio/multi-scale-truchet-patterns/\n// Scaling changes by a factor of 2, and the fore/back colors should swap at each change\nexport const truchet = (context, rectangle, fore = 'black', back = 'white') => {\n    const half = rectangle.w / 2;\n    const third = rectangle.w / 3;\n    const twoThirds = third * 2;\n    const sixth = rectangle.w / 6;\n\n    let foreColor = fore;\n    let backColor = back;\n\n    if (rectangle.phase < 0) {\n        foreColor = back;\n        backColor = fore;\n    }\n\n    context.beginPath();\n\n    setContext(context)({\n        strokeStyle: tinycolor(foreColor).toRgbString(),\n        fillStyle: tinycolor(foreColor).toRgbString(),\n        lineCap: 'butt',\n        lineWidth: third,\n        lineJoin: 'round',\n    });\n\n    rectFilled(context)(rectangle.x, rectangle.y, rectangle.w, rectangle.w, backColor);\n\n    const motif = motifList[rectangle.motif];\n\n    switch (motif) {\n        case '\\\\':\n            arcQuarter(context)(rectangle.x2, rectangle.y, half, Math.PI / 2);\n            arcQuarter(context)(rectangle.x, rectangle.y2, half, Math.PI * 1.5);\n            break;\n        case '/':\n            arcQuarter(context)(rectangle.x, rectangle.y, half, 0);\n            arcQuarter(context)(rectangle.x2, rectangle.y2, half, Math.PI);\n            break;\n        case '-':\n            line(context)(rectangle.x, rectangle.my, rectangle.x2, rectangle.my);\n            break;\n        case '|':\n            line(context)(rectangle.mx, rectangle.y, rectangle.mx, rectangle.y2);\n            break;\n        case '+':\n            line(context)(rectangle.x, rectangle.my, rectangle.x2, rectangle.my);\n            line(context)(rectangle.mx, rectangle.y, rectangle.mx, rectangle.y2);\n            break;\n        case '+.':\n            // default wing background\n            break;\n        case 'x.':\n            rectFilled(context)(rectangle.x, rectangle.y, rectangle.w, rectangle.w, foreColor);\n            break;\n        case 'fnw':\n            arcQuarter(context)(rectangle.x, rectangle.y, half, 0);\n            break;\n        case 'fne':\n            arcQuarter(context)(rectangle.x2, rectangle.y, half, Math.PI / 2);\n            break;\n        case 'fsw':\n            arcQuarter(context)(rectangle.x, rectangle.y2, half, Math.PI * 1.5);\n            break;\n        case 'fse':\n            arcQuarter(context)(rectangle.x2, rectangle.y2, half, Math.PI);\n            break;\n        case 'tn':\n            rectFilled(context)(rectangle.x, rectangle.y, rectangle.w, twoThirds, foreColor);\n            break;\n        case 'ts':\n            rectFilled(context)(rectangle.x, rectangle.y + third, rectangle.w, twoThirds, foreColor);\n            break;\n        case 'te':\n            rectFilled(context)(rectangle.x + third, rectangle.y, twoThirds, rectangle.w, foreColor);\n            break;\n        case 'tw':\n            rectFilled(context)(rectangle.x, rectangle.y, twoThirds, rectangle.w, foreColor);\n            break;\n        case 15:\n        default:\n            // \"x.\"\n            rectFilled(context)(rectangle.x, rectangle.y, rectangle.w, rectangle.w, foreColor);\n            break;\n    }\n\n    circleFilled(context)(rectangle.x, rectangle.y, third, backColor);\n    circleFilled(context)(rectangle.x2, rectangle.y, third, backColor);\n    circleFilled(context)(rectangle.x2, rectangle.y2, third, backColor);\n    circleFilled(context)(rectangle.x, rectangle.y2, third, backColor);\n\n    circleFilled(context)(rectangle.mx, rectangle.y, sixth, foreColor);\n    circleFilled(context)(rectangle.x2, rectangle.my, sixth, foreColor);\n    circleFilled(context)(rectangle.mx, rectangle.y2, sixth, foreColor);\n    circleFilled(context)(rectangle.x, rectangle.my, sixth, foreColor);\n\n    // rect(context)(rectangle.x + 1, rectangle.y + 1, rectangle.w - 2, rectangle.h - 2, 1, 'green');\n\n    context.closePath();\n};\n\nconst endLineMult = 1.25;\n\nconst sqTileLinesHorizontal = (context) => (\n    x,\n    y,\n    w,\n    h,\n    lineWidth,\n    num = 5,\n    margin = 0,\n    foreColor = 'black',\n    backColor = 'white'\n) => {\n    context.save();\n    const region = new Path2D();\n    region.rect(x, y, w, h);\n    context.clip(region);\n\n    y += margin;\n    h -= margin * 2;\n\n    const x2 = x + w;\n    const gap = h / num;\n\n    context.strokeStyle = tinycolor(foreColor).toRgbString();\n    rectFilled(context)(x, y, w, h, backColor);\n\n    for (let i = 0; i < num + 1; i++) {\n        let iy = y + i * gap;\n\n        if (i === 0 || i === num) {\n            context.lineWidth = lineWidth * endLineMult;\n            if (i === 0) {\n                iy += lineWidth * endLineMult;\n            } else {\n                iy -= lineWidth * endLineMult;\n            }\n        } else {\n            context.lineWidth = lineWidth;\n        }\n\n        line(context)(x, iy, x2, iy);\n    }\n\n    context.restore();\n};\n\nconst sqTileLinesVertical = (context) => (\n    x,\n    y,\n    w,\n    h,\n    lineWidth,\n    num = 5,\n    margin = 0,\n    foreColor = 'black',\n    backColor = 'white'\n) => {\n    if (margin) {\n        sqTileLinesHorizontal(x, y, w, h, lineWidth, num, margin, foreColor, backColor);\n    }\n\n    context.save();\n    const region = new Path2D();\n    region.rect(x, y, w, h);\n    context.clip(region);\n\n    x += margin;\n    w -= margin * 2;\n\n    const y2 = y + h;\n    const gap = w / num;\n\n    context.strokeStyle = tinycolor(foreColor).toRgbString();\n    rectFilled(context)(x, y, w, h, backColor);\n\n    for (let i = 0; i < num + 1; i++) {\n        let ix = x + i * gap;\n\n        if (i === 0 || i === num) {\n            context.lineWidth = lineWidth * endLineMult;\n            if (i === 0) {\n                ix += lineWidth * endLineMult;\n            } else {\n                ix -= lineWidth * endLineMult;\n            }\n        } else {\n            context.lineWidth = lineWidth;\n        }\n\n        line(context)(ix, y, ix, y2);\n    }\n\n    context.restore();\n};\n\nconst rings = (context) => (x, y, r, lineWidth, num = 5, margin = 0, foreColor = 'black', backColor = 'white') => {\n    r -= margin * 2;\n\n    const gap = r / num;\n\n    context.strokeStyle = tinycolor(foreColor).toRgbString();\n    if (backColor) circleFilled(context)(x, y, r + margin, backColor);\n\n    for (let i = 0; i < num + 1; i++) {\n        let ir = i * gap + margin;\n\n        if (i === 0 || i === num) {\n            context.lineWidth = lineWidth * endLineMult;\n            if (i === 0) {\n                ir += lineWidth * endLineMult;\n            } else {\n                ir -= lineWidth * endLineMult;\n            }\n        } else {\n            context.lineWidth = lineWidth;\n        }\n\n        circle(context)(x, y, ir, foreColor);\n    }\n};\n\nconst sqTileCornerArc = (context) => (\n    x,\n    y,\n    r,\n    lineWidth,\n    c = 0,\n    num = 5,\n    margin = 0,\n    foreColor = 'black',\n    backColor = 'white'\n) => {\n    context.save();\n    const region = new Path2D();\n    region.rect(x, y, r, r);\n    context.clip(region);\n\n    context.strokeStyle = tinycolor(foreColor).toRgbString();\n    rectFilled(context)(x, y, r, r, backColor);\n\n    const x2 = x + r;\n    const y2 = y + r;\n\n    if (c === 0) {\n        // top left\n        rings(context)(x2, y2, r, lineWidth, num, margin, foreColor, null);\n        rings(context)(x, y, r, lineWidth, num, margin, foreColor, backColor);\n    } else if (c === 1) {\n        // top right\n        rings(context)(x, y2, r, lineWidth, num, margin, foreColor, null);\n        rings(context)(x2, y, r, lineWidth, num, margin, foreColor, backColor);\n    } else if (c === 2) {\n        // bottom left\n        rings(context)(x, y2, r, lineWidth, num, margin, foreColor, null);\n        rings(context)(x2, y, r, lineWidth, num, margin, foreColor, backColor);\n    } else {\n        // bottom right\n        rings(context)(x, y, r, lineWidth, num, margin, foreColor, null);\n        rings(context)(x2, y2, r, lineWidth, num, margin, foreColor, backColor);\n    }\n\n    context.restore();\n};\n\nexport const motifListInterlaced = ['-', '|', 'fnw', 'fne', 'fsw', 'fse'];\n\n// https://www.reddit.com/r/generative/comments/ju1xjr/truchet_tiles_pen_plot/\nexport const truchetInterlaced = (\n    context,\n    rectangle,\n    lines = 3,\n    lineWidth = 1,\n    margin = 0,\n    fore = 'black',\n    back = 'white'\n) => {\n    let foreColor = fore;\n    let backColor = back;\n\n    if (rectangle.phase < 0) {\n        foreColor = back;\n        backColor = fore;\n    }\n\n    context.beginPath();\n\n    setContext(context)({\n        strokeStyle: tinycolor(foreColor).toRgbString(),\n        fillStyle: tinycolor(foreColor).toRgbString(),\n        lineCap: 'butt',\n        lineWidth,\n        lineJoin: 'bevel',\n    });\n\n    rectFilled(context)(rectangle.x, rectangle.y, rectangle.w, rectangle.w, backColor);\n\n    const motif = motifListInterlaced[rectangle.motif];\n\n    switch (motif) {\n        case '-':\n            sqTileLinesVertical(context)(\n                rectangle.x,\n                rectangle.y,\n                rectangle.w,\n                rectangle.w,\n                lineWidth,\n                lines,\n                margin,\n                foreColor,\n                back\n            );\n            sqTileLinesHorizontal(context)(\n                rectangle.x,\n                rectangle.y,\n                rectangle.w,\n                rectangle.w,\n                lineWidth,\n                lines,\n                margin,\n                foreColor,\n                back\n            );\n            break;\n        case '|':\n            sqTileLinesHorizontal(context)(\n                rectangle.x,\n                rectangle.y,\n                rectangle.w,\n                rectangle.w,\n                lineWidth,\n                lines,\n                margin,\n                foreColor,\n                back\n            );\n            sqTileLinesVertical(context)(\n                rectangle.x,\n                rectangle.y,\n                rectangle.w,\n                rectangle.w,\n                lineWidth,\n                lines,\n                margin,\n                foreColor,\n                back\n            );\n            break;\n        case 'fnw':\n            sqTileCornerArc(context)(\n                rectangle.x,\n                rectangle.y,\n                rectangle.w,\n                lineWidth,\n                0,\n                lines,\n                margin,\n                foreColor,\n                back\n            );\n            break;\n        case 'fne':\n            sqTileCornerArc(context)(\n                rectangle.x,\n                rectangle.y,\n                rectangle.w,\n                lineWidth,\n                1,\n                lines,\n                margin,\n                foreColor,\n                back\n            );\n            break;\n        case 'fsw':\n            sqTileCornerArc(context)(\n                rectangle.x,\n                rectangle.y,\n                rectangle.w,\n                lineWidth,\n                2,\n                lines,\n                margin,\n                foreColor,\n                back\n            );\n            break;\n        case 'fse':\n            sqTileCornerArc(context)(\n                rectangle.x,\n                rectangle.y,\n                rectangle.w,\n                lineWidth,\n                3,\n                lines,\n                margin,\n                foreColor,\n                back\n            );\n            break;\n        default:\n            // \"x.\"\n            break;\n    }\n\n    context.closePath();\n};\n","/*\nOriginally from Coding Train https://www.youtube.com/watch?v=OJxEcs0w_kE&t=0s parts 1 and 2\nCommunity version - https://github.com/CodingTrain/QuadTree/blob/main/quadtree.js\nhttps://georgefrancis.dev/writing/generative-grid-layouts-with-quadtrees/\n */\n\nimport { Rectangle } from './Rectangle';\nimport { pixel, rect } from '../canvas/primatives';\nimport { randomWholeBetween } from './random';\nimport { truchet } from '../systems/truchetTiles';\n\n/*\nTODO\n- [ ] Max depth\n- [ ] margin between subdivisions\n\n\nCorners\nnw---ne\n|     |\nsw---se\n\nRect, corners\n  a---b\n  |   |\n  d---c\n*/\nexport class QuadTree {\n    constructor(boundary, capacity = 4, margin = 0, maxd = 0) {\n        this.boundary = boundary;\n        this.capacity = capacity;\n        this.points = [];\n        this.divided = false;\n\n        this.maxDepth = maxd;\n        this.margin = margin;\n\n        // 1 or -1\n        this.phase = 1;\n        this.depth = 0;\n\n        this.northwest = undefined;\n        this.northeast = undefined;\n        this.southwest = undefined;\n        this.southeast = undefined;\n    }\n\n    get subdivisions() {\n        return this.divided ? [this.northwest, this.northeast, this.southeast, this.southwest] : [];\n    }\n\n    subdivide() {\n        const { x, y, w, h } = this.boundary;\n\n        const halfW = w / 2 + this.margin;\n        const halfH = h / 2 + this.margin;\n\n        const divWidth = w / 2 - this.margin;\n        const divHeight = h / 2 - this.margin;\n\n        const nw = new Rectangle(x, y, divWidth, divHeight);\n        const ne = new Rectangle(x + halfW, y, divWidth, divHeight);\n        const sw = new Rectangle(x, y + halfH, divWidth, divHeight);\n        const se = new Rectangle(x + halfW, y + halfH, divWidth, divHeight);\n\n        this.northwest = new QuadTree(nw, this.capacity, this.margin, this.maxDepth);\n        this.northeast = new QuadTree(ne, this.capacity, this.margin, this.maxDepth);\n        this.southwest = new QuadTree(sw, this.capacity, this.margin, this.maxDepth);\n        this.southeast = new QuadTree(se, this.capacity, this.margin, this.maxDepth);\n\n        this.divided = true;\n\n        this.subdivisions.forEach((s) => {\n            s.phase = this.phase * -1;\n            s.depth = this.depth + 1;\n        });\n    }\n\n    insert(p) {\n        if (!this.boundary.contains(p)) {\n            return false;\n        }\n\n        if (this.points.length < this.capacity) {\n            this.points.push(p);\n            return true;\n        }\n\n        // if (this.maxDepth && this.depth === this.maxDepth) return;\n\n        if (!this.divided) {\n            this.subdivide();\n        }\n        return (\n            this.northwest.insert(p) || this.northeast.insert(p) || this.southwest.insert(p) || this.southeast.insert(p)\n        );\n    }\n\n    query(rectangle, arry = []) {\n        if (!this.boundary.intersects(rectangle)) return;\n\n        this.points.forEach((p) => {\n            if (rectangle.contains(p)) {\n                arry.push(p);\n            }\n        });\n\n        if (this.divided) {\n            this.subdivisions.forEach((s) => {\n                s.query(rectangle, arry);\n            });\n        }\n\n        return arry;\n    }\n\n    flatten(arry = []) {\n        if (this.divided) {\n            this.subdivisions.forEach((s) => {\n                s.flatten(arry);\n            });\n        } else {\n            arry.push(this);\n        }\n\n        return arry;\n    }\n}\n\nexport const flatDepthSortedAsc = (qt) => qt.flatten().sort((a, b) => a.depth - b.depth);\n\nexport const quadTreeFromPoints = (boundary, capacity, points, margin = 0, maxd = 0) => {\n    const quadtree = new QuadTree(boundary, capacity, margin, maxd);\n    points.forEach((p) => quadtree.insert(p));\n    return quadtree;\n};\n\nexport const show = (context) => (qt, showParents = false, pointColor = 'blue', p1color = 'red', p2color = 'red') => {\n    qt.points.forEach((p) => {\n        pixel(context)(p.x, p.y, pointColor, 'circle', 1);\n    });\n\n    const { x, y, w, h } = qt.boundary;\n\n    if (qt.divided) {\n        if (showParents) {\n            if (qt.phase === -1) {\n                rect(context)(x, y, w, h, 1, p1color);\n            } else {\n                rect(context)(x, y, w, h, 1, p2color);\n            }\n        }\n        qt.subdivisions.forEach((s) => {\n            show(context)(s, showParents, pointColor, p1color, p2color);\n        });\n    } else if (qt.phase === -1) {\n        rect(context)(x, y, w, h, 1, p1color);\n    } else {\n        rect(context)(x, y, w, h, 1, p2color);\n    }\n};\n","import { background } from '../rndrgen/canvas/canvas';\nimport { instagram, largePrint } from '../rndrgen/sketch';\nimport { bicPenBlue, paperWhite, get2Tone } from '../rndrgen/color/palettes';\n\nimport { truchet, truchetInterlaced } from '../rndrgen/systems/truchetTiles';\nimport { createRectGrid, Rectangle } from '../rndrgen/math/Rectangle';\nimport { random, randomWholeBetween } from '../rndrgen/math/random';\nimport { point } from '../rndrgen/math/points';\nimport { flatDepthSortedAsc, quadTreeFromPoints } from '../rndrgen/math/QuadTree';\nimport { rect } from '../rndrgen/canvas/primatives';\n\n// https://www.reddit.com/r/generative/comments/ju1xjr/truchet_tiles_pen_plot/\n\nexport const truchetTiles02 = () => {\n    const config = { name: 'interlaced-truchet-tiles', ...instagram };\n\n    let canvasWidth;\n    let canvasHeight;\n\n    let margin = 100;\n\n    let rectangles;\n\n    const colors = get2Tone(5, 15);\n\n    const tiles = randomWholeBetween(5, 30) * 2;\n    const lines = randomWholeBetween(2, 8);\n    const gap = randomWholeBetween(0, 8);\n\n    const setup = ({ canvas, context }) => {\n        canvasWidth = canvas.width;\n        canvasHeight = canvas.height;\n\n        margin = Math.round(canvasWidth / 18);\n\n        // 35x21 for a3plus\n        rectangles = createRectGrid(margin, margin, canvasWidth - margin * 2, canvasHeight - margin * 2, tiles, tiles);\n    };\n\n    let motif = 0;\n\n    const nextMotif = (_) => {\n        const n = motif++;\n        if (motif === 6) motif = 0;\n        return n;\n    };\n\n    const draw = ({ canvas, context }) => {\n        background(canvas, context)(colors.light);\n\n        rectangles.forEach((r) => {\n            r.motif = randomWholeBetween(0, 6);\n            truchetInterlaced(context, r, lines, 0.5, gap, colors.dark, colors.light);\n        });\n\n        return -1;\n    };\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import tinycolor from 'tinycolor2';\nimport { mapRange } from '../rndrgen/math/math';\nimport { background, strokeDash } from '../rndrgen/canvas/canvas';\nimport { instagram, largePrint, orientation, ratio, scale } from '../rndrgen/sketch';\nimport { bicPenBlue, warmPink, warmWhite } from '../rndrgen/color/palettes';\nimport { MeanderingRiver, flowRightToMiddle, flowRight } from '../rndrgen/systems/MeanderingRiver';\nimport { chaikinSmooth } from '../rndrgen/math/segments';\nimport { simplexNoise2d, simplexNoise3d } from '../rndrgen/math/attractors';\nimport { randomNormalWholeBetween } from '../rndrgen/math/random';\nimport { createSplineFromPointArray } from '../rndrgen/math/points';\nimport { pointPathPA } from '../rndrgen/canvas/primatives';\nimport { renderIsolines } from '../rndrgen/systems/marchingSquares';\n\n/*\nMeandering River class at ../rndrgen/MeanderingRiver\n */\n\nconst createHorizontalPath = ({ width, height }, startX, startY, steps = 20) => {\n    const coords = [];\n    const incr = Math.round(width / steps);\n    const midx = width / 2;\n    for (let i = startX; i < width; i += incr) {\n        // greater variation in the middle\n        const midDist = Math.round(midx - Math.abs(i - midx));\n        const y = randomNormalWholeBetween(startY - midDist, startY + midDist);\n\n        coords.push([i, y]);\n    }\n    coords.push([width, startY]);\n    return coords;\n};\n\nexport const meanderingRiver03 = () => {\n    const config = { name: 'meandering-river-03', ...instagram };\n\n    let ctx;\n    let canvasMidX;\n    let canvasMidY;\n\n    const renderScale = config.scale; // 1 or 2\n    const renderSteps = renderScale * 4;\n\n    const outlineThickness = 3 * renderScale;\n    const riverSmoothing = 0;\n    const riverWeight = 10 * renderScale;\n    const rivers = [];\n    let time = 0;\n\n    const backgroundColor = warmPink;\n    const riverColor = warmPink.clone().brighten(10);\n    const oxbowColor = riverColor;\n    const outlineColor = bicPenBlue.clone().setAlpha(0.3);\n\n    const riverScale = 2;\n\n    let noiseScale = 0.006 / renderScale;\n    const noise = (x, y) => simplexNoise3d(x, y, time, noiseScale);\n    // const noise = (x, y) => simplexNoise2d(x, y, noiseScale);\n\n    const setup = ({ canvas, context }) => {\n        ctx = context;\n        canvasMidX = canvas.width / 2;\n        canvasMidY = canvas.height / 2;\n\n        const horizpoints = createSplineFromPointArray(createHorizontalPath(canvas, 0, canvasMidY, 15));\n\n        noiseScale /= riverScale * 2;\n\n        const horizontal = new MeanderingRiver(horizpoints, {\n            maxHistory: 15,\n            storeHistoryEvery: 15,\n            fixedEndPoints: 2,\n\n            oxbowProx: 3 * renderScale,\n            oxbowPointIndexProx: 3 * renderScale,\n\n            mixTangentRatio: 0.55,\n            mixMagnitude: 1 * riverScale,\n\n            measureCurveAdjacent: 4 * renderScale * riverScale,\n            curveSize: 2 * renderScale * riverScale,\n            pointRemoveProx: 3 * renderScale * riverScale,\n\n            // pushFlowVectorFn: flowRight,\n            // pushFlowVectorFn: flowRightToMiddle(0.9, canvasMidY),\n\n            // noiseFn: noise,\n            // noiseMode: 'flowInTo',\n            // noiseStrengthAffect: 5,\n            // mixNoiseRatio: 0.2,\n        });\n\n        rivers.push(horizontal);\n\n        // Run some steps before render to smooth lines\n        for (let i = 0; i < 50; i++) {\n            rivers.forEach((r) => {\n                r.step();\n            });\n        }\n\n        background(canvas, context)(backgroundColor);\n    };\n\n    const draw = ({ canvas, context }) => {\n        // step\n        rivers.forEach((r) => {\n            for (let i = 0; i < renderSteps; i++) {\n                r.step();\n            }\n        });\n\n        // outline\n        rivers.forEach((r, i) => {\n            r.oxbows.forEach((o) => {\n                const w = Math.abs(mapRange(0, o.startLength, 1, riverWeight, o.points.length));\n                pointPathPA(ctx)(o.points, outlineColor, w + outlineThickness / 2);\n            });\n            const points = chaikinSmooth(r.points, riverSmoothing);\n            pointPathPA(ctx)(points, outlineColor, riverWeight + outlineThickness);\n        });\n\n        // main\n        rivers.forEach((r, i) => {\n            r.oxbows.forEach((o) => {\n                const w = Math.abs(mapRange(0, o.startLength, riverWeight / 2, riverWeight, o.points.length));\n                pointPathPA(ctx)(o.points, oxbowColor, w);\n            });\n            const points = chaikinSmooth(r.points, riverSmoothing);\n            pointPathPA(ctx)(points, riverColor, riverWeight, false, false);\n        });\n\n        time += 0.1;\n        return 1;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import { sketch } from './sketch';\nimport { Timeline } from './animation/Timeline';\nimport { Bitmap } from './canvas/Bitmap';\nimport * as cntx from './canvas/canvas';\nimport * as primatives from './canvas/primatives';\nimport * as texture from './canvas/textures';\nimport * as text from './canvas/text';\nimport * as palette from './color/palettes';\nimport * as utils from './utils';\n\nconst version = '0.1.0';\n\nconst animation = { Timeline };\nconst canvas = { Bitmap, cntx, primatives, texture, text };\nconst color = { palette };\n\nexport { version, utils, sketch, animation, canvas, color };\n","/*\nCanvas animation timeline based on Canvas Sketch time keeping methods\nhttps://github.com/mattdesl/canvas-sketch/blob/master/docs/animated-sketches.md\n\nUsage:\n\nconst timeline = new Timeline(config.fps, 0, 5);\nconst t = toSinValue(timeline.playhead) * 0.1;\n// -1 if loops exceeded\ndraw -> return timeline.onFrame();\n\n */\n\nexport class Timeline {\n    constructor(fps, loop, duration) {\n        this.fps = fps || 30;\n        this.loop = loop || 0; // total loops\n        this.duration = duration || 1; // duration of each loop in seconds\n        this.totalLoopFrames = this.duration ? this.duration * this.fps : 1;\n        this.iterations = 0; // number of times drawn\n        this.time = 0; // elapsed time in seconds\n        this.playhead = 0; // current progress of the loop between 0 and 1\n        this.frame = 1; // frame of the loop\n        this.elapsedLoops = 0;\n        this.startTime = Date.now();\n    }\n\n    get elapsed() {\n        return Date.now() - this.startTime;\n    }\n\n    onFrame() {\n        this.iterations++;\n        // one frame\n        this.frame++;\n        this.playhead = this.frame / this.totalLoopFrames;\n        if (this.iterations % this.fps === 0) {\n            // a second elapsed\n            this.time++;\n            if (this.frame >= this.totalLoopFrames) {\n                // one loop duration passed\n                this.elapsedLoops++;\n                this.playhead = 0;\n                this.frame = 0;\n                if (this.loop && this.elapsedLoops >= this.loop) {\n                    console.log('End of loops');\n                    return -1;\n                }\n            }\n        }\n        return 1;\n    }\n}\n","import tinycolor from 'tinycolor2';\nimport { background } from '../rndrgen/canvas/canvas';\nimport { instagram, largePrint } from '../rndrgen/sketch';\nimport { Palette, paperWhite } from '../rndrgen/color/palettes';\nimport { circlePointsPA } from '../rndrgen/math/grids';\nimport { polygonPA, line, rect, pointPathPA } from '../rndrgen/canvas/primatives';\nimport { segmentFromPoint, segmentsFromPoints, segArrayToPointsArray } from '../rndrgen/math/segments';\nimport { pointObjectToPointArray } from '../rndrgen/math/points';\nimport { logInterval, uvFromAngle } from '../rndrgen/math/math';\nimport { randomNormalNumberBetween, randomNumberBetween } from '../rndrgen/math/random';\nimport sourcePng from '../../media/images/kristijan-arsov-woman-400.png';\nimport { Bitmap } from '../rndrgen/canvas/Bitmap';\nimport { createRectGrid } from '../rndrgen/math/Rectangle';\n\n// Tyler Hobbs how to hack a painting\n// https://youtu.be/5R9eywArFTE?t=789\n\nconst roughenPoly = (segPoly, detail = 3, maxV = 0.5, spread = 1) => {\n    const roughSegment = (seg) => {\n        const rMix = randomNormalNumberBetween(0.1, 1.9) + 0.1;\n        const rMag = randomNormalNumberBetween(0, seg.length * seg.variance) * spread;\n\n        // Technique from meander\n        const tangent = seg.start.sub(seg.end);\n        const biangle = tangent.angle() + 1.5708; // + 90 deg\n        const bitangent = uvFromAngle(biangle).setMag(1);\n        const a = tangent.normalize();\n        const b = bitangent.normalize();\n\n        const mVector = a.mix(b, rMix).setMag(rMag);\n        const newMid = seg.mid.add(mVector);\n\n        const sa = segmentFromPoint(seg.start, newMid);\n        const sb = segmentFromPoint(newMid, seg.end);\n        sa.variance = seg.variance * 1.1;\n        sb.variance = seg.variance * 1.1;\n        return [sa, sb];\n    };\n\n    const roughPolySegments = (segments, ittrs, step = 0) => {\n        let res = [];\n        for (let i = 0; i < segments.length; i++) {\n            const s = segments[i];\n            // Greater max variance = more spread\n            s.variance = s.variance || randomNumberBetween(0.1, maxV);\n            res = res.concat(roughSegment(s));\n        }\n        if (++step > ittrs) {\n            return res;\n        }\n        return roughPolySegments(res, ittrs, step);\n    };\n\n    return roughPolySegments(segPoly, detail);\n};\n\nconst waterColorBrush = (context) => (\n    x,\n    y,\n    size = 50,\n    color = 'black',\n    polySteps = 4,\n    layers = 10,\n    detail = 2,\n    spreadIncr = 0\n) => {\n    const maxVariance = 1.1;\n    const poly = circlePointsPA(x, y, size, Math.PI / polySteps, 0, true);\n    const segpoly = segmentsFromPoints(poly);\n    const startingPoly = roughenPoly(segpoly, detail, maxVariance);\n    const alphas = logInterval(layers, 1, 100).reverse();\n    color = tinycolor(color);\n\n    const strength = 1;\n    let spread = 1;\n    const alphaDiv = layers / 2;\n\n    let rough;\n    let points;\n    let currentColor;\n\n    for (let i = 0; i < layers; i++) {\n        rough = roughenPoly(startingPoly, detail, maxVariance, spread);\n        points = segArrayToPointsArray(rough);\n        currentColor = color.clone().setAlpha((alphas[i] * 0.01) / alphaDiv);\n        for (let s = 0; s < strength; s++) {\n            polygonPA(context)(points, currentColor);\n        }\n        spread += spreadIncr;\n    }\n\n    // pointPathPA(context)(points, color, 1);\n    // polygonPA(context)(segArrayToPointsArray(startingPoly), 'blue');\n    // polygonPA(context)(segArrayToPointsArray(segpoly), 'green');\n};\n\nexport const brushShape = () => {\n    const config = {\n        name: 'brush-shape',\n        ...instagram,\n    };\n\n    let ctx;\n    let canvasWidth;\n    let canvasHeight;\n    let canvasCenterX;\n    let canvasCenterY;\n    let startX;\n    let maxX;\n    let startY;\n    let maxY;\n    const margin = 25;\n    const renderScale = config.scale; // 1 or 2\n\n    const backgroundColor = paperWhite.clone();\n\n    const palette = new Palette();\n\n    const image = new Bitmap(sourcePng);\n\n    let rectangles;\n\n    const setup = ({ canvas, context }) => {\n        ctx = context;\n\n        canvasWidth = canvas.width;\n        canvasHeight = canvas.height;\n        canvasCenterX = canvas.width / 2;\n        canvasCenterY = canvas.height / 2;\n\n        startX = margin;\n        maxX = canvas.width - margin * 2;\n        startY = margin;\n        maxY = canvas.height - margin * 2;\n        image.init(canvas, context);\n\n        // rectangles = createRectGrid(margin, margin, canvasWidth - margin * 2, canvasHeight - margin * 2, tiles, tiles);\n        rectangles = createRectGrid(\n            margin,\n            margin,\n            canvasWidth - margin * 2,\n            canvasHeight - margin * 2,\n            3,\n            3,\n            margin,\n            margin\n        );\n\n        background(canvas, context)(backgroundColor.darken(10));\n    };\n\n    const draw = ({ canvas, context }) => {\n        // background(canvas, context)(backgroundColor);\n        // const brushColor = palette.oneOf().clone();\n\n        rectangles.forEach((r) => {\n            const x = r.mx;\n            const y = r.my;\n            const s = r.w * 0.4;\n            const brushColor = tinycolor.random(); // palette.oneOf();\n            // rect(context)(r.x, r.y, r.w, r.h, 1, tinycolor(`rgba(0,0,0,.1)`));\n            waterColorBrush(context)(x, y, s, brushColor, 6, 40, 2, 0.1);\n        });\n\n        // const x = randomNumberBetween(0, canvasWidth);\n        // const y = randomNumberBetween(0, canvasHeight);\n        // const s = randomNormalNumberBetween(5, 50);\n        // const brushColor = image.pixelColorFromCanvas(x, y);\n        // waterColorBrush(context)(x, y, s, brushColor, 4,10, 2);\n\n        return -1;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import { background } from '../rndrgen/canvas/canvas';\nimport { instagram, largePrint } from '../rndrgen/sketch';\nimport { bicPenBlue, paperWhite } from '../rndrgen/color/palettes';\nimport { circle, pixel } from '../rndrgen/canvas/primatives';\nimport { Circle } from '../rndrgen/math/Circle';\n\nconst drawCircle = (context) => ({ x, y, radius }, color = 'black') => {\n    circle(context)(x, y, radius, color);\n};\n\nexport const circles01 = () => {\n    const config = {\n        name: 'circles-01',\n        ...instagram,\n    };\n\n    let ctx;\n    let canvasWidth;\n    let canvasHeight;\n    let canvasCenterX;\n    let canvasCenterY;\n    let startX;\n    let maxX;\n    let startY;\n    let maxY;\n    const margin = 50;\n    const renderScale = config.scale; // 1 or 2\n\n    const backgroundColor = paperWhite.clone();\n    const foreColor = bicPenBlue.clone();\n\n    let c;\n    let r = 0;\n    const maxDepth = 3;\n\n    const setup = ({ canvas, context }) => {\n        ctx = context;\n\n        canvasWidth = canvas.width;\n        canvasHeight = canvas.height;\n        canvasCenterX = canvas.width / 2;\n        canvasCenterY = canvas.height / 2;\n\n        startX = margin;\n        maxX = canvas.width - margin * 2;\n        startY = margin;\n        maxY = canvas.height - margin * 2;\n\n        c = new Circle(canvasCenterX, canvasCenterY, canvasCenterX * 0.75);\n\n        background(canvas, context)(backgroundColor);\n\n        // drawCircle(context)(c, foreColor);\n    };\n\n    const subdiv = (c, depth = 0) => {\n        if (depth++ > maxDepth) return;\n        c.subdivide(r);\n        r += Math.PI / 8;\n        c.children.forEach((s) => {\n            subdiv(s, depth);\n        });\n    };\n\n    const drawSubdiv = (c) => {\n        drawCircle(ctx)(c, foreColor);\n        c.children.forEach((s) => {\n            drawSubdiv(s);\n        });\n    };\n\n    const draw = ({ canvas, context }) => {\n        // background(canvas, context)(backgroundColor);\n\n        // c.subdivide(2);\n\n        subdiv(c);\n\n        drawSubdiv(c);\n\n        // console.log(c);\n        // c.children.forEach((s) => {\n        //     drawCircle(context)(s);\n        // });\n\n        // const p = c.randomPointInside();\n        // pixel(context)(p.x, p.y, foreColor);\n\n        return -1;\n    };\n\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import { point, pointDistance } from './points';\nimport { randomNumberBetween, randomWholeBetween } from './random';\nimport { TAU } from './math';\n\nexport class Circle {\n    constructor(x, y, radius) {\n        this.x = x;\n        this.y = y;\n        this.radius = radius;\n        this.diameter = radius * 2;\n        // array of subdivisions\n        this.children = [];\n        // 1 or -1\n        this.phase = 1;\n        this.depth = 0;\n    }\n\n    get center() {\n        return point(this.x, this.y);\n    }\n\n    get midTop() {\n        return point(this.x, this.y - this.radius);\n    }\n\n    get midRight() {\n        return point(this.x + this.radius, this.y);\n    }\n\n    get midBottom() {\n        return point(this.x, this.y + this.radius);\n    }\n\n    get midLeft() {\n        return point(this.x - this.radius, this.y);\n    }\n\n    get bounds() {\n        return {\n            top: this.y - this.radius,\n            right: this.x + this.radius,\n            bottom: this.y + this.radius,\n            left: this.x - this.radius,\n        };\n    }\n\n    randomPointInside() {\n        const radius = randomWholeBetween(0, this.radius);\n        const angle = randomNumberBetween(0, TAU);\n        const x = radius * Math.cos(angle) + this.x;\n        const y = radius * Math.sin(angle) + this.y;\n        return point(x, y);\n    }\n\n    contains(p, buffer = 0, onEdge = false) {\n        const dist = Math.abs(pointDistance(p, this.center));\n        return onEdge ? dist <= this.radius + buffer : dist < this.radius + buffer;\n    }\n\n    intersects(circ, buffer = 0) {\n        const dist = Math.abs(pointDistance(this.center, circ.center));\n        const rads = this.radius + circ.radius;\n        return dist - buffer < rads;\n    }\n\n    // https://en.wikipedia.org/wiki/Circle_packing_in_a_circle\n    subdivide(radian = 0) {\n        const pos = this.radius * (2 / 3);\n        const radius = this.radius * (1 / 3);\n        const step = 1.5708; // 90 degrees\n        let center = radian;\n\n        this.children.push(new Circle(this.x, this.y, radius));\n\n        for (let i = 0; i < 4; i++) {\n            const x = pos * Math.cos(center) + this.x;\n            const y = pos * Math.sin(center) + this.y;\n            this.children.push(new Circle(x, y, radius));\n            center += step;\n        }\n\n        this.children.forEach((c) => {\n            c.phase *= -1;\n            c.parent = this;\n            c.depth = this.depth + 1;\n        });\n    }\n}\n\n// For circle packing\n// https://www.youtube.com/watch?v=QHEQuoIKgNE&t=1s\nexport class PackCircle extends Circle {\n    constructor(x, y, r) {\n        super(x, y, r);\n        this.growing = true;\n    }\n\n    grow() {\n        if (this.growing) this.radius += 1;\n    }\n\n    edges(rect) {\n        const b = this.bounds;\n        return b.left < rect.x || b.right > rect.x2 || b.top < rect.y || b.bottom > rect.y2;\n    }\n}\n","import { background } from '../rndrgen/canvas/canvas';\nimport { instagram } from '../rndrgen/sketch';\nimport { bicPenBlue, paperWhite } from '../rndrgen/color/palettes';\nimport { circle } from '../rndrgen/canvas/primatives';\nimport { PackCircle } from '../rndrgen/math/Circle';\nimport { Rectangle } from '../rndrgen/math/Rectangle';\nimport { randomCircleFill } from '../rndrgen/systems/CirclePackingRandom';\n\nconst drawCircle = (context) => ({ x, y, radius }, color = 'black') => {\n    circle(context)(x, y, radius, color);\n};\n\n// https://www.youtube.com/watch?v=QHEQuoIKgNE&t=1s\n\n/*\nRandom space filling\n */\n\nexport const circlePacking01 = () => {\n    const config = {\n        name: 'circle-packing-01',\n        ...instagram,\n    };\n\n    let ctx;\n    let canvasWidth;\n    let canvasHeight;\n    let canvasCenterX;\n    let canvasCenterY;\n    let startX;\n    let maxX;\n    let startY;\n    let maxY;\n    const margin = 50;\n    const renderScale = config.scale; // 1 or 2\n\n    const backgroundColor = paperWhite.clone();\n    const foreColor = bicPenBlue.clone();\n\n    let canvasBounds;\n    let canvasCircle;\n\n    const fill = randomCircleFill(500);\n\n    const setup = ({ canvas, context }) => {\n        ctx = context;\n\n        canvasWidth = canvas.width;\n        canvasHeight = canvas.height;\n        canvasCenterX = canvas.width / 2;\n        canvasCenterY = canvas.height / 2;\n\n        canvasBounds = new Rectangle(0, 0, canvasWidth, canvasHeight);\n\n        canvasCircle = new PackCircle(canvasCenterX, canvasCenterY, canvasCenterX * 0.75);\n\n        background(canvas, context)(backgroundColor);\n    };\n\n    const randomNewPoint = (_) => canvasCircle.randomPointInside();\n\n    const draw = ({ canvas, context }) => {\n        const result = fill.insert(randomNewPoint);\n\n        background(canvas, context)(backgroundColor);\n\n        fill.grow(canvasBounds);\n\n        fill.getCircles().forEach((c) => drawCircle(ctx)(c, foreColor));\n\n        return result;\n    };\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import { PackCircle } from '../math/Circle';\n\n// https://www.youtube.com/watch?v=QHEQuoIKgNE&t=1s\n\n/*\nRandom space filling\n */\n\nexport const randomCircleFill = (maxCircles = 100, maxAttempts = 10, newPerFrame = 10) => {\n    let circles = [];\n    // const newPerFrame = 10;\n    let newPlacementAttempts = 0;\n    // const maxAttempts = 10;\n    // const maxCircles = 300;\n\n    const getCircles = (_) => circles;\n    const setCircles = (c) => (circles = c);\n\n    const attemptNewCircle = (pointGenFn) => {\n        // const x = randomNumberBetween(0, canvasWidth);\n        // const y = randomNumberBetween(0, canvasHeight);\n\n        const p = pointGenFn();\n\n        let inside = false;\n\n        // no new circle inside of an existing one\n        circles.forEach((c) => {\n            if (c.contains(p, 5)) inside = true;\n        });\n\n        if (!inside) return new PackCircle(p.x, p.y, 2);\n        return null;\n    };\n\n    const insert = (pointGenFn) => {\n        for (let i = 0; i < newPerFrame; i++) {\n            const newc = attemptNewCircle(pointGenFn);\n            if (newc) {\n                circles.push(newc);\n                if (circles.length > maxCircles) {\n                    console.log('Max circles');\n                    return -1;\n                }\n                newPlacementAttempts = 0;\n            } else if (++newPlacementAttempts > maxAttempts) {\n                console.log('Max attempts exceeded');\n                return -1;\n            }\n        }\n        return 1;\n    };\n\n    const grow = (edges) => {\n        circles.forEach((c) => {\n            if (c.growing) {\n                if (c.edges(edges)) {\n                    c.growing = false;\n                } else {\n                    circles.forEach((other) => {\n                        if (c.growing && c !== other) {\n                            if (c.intersects(other, 2)) {\n                                c.growing = false;\n                            }\n                        }\n                    });\n                }\n            }\n            c.grow();\n        });\n    };\n\n    return {\n        insert,\n        grow,\n        getCircles,\n        setCircles,\n    };\n};\n","import { background } from '../rndrgen/canvas/canvas';\nimport { instagram } from '../rndrgen/sketch';\nimport { bicPenBlue, paperWhite } from '../rndrgen/color/palettes';\nimport { circle, circleFilled } from '../rndrgen/canvas/primatives';\nimport { PackCircle } from '../rndrgen/math/Circle';\nimport { Rectangle } from '../rndrgen/math/Rectangle';\nimport { randomCircleFill } from '../rndrgen/systems/CirclePackingRandom';\nimport sourcePng from '../../media/images/kristijan-arsov-woman-400.png';\nimport { Bitmap } from '../rndrgen/canvas/Bitmap';\nimport { flatDepthSortedAsc, quadTreeFromPoints, show } from '../rndrgen/math/QuadTree';\nimport { randomNormalNumberBetween, randomNumberBetween, randomWholeBetween } from '../rndrgen/math/random';\n\nconst drawCircle = (context) => ({ x, y, radius }, color = 'black') => {\n    circleFilled(context)(x, y, radius, color);\n};\n\n// https://www.youtube.com/watch?v=QHEQuoIKgNE&t=1s\n\n/*\nRandom space filling\n */\n\nexport const circlePacking02 = () => {\n    const config = {\n        name: 'circle-packing-02',\n        ...instagram,\n    };\n\n    let ctx;\n    let canvasWidth;\n    let canvasHeight;\n    let canvasCenterX;\n    let canvasCenterY;\n    let startX;\n    let maxX;\n    let startY;\n    let maxY;\n    const margin = 50;\n    const renderScale = config.scale; // 1 or 2\n\n    const backgroundColor = paperWhite.clone().darken(80);\n    const foreColor = bicPenBlue.clone();\n\n    const image = new Bitmap(sourcePng);\n\n    let canvasBounds;\n    let canvasCircle;\n    let quadtree;\n\n    const fill = randomCircleFill(10000, 500);\n\n    const setup = ({ canvas, context }) => {\n        ctx = context;\n\n        canvasWidth = canvas.width;\n        canvasHeight = canvas.height;\n        canvasCenterX = canvas.width / 2;\n        canvasCenterY = canvas.height / 2;\n\n        canvasBounds = new Rectangle(0, 0, canvasWidth, canvasHeight);\n        canvasCircle = new PackCircle(canvasCenterX, canvasCenterY, canvasCenterX * 0.75);\n\n        image.init(canvas, context);\n        // const points = image.thresholdAsPoints(200, 130);\n        // quadtree = quadTreeFromPoints(canvasBounds, 10, points);\n\n        const res = canvasWidth / 5;\n        image.findEdges(2, false);\n        image.resetImageData();\n\n        const points = image.thresholdAsPoints(res, 110, true);\n        quadtree = quadTreeFromPoints(canvasBounds, 6, points);\n\n        image.showToCanvas(res);\n        // show(context)(quadtree);\n\n        const startingCircles = [];\n        flatDepthSortedAsc(quadtree).forEach((q) => {\n            const rad = Math.max(q.boundary.w / 5, 1);\n            const radDif = q.boundary.w / 2 - rad;\n            const x = q.boundary.mx + randomNormalNumberBetween(-1 * radDif, radDif);\n            const y = q.boundary.my + randomNormalNumberBetween(-1 * radDif, radDif);\n            startingCircles.push(new PackCircle(x, y, rad));\n        });\n        fill.setCircles(startingCircles);\n\n        background(canvas, context)(backgroundColor.setAlpha(0.8));\n    };\n\n    const randomNewPointInCircle = (_) => canvasCircle.randomPointInside();\n    const randomNewPointInCanvas = (_) => ({\n        x: randomNumberBetween(0, canvasWidth),\n        y: randomNumberBetween(0, canvasHeight),\n    });\n\n    const draw = ({ canvas, context }) => {\n        const result = fill.insert(randomNewPointInCanvas);\n\n        // background(canvas, context)(backgroundColor);\n\n        fill.grow(canvasBounds);\n\n        fill.getCircles().forEach((c) => drawCircle(ctx)(c, image.pixelColorFromCanvas(c.x, c.y)));\n\n        return result;\n    };\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n","import { background } from '../rndrgen/canvas/canvas';\nimport { ratio, scale, orientation } from '../rndrgen/sketch';\nimport { bicPenBlue, paperWhite } from '../rndrgen/color/palettes';\nimport { Rectangle } from '../rndrgen/math/Rectangle';\nimport { pixel, rect } from '../rndrgen/canvas/primatives';\nimport { QuadTree, quadTreeFromPoints, show } from '../rndrgen/math/QuadTree';\nimport { Bitmap } from '../rndrgen/canvas/Bitmap';\nimport { initialize } from '../rndrgen/canvas/EdgeDetect';\nimport sourcePng from '../../media/images/kristijan-arsov-woman-400.png';\n\nexport const bitmapTest01 = () => {\n    const config = {\n        name: 'bitmapTest01',\n        ratio: ratio.square,\n        scale: scale.standard,\n    };\n\n    let ctx;\n    let canvasWidth;\n    let canvasHeight;\n    let canvasCenterX;\n    let canvasCenterY;\n\n    const backgroundColor = paperWhite.clone();\n    const foreColor = bicPenBlue.clone();\n\n    let quadtree;\n\n    const image = new Bitmap(sourcePng);\n\n    let imageThresholdPoints;\n\n    let boundary;\n\n    const showPoints = (points, color = 'red') =>\n        points.forEach((p) => {\n            pixel(ctx)(p.x, p.y, color, 'circle', 1);\n        });\n\n    const setup = ({ canvas, context }) => {\n        ctx = context;\n\n        canvasWidth = canvas.width;\n        canvasHeight = canvas.height;\n        canvasCenterX = canvas.width / 2;\n        canvasCenterY = canvas.height / 2;\n\n        image.init(canvas, context, false);\n\n        boundary = new Rectangle(0, 0, canvasWidth, canvasHeight);\n        // imageThresholdPoints = image.thresholdAsPoints(100, 128, true);\n        // quadtree = quadTreeFromPoints(boundary, 4, imageThresholdPoints);\n\n        // background(canvas, context)(backgroundColor);\n    };\n\n    const draw = ({ canvas, context }) => {\n        // background(canvas, context)(backgroundColor);\n\n        const res = canvasWidth / 5;\n        image.findEdges(25, 'white', 'black');\n        const t = image.thresholdAsPoints(res, 100, false);\n        background(canvas, context)(backgroundColor);\n        // image.resetImageData();\n        // image.showToCanvas(res);\n\n        quadtree = quadTreeFromPoints(boundary, 1, t);\n        // show(context)(quadtree);\n        showPoints(t);\n\n        return -1;\n    };\n    return {\n        config,\n        setup,\n        draw,\n    };\n};\n"],"names":[],"version":3,"file":"index.824b0574.js.map","sourceRoot":"/__parcel_source_root/"}