var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "textStyles", ()=>textStyles
);
parcelHelpers.export(exports, "drawTextFilled", ()=>drawTextFilled
);
parcelHelpers.export(exports, "setTextAlignLeftTop", ()=>setTextAlignLeftTop
);
parcelHelpers.export(exports, "setTextAlignAllCenter", ()=>setTextAlignAllCenter
);
var _tinycolor2 = require("tinycolor2");
var _tinycolor2Default = parcelHelpers.interopDefault(_tinycolor2);
var _canvas = require("./canvas");
const textStyles = {
    size: (s)=>`${s * _canvas.contextScale}px "Helvetica Neue",Helvetica,Arial,sans-serif`
    ,
    sansHelvetica: (s)=>`${s * _canvas.contextScale}px "Helvetica Neue",Helvetica,Arial,sans-serif`
    ,
    monoCourier: (s)=>`${s * _canvas.contextScale}px "Courier New", Courier, "Lucida Sans Typewriter", "Lucida Typewriter", monospace`
    ,
    monoLucidia: (s)=>`${s * _canvas.contextScale}px "Lucida Sans Typewriter", "Lucida Console", monaco, "Bitstream Vera Sans Mono", monospace`
    ,
    serifGeorgia: (s)=>`${s * _canvas.contextScale}px Georgia, Times, "Times New Roman", serif`
    ,
    default: '16px "Helvetica Neue",Helvetica,Arial,sans-serif',
    small: '12px "Helvetica Neue",Helvetica,Arial,sans-serif'
};
const drawTextFilled = (context)=>(text, x, y, color, style)=>{
        context.fillStyle = _tinycolor2Default.default(color).toRgbString();
        context.font = style || textStyles.sansHelvetica(16);
        context.fillText(text, x, y);
        // https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics
        return context.measureText(text);
    }
;
const setTextAlignLeftTop = (context)=>{
    context.textAlign = 'left';
    context.textBaseline = 'top';
};
const setTextAlignAllCenter = (context)=>{
    context.textAlign = 'center';
    context.textBaseline = 'middle';
};
