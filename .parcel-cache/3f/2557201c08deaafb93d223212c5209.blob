var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "defaultValue", ()=>defaultValue
);
parcelHelpers.export(exports, "first", ()=>first
);
parcelHelpers.export(exports, "middle", ()=>middle
);
parcelHelpers.export(exports, "last", ()=>last
);
parcelHelpers.export(exports, "limitArrayLen", ()=>limitArrayLen
);
parcelHelpers.export(exports, "getArrayValuesFromStart", ()=>getArrayValuesFromStart
);
parcelHelpers.export(exports, "getArrayValuesFromEnd", ()=>getArrayValuesFromEnd
);
const defaultValue = (obj, key, value)=>obj.hasOwnProperty(key) ? obj[key] : value
;
const first = (arry)=>arry[0]
;
const middle = (arry)=>arry.slice(1, arry.length - 2)
;
const last = (arry)=>arry[arry.length - 1]
;
const limitArrayLen = (arr)=>{
    const arrLength = arr.length;
    if (arrLength > MAX_COORD_HISTORY) arr.splice(0, arrLength - MAX_COORD_HISTORY);
    return arr;
};
const getArrayValuesFromStart = (arr, start, len)=>{
    const values = [];
    let index = start;
    for(let i = 0; i < len; i++){
        values.push(arr[index--]);
        if (index < 0) index = arr.length - 1;
    }
    return values;
};
const getArrayValuesFromEnd = (arr, start, len)=>{
    const values = [];
    let index = start;
    for(let i = 0; i < len; i++){
        values.push(arr[index++]);
        if (index === arr.length) index = 0;
    }
    return values;
};
