var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
/*
Explorations with generative code
*/ var _normalizeCss = require("normalize.css");
var _normalizeCssDefault = parcelHelpers.interopDefault(_normalizeCss);
var _sketch = require("./lib/sketch");
var _variationsIndex = require("./variationsIndex");
var _meanderingRiver01 = require("./released/meandering-river-01");
var _marchingSquares = require("./experiments/marching-squares");
const experimentalVariation = undefined;
// const experimentalVariation = marchingSquares;
const s = _sketch.sketch();
const saveCanvasCapture = (_)=>{
    console.log('Saving capture');
    const imageURI = s.canvas().toDataURL('image/png');
    document.getElementById('download').setAttribute('download', `${s.variationName()}.png`);
    document.getElementById('download').href = imageURI;
};
document.getElementById('download').addEventListener('click', saveCanvasCapture);
window.addEventListener('keydown', (e)=>{
    if (e.key === 's') document.getElementById('download').click();
});
const setNote = (note)=>document.getElementById('note').innerText = note
;
const getQueryVariable = (variable)=>{
    const query = window.location.search.substring(1);
    const vars = query.split('&');
    for(let i = 0; i < vars.length; i++){
        const pair = vars[i].split('=');
        if (pair[0] === variable) return pair[1];
    }
    return false;
};
let variationKey = getQueryVariable('variation');
const variationKeys = Object.keys(_variationsIndex.variationsIndex);
variationKey = variationKey || variationKeys[variationKeys.length - 1];
if (getQueryVariable('variation') && _variationsIndex.variationsIndex.hasOwnProperty(variationKey)) {
    const vToRun = _variationsIndex.variationsIndex[variationKey];
    setNote(vToRun.note);
    s.run(vToRun.sketch);
} else if (experimentalVariation !== undefined) {
    s.run(experimentalVariation);
    setNote('Current experiment ...');
} else {
    const vToRun = _variationsIndex.variationsIndex[variationKeys.length];
    setNote(vToRun.note);
    s.run(vToRun.sketch);
}
